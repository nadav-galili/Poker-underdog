{"version":3,"sources":["components/footer.jsx","components/common/pageHeader.jsx","components/home.jsx","components/sideNavbar.jsx","services/httpService.js","services/gameService.js","components/newMainTable/clockSpinner.jsx","components/newMainTable/byMonthsDashboard.jsx","components/common/input.jsx","components/common/form.jsx","services/userService.js","components/signin.jsx","components/logout.jsx","components/forms/editUser.jsx","components/common/protectedRoutes.jsx","services/teamService.js","components/games/cashingDetails.jsx","components/team.jsx","components/myTeams.jsx","components/editPlayer.jsx","components/editTeam.jsx","services/h2hService.js","components/player.jsx","components/selectPlayers.jsx","components/joinTeam.jsx","services/sideBetsService.js","components/topStats/playerCard.jsx","components/topStats/successp.jsx","components/topStats/currMonth.jsx","components/topStats/profits.jsx","components/h2h/h2hGameEnd.jsx","components/mainLastGame.jsx","components/h2h/h2hCard.jsx","components/games/allGames.jsx","components/topStats/statsPerHour.jsx","components/sidebets/sidebetsCard.jsx","components/mainTable.jsx","components/demo.jsx","components/about.jsx","components/personalStats/totalPersonal.jsx","components/personalStats/myStats.jsx","components/topStats/cardTable.jsx","components/topStats/successCard.jsx","components/topStats/currMonthCard.jsx","components/topStats/profitsCard.jsx","components/forms/signUp.jsx","components/h2h/h2hGame.jsx","components/games/newGame.jsx","components/newMainTable/newStatsCard/newStatsCard.jsx","components/gameEnd.jsx","components/h2h/h2hGameCard.jsx","components/h2h/h2hTable.jsx","components/forms/teamSignUp.jsx","components/games/editGames.jsx","components/personalStats/playerStats.jsx","components/topStats/statsPerHourCard.jsx","components/topStats/newMonthCard.jsx","components/topStats/monthlyStats.jsx","components/sidebets/sideBetsVsCardPlayer.jsx","components/sidebets/sideBetsVsCard.jsx","components/sidebets/sidebetsMain.jsx","components/sidebets/masterPlayer.jsx","components/sidebets/choosePlayer.jsx","components/sidebets/selectedPlayer.jsx","components/sidebets/newSideBet.jsx","components/newMainTable/singleGame.jsx","components/newMainTable/allGamesList.jsx","components/newMainTable/bigCard.jsx","components/newMainTable/playersImages.jsx","components/newMainTable/smallCard.jsx","components/newMainTable/sideBetsCard.jsx","components/newMainTable/totalStatsForTeam.jsx","components/newMainTable/seasonPick.jsx","components/newMainTable/smallMonthsCard.jsx","components/newMainTable/newMainTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","id","src","alt","Date","getFullYear","href","PageHeader","titleText","Home","to","apiImage","SideNavBar","props","state","menuOpen","this","setState","isOpen","onStateChange","handleStateChange","onClick","closeMenu","user","_id","Fragment","Avatar","details","image","name","nickName","React","Component","axios","defaults","headers","common","localStorage","getItem","interceptors","response","use","error","status","toast","Promise","reject","get","post","put","patch","delete","lastGame","teamId","http","apiUrl","table","personal","uId","monthsData","month","cardsData","cardName","successp","profits","newGame","game","gameById","gameId","updateGame","inProgress","totalCash","personalGames","allGamesByTeam","totalGames","agg_profits","statsPerHour","updateManager","manager","fetchCashingDetails","previousRank","monthlyStats","monthlyByPlayer","sideBets","getTotalStatsForTeam","dates","startDate","endDate","getCardStats","stats","getAllMonthsByMonth","getAllGamesByTeam","pagination","page","GetSeasonYears","getStatsByMonth","console","log","ClockSpinner","SpinnerDotted","size","thickness","speed","color","ByMonthsDashboard","match","params","seasonDates","URLSearchParams","window","location","pathname","useState","monthsStats","setMonthsStats","getMonthName","monthNumber","date","setMonth","toLocaleString","useEffect","a","gameService","allGamesByMonth","data","getAllMonthsStats","length","map","players","totalProfit","roundedAvgCashing","Input","label","rest","htmlFor","Form","errors","validate","Joi","schema","abortEarly","item","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","type","onChange","tokenKey","email","password","setItem","token","login","loginGoogle","getCurrentUser","jwt","jwtDecode","ex","logout","removeItem","getJwt","getUserDetails","editUserDetails","editUserForUpdate","getPlayerDetails","Signin","string","required","min","handleLogin","googleData","userService","profileObj","tokenId","clientId","onSuccess","onSubmit","autoComplete","method","renderInput","renderButton","Logout","validationSchema","Yup","EditUser","me","setMe","getUser","meData","values","onSubmitProps","setSubmitting","FormData","append","setErrors","savedValues","enableReinitialize","initialValues","validateOnMount","formik","component","event","setFieldValue","target","files","isValid","isSubmitting","ProtectedRoute","render","currentUser","from","createTeam","team","getMyTeam","getTeam","editTeam","deleteTeam","getTeamByNumber","teamNumber","removePlayerFromTeam","playerId","getTeamForSideBets","userId","newGetTeam","CashingDetails","updated","cashing","setCashing","fetchDetails","getCashingDetails","cashing_details","cash","playerName","playerCashing","time","hour","minute","second","hour12","Team","removeTeam","teamid","livePlayers","setLivePlayers","liveGame","setliveGame","buttons","setButtons","captain","filter","user_id","sort","b","getLiveGame","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","teamService","reload","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","teamImage","width","height","data-toggle","data-placement","takecontrol","style","backgroundImage","createdAt","toLocaleDateString","player","MyTeams","teams","setTeams","setUser","fetchTeams","chosenTeam","myTeams","EditPlayer","userImage","max","uri","allow","history","replace","handleCancel","push","mapToViewModel","newH2h","getByGameId","updateH2h","getPointsByPlayer","pId","getPointsByTeam","teamAllGames","addPlayersH2h","Player","selectPlayers","selected","find","SelectPlayers","setData","setSelected","started","setStarted","Audio","play","team_name","team_id","game_manager","res","h2hService","getGameManager","fetchPlayers","teamName","cashInHand","numOfCashing","profit","JoinTeam","createSideBet","sideBet","getSidebetsForMainTable","gotOfferedSidebet","acceptSideBet","sideBetId","dismissSideBet","getAllApprovedSideBets","getExtraDetais","sideBetMasterPlayerId","sideBetsSlavePlayerId","sideBetStartDate","sideBetEndDate","getAllDismissedSideBets","PlayerCard","header","teamimage","SuccessP","CurrMonth","cMonth","currentMonth","Profits","H2hGameEnd","setPlayers","ended","setEnded","last","_","flattenDeep","points","lastH2h","Rank","SpinnerInfinity","secondaryColor","enabled","MainLastgame","setLastGame","getLastGame","updatedAt","H2hCard","AllGames","games","setGames","gamesData","setGamesData","setPage","pages","setPages","loading","setLoading","perPage","all","allGames","d","Math","floor","getGames","created","items","slice","itemsDates","previousLabel","nextLabel","pageCount","onPageChange","pageC","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","g","gameRank","SideBetsCard","MainTable","avgprofit","setAvgprofit","totalgames","setTotalgames","avgcashing","setAvgcashing","setSuccess","gamesprofit","setGamesprofit","h2h","setH2h","monthleader","setMonthleader","setProfits","setTeamImage","setTotalCash","setTotalGames","setstatsPerHour","setSideBets","relativeTime","require","teamPic","shift","totoalg","numOfGames","totalG","avgp","avgProfit","avgP","gamep","gamesWithProfit","gameP","successPc","successPercentage","successP","avgc","avgCashing","avgC","getTable","thisMonth","getMonth","results","currMonth","monthPlayed","currMonthLeader","dataByMonths","dataPerHour","sideBetsService","sideBetsData","gotOfferedSideBet","masterPlayer","sideBetSum","cancelButtonText","isDismissed","dayjs","daysFromGame","fromNow","SpinnerDiamond","motion","img","borderRadius","backgroundColor","animate","rotate","transition","duration","bounce","div","initial","opacity","delay","x","role","data-bs-dismiss","aria-label","aria-hidden","bet","slavePlayer","totalCashing","totalHours","toFixed","TotalGames","y","profitPerHour","avgPoints","Demo","Carousel","Item","Caption","About","TotalPersonal","MyStats","setStats","setPoints","setDetails","chartData","setChartData","chartDates","setChartDates","chartCashing","setChartCashing","currentMonthNumber","player_id","detailed","myDetailed","chartDetails","chartCash","forEach","substr","myData","myStats","getMydata","myPoints","delayed","labels","datasets","fill","borderColor","options","animation","onComplete","context","mode","dataIndex","datasetIndex","scales","beginAtZero","isEmpty","SpinnerCircular","firstName","lastName","maxProfit","minProfit","totalPoints","avgGameRank","CardTable","hero","setHero","previousPlayerRank","setPreviousPlayerRank","headerTitle","setHeaderTitle","teamImg","setTeamImg","dataChartDetails","setdataChartDetails","barChartDetails","setbarChartDetails","setHeroPreviousRank","previousHero","err","previousTableRank","merged","merge","keyBy","accu","barChart","borderWidth","cardTitle","dataChart","sum","reduce","partial_sum","percentageSum","percent","myHero","rank","ChartJS","register","ArcElement","Tooltip","Legend","currentTableRank","SuccessCard","CurrMonthCard","chosenMonth","mon","parse","ProfitsCard","aggregatedProfits","list","prop","Object","assign","handleDates","hasOwnProperty","SignUp","setFields","fields","givenName","familyName","now","fakeId","setUseGoogle","setToken","useGoogle","buttonText","H2hGame","setGame","playersInGame","gameForH2h","p","NewGame","setId","setManager","ac","AbortController","abort","takeControl","finishedGame","playerImage","imageUrl","imageWidth","imageHeight","imageAlt","showDenyButton","denyButtonColor","denyButtonText","__v","cashingDetails","isDenied","cashedOut","parseInt","cashOutTime","playerCashedOut","cashOutPlayer","indexOfLastPlayerCashing","el","lastIndexOf","playersLastCashing","splice","undoCashing","edit","editCashing","NewStatsCard","cardData","setCardData","cardHeader","setCardHeader","leaderData","setLeaderData","headerDetails","setHeaderDetails","setDates","query","search","dataParam","split","leaderParam","headerData","JSON","cardStats","getCardData","start","card","index","GameEnd","H2hGameCard","aGames","flatten","marginPagesDisplayed","H2hTable","TeamSignUp","teamDetails","setTeamDetails","EditGames","iframeUrl","PlayerStats","StatsPerHourCard","statsHour","setStatsHour","getStats","hoursPlayed","cashingPerHour","year","MonthlyStats","setMonthlyStats","dataByMonth","setDataByMonth","chartProfitsByPlayer","setChartProfitsByPlayer","monthlyStatsGroup","dataBySeperateMonth","chain","groupBy","key","chartProfits","random","toString","maintainAspectRatio","responsive","plugins","legend","display","SideBetsVsCardPlayer","sideBetDetail","leader","SideBetsVsCard","sideBetDetails","setSideBetDetails","extraDetails","getSideBetsExtraData","SidebetsMain","approvedSideBets","setApprovedSideBets","dismissedSideBets","setDismissedSideBets","getSideBets","Array","isArray","dissmissDate","MasterPlayer","ChoosePlayer","selectPlayer","SelectedPlayer","choosen","setSideBetSum","setStartDate","setEndDate","setMasterPlayer","getMasterPlayer","placeholder","getSideBetSum","getStartDate","getEndDate","sideBetSumAmount","NaN","Number","isInteger","moment","approvedBySlavePlayer","validateSideBet","NewSideBet","setTeam","selectedPlayer","setSelectedPlayer","sideBetTeamId","setSideBetTeamId","teamForSideBet","SingleGame","startTime","endTime","AllGamesList","setAllGames","getAllGames","BigCard","playersData","setCardStats","stringify","PlayersImages","SmallCard","extraHeader","getApprovedSideBets","TotalStatsForTeam","totalStats","totalHoursPlayed","lastGamePlayed","SeasonPick","updateSeasonDates","seasons","setSeasons","seasonPick","setSeasonPick","getSeasons","season","SmallMonthsCard","monthName","roundedAvgProfit","NewMainTable","setTotalStats","setSeasonDates","gameServices","border","ReactGA","initialize","pageview","App","fetchUser","pageWrapId","outerContainerId","EditTeam","sidebetsMain","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.223b511c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-wrap justify-content-around align-items-center\"\r\n      id=\"footer\"\r\n    >\r\n      <div className=\"logoImage \">\r\n        <img src={process.env.PUBLIC_URL + \"newIcon.jpeg\"} alt=\"logo\" />\r\n      </div>\r\n      <div className=\"copyrights \">\r\n        <p className=\"w-100\">\r\n          Poker-Underdog was created by Nadav Galili &copy;{\" \"}\r\n          {new Date().getFullYear()}\r\n        </p>\r\n        <a href=\"https://www.nadav-galili.com\">www.nadav-galili.com</a>\r\n      </div>\r\n\r\n      <div className=\"social-icons \">\r\n        {/* <p className=\"mb-2\">Contact me at:</p> */}\r\n        <ul className=\"d-flex justify-content-around mt-4 p-0 \">\r\n          <li>\r\n            <a href=\"https://www.facebook.com/nadav.galili\">\r\n              <img\r\n                src=\"https://img.icons8.com/doodle/50/000000/facebook-new.png\"\r\n                alt=\"facebook\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://twitter.com/nadavgalili\">\r\n              <img\r\n                src=\"https://img.icons8.com/doodle/50/000000/twitter--v1.png\"\r\n                alt=\"twitter\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://www.linkedin.com/in/nadav-galili/\">\r\n              <img\r\n                src=\"https://img.icons8.com/doodle/50/000000/linkedin--v2.png\"\r\n                alt=\"linkedin\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/nadav-galili\">\r\n              <img\r\n                src=\"https://img.icons8.com/doodle/50/000000/github.png\"\r\n                alt=\"github\"\r\n              />\r\n            </a>\r\n          </li>\r\n\r\n          <li>\r\n            <a href=\"mailto:nadavg1000@gmail.com\">\r\n              <img\r\n                src=\"https://img.icons8.com/plasticine/50/000000/email.png\"\r\n                alt=\"email\"\r\n              />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst PageHeader = ({ titleText }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 mt-4 mb-0\">\r\n        <h1 className=\"m-0 pb-2 pt-2\">{titleText}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport { apiImage } from \"../config.json\";\r\nconst Home = () => {\r\n  return (\r\n    <section>\r\n      <div className=\"container pt-3\">\r\n        <PageHeader titleText=\"Poker-Underdog\" />\r\n        <div className=\"row home\">\r\n          <div className=\"col-12 col-md-6 homeText\" id=\"homeText\">\r\n            <p className=\"mt-4\">\r\n              Poker Underdog is an interactive platform for poker groups playing\r\n              together home games.\r\n            </p>\r\n            <p className=\"mt-4\">\r\n              In this app you can keep scores for your games and display\r\n              statistics for the whole group or individual stats.\r\n            </p>\r\n            <p className=\"mt-4\">\r\n              You can open or join as many groups as you like and stay updated\r\n              on each group individually and all these features are FREE!\r\n            </p>\r\n\r\n            <p>\r\n              Join us now and <br />\r\n              <Link to=\"/signup\" id=\"create\">\r\n                Create A New Account For Free\r\n              </Link>\r\n            </p>\r\n            <p>Already registerd?</p>\r\n            <p>\r\n              <Link to=\"/my-teams\" id=\"join\">\r\n                Pick a team and start a new game...ALL IN!\r\n              </Link>\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-3 col-12\" id=\"homeImg\">\r\n            <div className=\"homeImg1\">\r\n              <img src={`${apiImage}images/flying_cards.jpg`} alt=\"poker\" />\r\n            </div>\r\n            <div className=\"homeImg2\">\r\n              <img\r\n                src=\"https://www.telegraph.co.uk/content/dam/betting/Better-Collective/8-Classic-xlarge.jpg\"\r\n                alt=\"poker-cards\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-md-3 col-12 text-primary \">\r\n        <div className=\"vh-25 wh-25\">\r\n              <img\r\n                src={ process.env.PUBLIC_URL + \"/demo/dash3.JPG\"}\r\n                alt=\"poker-cards\"\r\n              />\r\n            </div>\r\n            </div> */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { apiImage } from \"../config.json\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { GiPokerHand } from \"react-icons/gi\";\r\nimport { HiOutlineUserGroup } from \"react-icons/hi\";\r\nimport { ImStatsBars } from \"react-icons/im\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { VscSignIn } from \"react-icons/vsc\";\r\nimport { FiUserPlus } from \"react-icons/fi\";\r\n\r\nclass SideNavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuOpen: false,\r\n    };\r\n  }\r\n\r\n  // This keeps your state in sync with the opening/closing of the menu\r\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\r\n  handleStateChange(state) {\r\n    this.setState({ menuOpen: state.isOpen });\r\n  }\r\n\r\n  // This can be used to close the menu, e.g. when a user clicks a menu item\r\n  closeMenu() {\r\n    this.setState({ menuOpen: false });\r\n  }\r\n\r\n  // This can be used to toggle the menu, e.g. when using a custom icon\r\n  // Tip: You probably want to hide either/both default icons if using a custom icon\r\n  // See https://github.com/negomi/react-burger-menu#custom-icons\r\n  toggleMenu() {\r\n    this.setState((state) => ({ menuOpen: !state.menuOpen }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Menu\r\n          isOpen={this.state.menuOpen}\r\n          onStateChange={(state) => this.handleStateChange(state)}\r\n        >\r\n          <Link\r\n            className=\"navbar-brand\"\r\n            to=\"/#\"\r\n            onClick={() => this.closeMenu()}\r\n          >\r\n            <img src={process.env.PUBLIC_URL + `newIcon.jpeg`} alt=\"logo\"></img>\r\n          </Link>\r\n          <NavLink\r\n            className=\"nav-link active d-flex\"\r\n            to=\"/about\"\r\n            onClick={() => this.closeMenu()}\r\n          >\r\n            <AiOutlineInfoCircle className=\"mt-2 me-2\" />\r\n            <p className=\"m-0\">About</p>\r\n          </NavLink>\r\n          <Link\r\n            onClick={() => this.closeMenu()}\r\n            className=\"nav-link d-flex\"\r\n            to=\"/demo\"\r\n          >\r\n            <GiPokerHand className=\"mt-2 me-2\" />\r\n            <p className=\"m-0\">Game Demo</p>\r\n          </Link>\r\n          {this.props.user && (\r\n            <NavLink\r\n              className=\"nav-item nav-link d-flex\"\r\n              onClick={() => this.closeMenu()}\r\n              to=\"/my-teams\"\r\n            >\r\n              <HiOutlineUserGroup className=\"mt-2 me-2\" />\r\n              <p className=\"m-0\">My Teams</p>\r\n            </NavLink>\r\n          )}\r\n\r\n          {this.props.user && (\r\n            <NavLink\r\n              className=\"nav-item nav-link d-flex\"\r\n              onClick={() => this.closeMenu()}\r\n              to={`/my-stats/${this.props.user._id}`}\r\n            >\r\n              <ImStatsBars className=\"mt-2 me-2\" />\r\n              <p className=\"m-0\">Personal Stats</p>\r\n            </NavLink>\r\n          )}\r\n          {!this.props.user && (\r\n            <React.Fragment>\r\n              <NavLink\r\n                className=\"nav-item nav-link d-flex\"\r\n                to=\"/signin\"\r\n                onClick={() => this.closeMenu()}\r\n              >\r\n                <VscSignIn className=\"mt-2 me-2\" />\r\n                <p className=\"m-0\">Sign-In</p>\r\n              </NavLink>\r\n              <NavLink\r\n                className=\"nav-item nav-link d-flex\"\r\n                to=\"/signup\"\r\n                onClick={() => this.closeMenu()}\r\n              >\r\n                <FiUserPlus className=\"mt-2 me-2\" />\r\n                <p className=\"m-0\">Sign-Up</p>\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {this.props.user && (\r\n            <React.Fragment>\r\n              <div className=\"userDetails nav-item nav-link d-flex pb-0\">\r\n                <Avatar\r\n                  src={`${apiImage}${this.props.details.image}`}\r\n                  alt={this.props.details.name}\r\n                />\r\n                <p className=\"ms-2 text-primary\">\r\n                  {this.props.details.nickName}\r\n                </p>\r\n              </div>\r\n              <NavLink\r\n                className=\"nav-item nav-link d-flex pt-0\"\r\n                to=\"/logout\"\r\n                onClick={() => this.closeMenu()}\r\n              >\r\n                <FiLogOut className=\"mt-2 me-2\" />\r\n                <p className=\"m-0\">Log out</p>\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideNavBar;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = getJwt();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError = error.response && error.response.status >= 403;\r\n\r\n  if (expectedError) toast.error(\"An unexpected error occurrred.\");\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete,\r\n};\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function lastGame(teamId) {\r\n    return http.get(`${apiUrl}/games/last-game/${teamId}`);\r\n}\r\n\r\nexport function table(teamId) {\r\n    return http.get(`${apiUrl}/games/table/${teamId}`);\r\n}\r\n\r\nexport function personal(uId) {\r\n    return http.get(`${apiUrl}/games/personal/${uId}`);\r\n}\r\n\r\nexport function personalGames(uId) {\r\n    return http.get(`${apiUrl}/games/personalGames/${uId}`);\r\n}\r\n\r\nexport function monthsData(teamId, month) {\r\n    return http.get(`${apiUrl}/games/byMonths/${month}/${teamId}`);\r\n}\r\n\r\nexport function statsPerHour(teamId) {\r\n    return http.get(`${apiUrl}/games/statsPerHour/${teamId}`);\r\n}\r\nexport function successp(teamId) {\r\n    return http.get(`${apiUrl}/games/success-p/${teamId}`);\r\n}\r\nexport function cardsData(teamId, cardName) {\r\n    return http.get(`${apiUrl}/games/${cardName}/${teamId}`);\r\n}\r\n\r\nexport function profits(teamId) {\r\n    return http.get(`${apiUrl}/games/profits/top-ten/${teamId}`);\r\n}\r\n\r\nexport function agg_profits(teamId) {\r\n    return http.get(`${apiUrl}/games/agg_profits/top-ten/${teamId}`);\r\n}\r\n\r\nexport function newGame(game) {\r\n    return http.post(`${apiUrl}/games`, game);\r\n}\r\n\r\nexport function gameById(gameId) {\r\n    return http.get(`${apiUrl}/games/${gameId}`);\r\n}\r\n\r\nexport function updateGame(gameId, game) {\r\n    return http.put(`${apiUrl}/games/${gameId}`, game);\r\n}\r\nexport function inProgress(teamId) {\r\n    return http.get(`${apiUrl}/games/true/${teamId}`);\r\n}\r\n\r\nexport function totalCash(teamId) {\r\n    return http.get(`${apiUrl}/games/total/cash/${teamId}`);\r\n}\r\n\r\nexport function allGamesByTeam(teamId) {\r\n    return http.get(`${apiUrl}/games/teams/byTeamId/${teamId}`);\r\n}\r\n\r\nexport function totalGames(teamId) {\r\n    return http.get(`${apiUrl}/games/totalGames/${teamId}`);\r\n}\r\n\r\nexport function updateManager(id, manager) {\r\n    return http.put(`${apiUrl}/games/updateManager/${id}`, manager);\r\n}\r\n\r\nexport function fetchCashingDetails(gameId) {\r\n    return http.get(`${apiUrl}/games/cashingDetails/${gameId}`);\r\n}\r\n\r\nexport function previousRank(teamId) {\r\n    return http.get(`${apiUrl}/games/previousRank/${teamId}`);\r\n}\r\n\r\nexport function monthlyStats(teamId) {\r\n    return http.get(`${apiUrl}/games/monthlyStats/${teamId}`);\r\n}\r\n\r\nexport function monthlyByPlayer(teamId) {\r\n    return http.get(`${apiUrl}/games/monthlyByPlayer/${teamId}`);\r\n}\r\n\r\nexport function sideBets(teamId) {\r\n    return http.get(`${apiUrl}/games/sideBets/riko/${teamId}`);\r\n}\r\n\r\n//NEW SERVICES\r\n////////////////**************** */\r\n\r\nexport function getTotalStatsForTeam(teamId, dates = { startDate: null, endDate: null }) {\r\n    return http.get(\r\n        `${apiUrl}/games/newMainStats/totalStatsForTeam/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n    );\r\n}\r\n\r\nexport function getCardStats(teamId, stats, month = null, dates = { startDate: null, endDate: null }) {\r\n    if (stats === \"profitsStats\") {\r\n        return http.get(\r\n            `${apiUrl}/games/newMainStats/profitsStats/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n        );\r\n    }\r\n    if (stats === \"topTenProfits\") {\r\n        return http.get(\r\n            `${apiUrl}/games/newMainStats/topTenProfits/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n        );\r\n    }\r\n    if (stats === \"head2head\") {\r\n        return http.get(\r\n            `${apiUrl}/h2h/newMainStats/head2head/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n        );\r\n    }\r\n\r\n    if (stats === \"getHourlyStats\") {\r\n        return http.get(\r\n            `${apiUrl}/games/newMainStats/getHourlyStats/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n        );\r\n    }\r\n    // if (stats === \"getStatsByMonth\") {\r\n    //     return http.get(\r\n    //         `${apiUrl}/games/newMainStats/getStatsByMonth/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n    //     );\r\n    // }\r\n    if (stats === \"getTopComebacks\") {\r\n        return http.get(\r\n            `${apiUrl}/games/newMainStats/getTopComebacks/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n        );\r\n    }\r\n    if (stats === \"getWiningStreak\") {\r\n        return http.get(\r\n            `${apiUrl}/games/newMainStats/getWiningStreak/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n        );\r\n    }\r\n    if (stats === \"getThisMonthStats\") {\r\n        return http.get(`${apiUrl}/games/newMainStats/getThisMonthStats/${teamId}/${month}`);\r\n    }\r\n}\r\n\r\nexport function getStatsByMonth(teamId, dates = { startDate: null, endDate: null }) {\r\n    console.log(\"dates\", dates);\r\n    return http.get(\r\n        `${apiUrl}/games/newMainStats/getStatsByMonth/${teamId}?startDate=${dates?.startDate}&endDate=${dates?.endDate}`\r\n    );\r\n}\r\n\r\nexport function getAllMonthsByMonth(teamId) {\r\n    return http.get(`${apiUrl}/games/newMainStats/getAllMonthsByMonth/${teamId}`);\r\n}\r\n\r\nexport function getAllGamesByTeam(teamId, pagination, page, dates = { startDate: null, endDate: null }) {\r\n    return http.get(\r\n        `${apiUrl}/games/newMainStats/getAllGamesByTeam/${teamId}?pagination=${pagination}&page=${page}&startDate=${dates.startDate}&endDate=${dates.endDate}`\r\n    );\r\n}\r\n\r\nexport function GetSeasonYears(teamId) {\r\n    return http.get(`${apiUrl}/games/newMainStats/GetSeasonYear/${teamId}`);\r\n}\r\n\r\nexport default {\r\n    lastGame,\r\n    table,\r\n    personal,\r\n    monthsData,\r\n    cardsData,\r\n    successp,\r\n    profits,\r\n    newGame,\r\n    gameById,\r\n    updateGame,\r\n    inProgress,\r\n    totalCash,\r\n    personalGames,\r\n    allGamesByTeam,\r\n    totalGames,\r\n    agg_profits,\r\n    statsPerHour,\r\n    updateManager,\r\n    fetchCashingDetails,\r\n    previousRank,\r\n    monthlyStats,\r\n    monthlyByPlayer,\r\n    sideBets,\r\n    getTotalStatsForTeam,\r\n    getCardStats,\r\n    getAllMonthsByMonth,\r\n    getAllGamesByTeam,\r\n    GetSeasonYears,\r\n    getStatsByMonth,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { SpinnerDotted } from \"spinners-react\";\r\n\r\nconst ClockSpinner = () => {\r\n    return (\r\n        <div className=\"spinner my-5\">\r\n            <SpinnerDotted size={50} thickness={100} speed={100} color=\"rgba(0, 157, 255, 1)\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClockSpinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\nimport ClockSpinner from \"./clockSpinner\";\r\n\r\nconst ByMonthsDashboard = (props) => {\r\n    const teamId = props.match.params.teamId;\r\n    // const [wholeYear, setWholeYear] = useState({});\r\n    const params = new URLSearchParams(window.location.pathname);\r\n    const seasonDates = params.get(\"seasonDates\");\r\n    console.log(\"🚀 ~ file: byMonthsDashboard.jsx:14 ~ ByMonthsDashboard ~ seasonDates\", seasonDates);\r\n    const [monthsStats, setMonthsStats] = useState([]);\r\n    const getMonthName = (monthNumber) => {\r\n        const date = new Date();\r\n        date.setMonth(monthNumber - 1);\r\n\r\n        return date.toLocaleString(\"en-US\", { month: \"long\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function getAllMonthsStats() {\r\n            const { data: allGamesByMonth } = await gameService.getStatsByMonth(teamId, seasonDates);\r\n            console.log(\"🚀 ~ file: byMonthsDashboard.jsx:12 ~ getAllMonthsStats ~ allGamesByMonth\", allGamesByMonth);\r\n            setMonthsStats(allGamesByMonth);\r\n        }\r\n        getAllMonthsStats();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container pb-5\">\r\n            <PageHeader titleText=\"Stats By Months\" />\r\n            {monthsStats.length > 0 && (\r\n                <div className=\"row\">\r\n                    {monthsStats.map((month) => (\r\n                        <div className=\"col-4\">\r\n                            <div className=\"smallCardContainer\">\r\n                                <p className=\"text-center pt-2 bg-white newSmallCard\">{getMonthName(month._id)}</p>\r\n                                <div className=\"col-12 profitCard\">\r\n                                    <div className=\"Small\">\r\n                                        <div className=\"leaderImageSmall mx-auto\">\r\n                                            <img\r\n                                                src={`${apiImage}${month.players[0].image}`}\r\n                                                alt=\"leader\"\r\n                                                className=\"mt-1\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"leaderDetailSmall d-flex  flex-column text-center mt-1\">\r\n                                            <p className=\"leaderName\">1.{month.players[0].name}</p>\r\n                                            <p className=\"leaderProfit\">\r\n                                                Total Profit: <span>{month.players[0].totalProfit}</span>\r\n                                            </p>\r\n                                            <p className=\"\">Total Games: {month.players[0].totalGames}</p>\r\n                                            <p className=\"\">Avg Cashing: {month.players[0].roundedAvgCashing}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"bg-white fullTable\">\r\n                                    <Link\r\n                                        className=\"linkToNewCard\"\r\n                                        to={`/newMainTable/newStatsCard/${teamId}/?month=${\r\n                                            month._id\r\n                                        }&stats=getThisMonthStats&cardTitle=${getMonthName(\r\n                                            month._id\r\n                                        )} Stats&data=totalProfit,totalGames,avgCashing&leaderData=Total Profit, Total Games, Avg Cashing&&headerData=TP,TG,AC`}\r\n                                    >\r\n                                        View Full Table <AiOutlineArrowRight />\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {/* <PageHeader titleText=\"Stats By Months\" />\r\n            {wholeYear.length === 0 && <ClockSpinner />}\r\n            {wholeYear.length > 0 && wholeYear[0].length > 0 && (\r\n                <div className=\"row\">\r\n                    {wholeYear.map((month) => (\r\n                        <div className=\"col-4\">\r\n                            <div className=\"smallCardContainer\">\r\n                                <p className=\"text-center pt-2 bg-white newSmallCard\">\r\n                                    {new Date(month[0].monthPlayed).toLocaleDateString(\"en-US\", {\r\n                                        month: \"long\",\r\n                                    })}\r\n                                </p>\r\n                                <div className=\"col-12 profitCard\">\r\n                                    <div className=\"Smalll\">\r\n                                        <div className=\"leaderImageSmall mx-auto\">\r\n                                            <img\r\n                                                src={`${apiImage}${month[0]._id.image}`}\r\n                                                alt=\"leader\"\r\n                                                className=\"mt-1\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"leaderDetailSmall d-flex  flex-column text-center mt-1\">\r\n                                            <p className=\"leaderName\">1.{month[0]._id.name}</p>\r\n                                            <p className=\"leaderProfit\">\r\n                                                Total Profit: <span>{month[0].totalProfit}</span>\r\n                                            </p>\r\n                                            <p className=\"\">Total Games: {month[0].totalGames}</p>\r\n                                            <p className=\"\">Avg Cashing: {month[0].avgCashing}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"bg-white fullTable\">\r\n                                    <Link\r\n                                        className=\"linkToNewCard\"\r\n                                        to={`/newMainTable/newStatsCard/${teamId}/?month=${\r\n                                            month[0].monthPlayed\r\n                                        }&stats=getThisMonthStats&cardTitle=${new Date(\r\n                                            month[0].monthPlayed\r\n                                        ).toLocaleDateString(\"en-US\", {\r\n                                            month: \"long\",\r\n                                        })} Stats&data=totalProfit,totalGames,avgCashing&leaderData=Total Profit, Total Games, Avg Cashing&&headerData=TP,TG,AC`}\r\n                                    >\r\n                                        View Full Table <AiOutlineArrowRight />\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )} */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ByMonthsDashboard;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group \">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <span className=\"text-danger\">{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst tokenKey = \"token\";\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getUserDetails() {\r\n  return http.get(`${apiUrl}/users/me`);\r\n}\r\n\r\n//get other player stats for players-stats component\r\nexport function getPlayerDetails(uId) {\r\n  return http.get(`${apiUrl}/users/player-stats/${uId}`);\r\n}\r\n\r\nexport function editUserDetails(user) {\r\n  const uId = user._id;\r\n  // delete user._id;\r\n  return http.put(`${apiUrl}/users/${uId}`, user);\r\n}\r\n\r\nexport function editUserForUpdate(user, data) {\r\n  console.log(`sds`, user._id);\r\n  return http.put(`${apiUrl}/users/edit-user/${user._id}`, data);\r\n}\r\n\r\nexport async function login(email, password) {\r\n  const { data } = await http.post(`${apiUrl}/auth`, { email, password });\r\n  localStorage.setItem(tokenKey, data.token);\r\n}\r\n\r\nexport async function loginGoogle(email, token) {\r\n  const { data } = await http.post(`${apiUrl}/auth/google`, { email, token });\r\n  localStorage.setItem(tokenKey, data.token);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginGoogle,\r\n  getCurrentUser,\r\n  logout,\r\n  getJwt,\r\n  getUserDetails,\r\n  editUserDetails,\r\n  editUserForUpdate,\r\n  getPlayerDetails,\r\n};\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nclass Signin extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n  };\r\n\r\n  handleLogin = async (googleData) => {\r\n    try {\r\n      await userService.loginGoogle(\r\n        googleData.profileObj.email,\r\n        googleData.tokenId\r\n      );\r\n\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: ex.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { email, password } = this.state.data;\r\n    try {\r\n      await userService.login(email, password);\r\n      //let details = await userService.getCurrentUser();\r\n\r\n      window.location = \"/\";\r\n\r\n      // setTimeout(() => {\r\n      //   this.props.history.replace(`/#/my-stats/${details._id}`);\r\n      // }, 5000);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: ex.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Sign-In\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p className=\"text-primary\">\r\n              You can sign-in here with your account!\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <GoogleLogin\r\n          clientId=\"310842465793-hdu8fm8luvho3qds0ce4chg9c3696d4d.apps.googleusercontent.com\"\r\n          onSuccess={this.handleLogin}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign-In\")}\r\n            </form>\r\n            <p className=\"selectP mt-5\">\r\n              *you can try a demo account-\r\n              <br />\r\n              Email:test@test.com\r\n              <br />\r\n              Password:123456\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import { Component } from \"react\";\r\nimport userService from \"../services/userService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    userService.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../services/userService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst validationSchema = Yup.object({\r\n  nickName: Yup.string().required(\"Required\"),\r\n  image: Yup.string(),\r\n});\r\n\r\nconst EditUser = () => {\r\n  const [me, setMe] = useState({});\r\n  useEffect(() => {\r\n    const meData = async () => {\r\n      let getUser = await userService.getUserDetails();\r\n      getUser = getUser.data;\r\n      setMe(getUser);\r\n    };\r\n    meData();\r\n  }, []);\r\n\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    onSubmitProps.setSubmitting(false);\r\n    let data = new FormData();\r\n    data.append(\"_id\", values._id);\r\n    data.append(\"nickName\", values.nickName);\r\n\r\n    if (values.image) {\r\n      data.append(\"image\", values.image);\r\n    }\r\n\r\n    try {\r\n      await userService.editUserForUpdate(values, data);\r\n      window.location = `#/my-stats/${values._id}`;\r\n      toast(\"The user has been updated!\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        setErrors({ email: \"Something went wrong\" });\r\n        console.error(ex);\r\n      }\r\n    }\r\n  };\r\n\r\n  const savedValues = {\r\n    nickName: me.nickName,\r\n    image: me.image,\r\n    _id: me._id,\r\n  };\r\n\r\n  const [errors, setErrors] = useState({ nickName: \"\", image: \"\" });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Edit User\" />\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={savedValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        validateOnMount\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <div className=\"row mt-2\">\r\n              <div className=\"col-10 col-lg-4\">\r\n                <Form>\r\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\r\n                    <label htmlFor=\"Nick Name\">Nick Name</label>\r\n                    <Field type=\"text\" id=\"nickName\" name=\"nickName\" />\r\n                    <ErrorMessage\r\n                      name=\"nickName\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"oldImage w-25 mb-2 \">\r\n                    <img\r\n                      src={`${apiImage}${savedValues.image}`}\r\n                      alt=\"user\"\r\n                      className=\"w-100 h-100\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-control d-flex flex-column bg-primary mb-3\">\r\n                    <label htmlFor=\"image\">Change Image</label>\r\n                    <input\r\n                      className=\"row mb-4 inputFile\"\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      onChange={(event) => {\r\n                        formik.setFieldValue(\"image\", event.target.files[0]);\r\n                      }}\r\n                    ></input>\r\n                    <span className=\"error\">{errors.image}</span>\r\n                  </div>\r\n                  <div className=\"buttons d-flex justify-content-between\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      disabled={!formik.isValid || formik.isSubmitting}\r\n                    >\r\n                      Update Details\r\n                    </button>\r\n                    <Link\r\n                      type=\"button\"\r\n                      className=\"btn btn-secondary  m-0\"\r\n                      to={`/my-stats/${me._id}`}\r\n                    >\r\n                      Not right now\r\n                    </Link>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport userService from \"../../services/userService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  const currentUser = userService.getCurrentUser();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!currentUser)\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function getTeam(teamId) {\r\n  return http.get(`${apiUrl}/teams/${teamId}`);\r\n}\r\n\r\n//\r\nexport function getTeamByNumber(teamNumber) {\r\n  return http.get(`${apiUrl}/teams/numbers/${teamNumber}`);\r\n}\r\n\r\nexport function editTeam(team) {\r\n  const teamId = team._id;\r\n  delete team._id;\r\n  return http.put(`${apiUrl}/teams/${teamId}`, team);\r\n}\r\n\r\nexport function createTeam(team) {\r\n  return http.post(`${apiUrl}/teams`, team);\r\n}\r\n\r\nexport function getMyTeam() {\r\n  return http.get(`${apiUrl}/teams/my-teams`);\r\n}\r\n// export function getTeam() {\r\n//   return http.get(`${apiUrl}/teams/my-teams`);\r\n// }\r\n\r\nexport function deleteTeam(teamId) {\r\n  return http.delete(`${apiUrl}/teams/${teamId}`);\r\n}\r\n\r\nexport function removePlayerFromTeam(teamNumber, playerId, teamId) {\r\n  return http.delete(\r\n    `${apiUrl}/teams/removePlayerFromTeam/${teamNumber}/${playerId}`,\r\n    { data: { teamId: teamId } }\r\n  );\r\n}\r\n\r\nexport function getTeamForSideBets(teamId, userId) {\r\n  return http.get(`${apiUrl}/teams/teamForSideBets/${teamId}/${userId}`);\r\n}\r\n\r\n///NEW SERVICES\r\n// ////**************************** */\r\n\r\nexport function newGetTeam(teamId) {\r\n  return http.get(`${apiUrl}/teams/newGetTeam/${teamId}`);\r\n}\r\n\r\nexport default {\r\n  createTeam,\r\n  getMyTeam,\r\n  getTeam,\r\n  editTeam,\r\n  deleteTeam,\r\n  getTeamByNumber,\r\n  removePlayerFromTeam,\r\n  getTeamForSideBets,\r\n  newGetTeam,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\n\r\nconst CashingDetails = ({ gameId, updated }) => {\r\n  const [cashing, setCashing] = useState([]);\r\n  useEffect(() => {\r\n    const getCashingDetails = async () => {\r\n      const fetchDetails = await gameService.fetchCashingDetails(gameId);\r\n      setCashing(fetchDetails.data);\r\n    };\r\n    getCashingDetails();\r\n  }, [updated.cashing_details.length]);\r\n\r\n  return (\r\n    <div className=\"col-10 col-lg-6 p-2\">\r\n      <PageHeader titleText=\"Cashing Details\" />\r\n      {cashing.length > 0 && (\r\n        <ul className=\" cashingDetails bg-white p-0\">\r\n          {cashing.map((cash) => (\r\n            <li className=\"d-flex\" id=\"cashingList\" key={cash.time}>\r\n              <p id=\"cashingName\">{cash.playerName}</p>\r\n              <p id=\"cashingAmmount\">{cash.playerCashing}</p>\r\n              <p id=\"cashingTime\">\r\n                {new Date(cash.time).toLocaleString(\"en-US\", {\r\n                  hour: \"2-digit\",\r\n                  minute: \"2-digit\",\r\n                  second: \"2-digit\",\r\n                  hour12: false,\r\n                })}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {cashing.length < 1 && <p className=\"text-primary\">No Cashing Yet</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CashingDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../config.json\";\r\nimport { GiCardKingClubs } from \"react-icons/gi\";\r\nimport { IoMdStats } from \"react-icons/io\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport gameService from \"../services/gameService\";\r\nimport teamService from \"../services/teamService\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\nimport CashingDetails from \"./games/cashingDetails\";\r\n\r\nconst Team = ({ team, removeTeam, teamid, user, teamNumber }) => {\r\n  const [livePlayers, setLivePlayers] = useState([]);\r\n  const [liveGame, setliveGame] = useState({});\r\n  const [buttons, setButtons] = useState(false);\r\n  let captain = team.players.filter((e) => e._id === team.user_id);\r\n\r\n  useEffect(() => {\r\n    const getLiveGame = async () => {\r\n      let game = await gameService.inProgress(teamid);\r\n      game = await game.data[0];\r\n      setliveGame(game);\r\n      game ? setLivePlayers(game.players) : setLivePlayers([]);\r\n      if (game && (game.isOpen || game.isOpen == null))\r\n        game = game.players.sort((a, b) => b.cashing - a.cashing);\r\n    };\r\n\r\n    getLiveGame();\r\n  }, []);\r\n\r\n  const displayRemoveButtons = () => {\r\n    setButtons(!buttons);\r\n  };\r\n\r\n  const removePlayerFromTeam = async (teamNumber, playerId, teamId) => {\r\n    Swal.fire({\r\n      title: \"Are you sure you want to remove this player from team?\",\r\n      text: \"you wont be able to cancel\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        await teamService.removePlayerFromTeam(teamNumber, playerId, teamid);\r\n        window.location.reload();\r\n        toast.success(\"Player removed from team:)\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\" col-12 col-md-6 col-lg-4 mt-3\">\r\n      <div className=\"card mb-3\">\r\n        <img\r\n          className=\"p-2\"\r\n          src={`${apiImage}${team.teamImage}`}\r\n          alt={team.name}\r\n          width=\"100\"\r\n          height=\"100\"\r\n        />\r\n        <div className=\"card-body pt-0\">\r\n          <h3 className=\"card-title \">\r\n            <u className=\"text-primary\">{team.name}</u>\r\n          </h3>\r\n          <p className=\"card-text info\">\r\n            <strong>\r\n              <u>Team Number:</u>\r\n              <span className=\"text-primary\">{team.teamNumber}</span>\r\n            </strong>\r\n            <br />\r\n            <span id=\"share\">\r\n              *Share this number with your friends and let them join your team\r\n            </span>\r\n          </p>\r\n          <p className=\"mb-2\">\r\n            <b>\r\n              <u className=\"text-dark \">Team Manager:</u>\r\n              <span className=\"text-primary captain \">\r\n                {captain[0].nickName}\r\n              </span>\r\n            </b>\r\n          </p>\r\n          {liveGame && (\r\n            <div className=\"liveGames \">\r\n              <Link\r\n                className=\"\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Only Team Manger can edit games details\"\r\n                to={`/games/${liveGame._id}`}\r\n                takecontrol=\"yes\"\r\n              >\r\n                Take Control Of Game\r\n                <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n              </Link>\r\n              <br></br>\r\n              <span className=\"display-6 \">\r\n                <u>Live Game</u>\r\n              </span>\r\n              <div className=\"col-12 border border-primary my-2\" id=\"card-top\">\r\n                <ol className=\"statsList m-0\">\r\n                  <li\r\n                    id=\"lastGameHero\"\r\n                    className=\"statsHero d-flex flex-column h-50\"\r\n                    style={{\r\n                      backgroundImage: `url(${\r\n                        process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                      })`,\r\n                    }}\r\n                  >\r\n                    <p>Game No. {liveGame._id}</p>\r\n                    <p>\r\n                      {`${new Date(liveGame.createdAt).toLocaleDateString(\r\n                        \"en-GB\",\r\n                        { hour: \"2-digit\", minute: \"2-digit\", hour12: false }\r\n                      )}`}\r\n                    </p>\r\n                    <div\r\n                      className=\"stats d-flex w-75 justify-content-between\"\r\n                      id=\"lGame\"\r\n                    >\r\n                      <p>Player</p>\r\n                      <p>Name</p>\r\n                      <p>Cashing</p>\r\n                    </div>\r\n                  </li>\r\n                  {livePlayers &&\r\n                    livePlayers.length > 1 &&\r\n                    livePlayers.map((player) => (\r\n                      <li className=\"statsRow\" key={player.id} id=\"liveGameRow\">\r\n                        <div className=\"rowImage ms-5\">\r\n                          <img\r\n                            src={\r\n                              livePlayers.length > 0\r\n                                ? `${apiImage}${player.image}`\r\n                                : \"\"\r\n                            }\r\n                            alt=\"player list row\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"rowName ms-4\" id=\"lGameName\">\r\n                          {livePlayers.length > 1 ? player.name : \"\"}\r\n                        </div>\r\n                        <div className=\"rowCashing\">\r\n                          {livePlayers.length > 1 ? player.cashing : \"\"}\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                </ol>\r\n                {liveGame._id && (\r\n                  <CashingDetails gameId={liveGame._id} updated={liveGame} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"teamBtns d-flex flex-column w-75 \">\r\n            <Link\r\n              className=\"button-72 p-2\"\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              to={`/newMainTable/${team._id}`}\r\n            >\r\n              Team Tables & Stats\r\n              <IoMdStats className=\"ms-2\" />\r\n              <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n            </Link>\r\n            {captain[0]._id === user._id && (\r\n              <div className=\"d-flex flex-column\">\r\n                {/* <Link\r\n                  className=\"button-75 mt-2 \"\r\n                  to={`/edit-games/${team._id}`}\r\n                  teamId={team._id}\r\n                  title=\"Only Team Manger can edit games details\"\r\n                >\r\n                  Edit Games\r\n                  <AiFillEdit color=\"white\" className=\"ms-1\" />\r\n                  <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n                </Link> */}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-danger mt-2 w-75\"\r\n                  onClick={() => displayRemoveButtons()}\r\n                >\r\n                  <AiFillEdit color=\"red\" className=\"ms-1\" />\r\n                  Remove Players From Team\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"card-text \">\r\n            <strong>\r\n              <u>Players:</u>\r\n            </strong>\r\n            <ul className=\"row  ps-0\" id=\"playersList\">\r\n              {team.players.map((player) => (\r\n                <li\r\n                  key={player._id}\r\n                  className=\"col-3 col-lg-3 teams \"\r\n                  id=\"playerAvatar\"\r\n                >\r\n                  <p id=\"playerPersonalInfo\">{player.nickName}</p>\r\n\r\n                  <Avatar\r\n                    src={`${apiImage}${player.image}`}\r\n                    alt={player.name}\r\n                  />\r\n\r\n                  {captain[0]._id === user._id &&\r\n                    buttons &&\r\n                    player._id !== captain[0]._id && (\r\n                      <p\r\n                        className=\"text-danger  text-wrap mb-2\"\r\n                        onClick={() =>\r\n                          removePlayerFromTeam(teamNumber, player._id, teamid)\r\n                        }\r\n                      >\r\n                        <i className=\"fas fa-trash-alt \"></i>\r\n                        remove player from team\r\n                      </p>\r\n                    )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {!liveGame && (\r\n            <Link className=\"mb-2 button-71\" to={`/new-game/${team._id}`}>\r\n              Start a new game\r\n              <GiCardKingClubs className=\"ms-2\" />\r\n              <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n            </Link>\r\n          )}\r\n\r\n          <p className=\"card-text border-top pt-2\">\r\n            Created At:{new Date(team.createdAt).toLocaleDateString(\"en-GB\")}\r\n          </p>\r\n          <p className=\"text-primary\">\r\n            <Link onClick={removeTeam} to=\"/my-teams\" className=\"text-danger\">\r\n              <i className=\"fas fa-trash-alt me-2\"></i>\r\n              Delete Team\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport teamService from \"../services/teamService\";\r\nimport userService from \"../services/userService\";\r\nimport Team from \"./team\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst MyTeams = () => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchTeams = async () => {\r\n      const { data } = await teamService.getMyTeam();\r\n      setTeams(data);\r\n      const me = await userService.getCurrentUser();\r\n      setUser(me);\r\n    };\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  let removeTeam = (teamid) => {\r\n    let chosenTeam = teams.filter((team) => team._id === teamid);\r\n\r\n    if (user._id !== chosenTeam[0].user_id) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Only team manager can delete a team\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Are you sure you want to delete this team?\",\r\n        text: \"you wont be able to cancel\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          let myTeams = teams.filter((team) => team._id !== teamid);\r\n          teamService.deleteTeam(teamid);\r\n          setTeams(myTeams);\r\n          toast(\"This team was deleted succesfully\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container about\">\r\n      <PageHeader titleText=\"My Teams Page\" />\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/icons/teams.png\"}\r\n        alt=\"teams icon\"\r\n        className=\"aboutIcon\"\r\n      />\r\n      <div className=\"row\">\r\n        <div className=\"col-12\" id=\"myTeams\">\r\n          <Link className=\"btn btn-primary  mb-3\" to=\"/create-team\">\r\n            +Add A New Team\r\n          </Link>\r\n          <Link className=\"btn btn-primary  mb-3\" to=\"/join-team\">\r\n            Join An Existing Team\r\n          </Link>\r\n          <div className=\"teamText\">\r\n            You can try a test team.\r\n            <br /> enter \"Join an existing team\" and try out\r\n          </div>\r\n          <p className=\"mt-3 team-list\">\r\n            {teams.length > 0 && <span>Your teams are in the list below:</span>}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {teams.length > 0 &&\r\n          teams.map((team) => (\r\n            <Team\r\n              key={team._id}\r\n              team={team}\r\n              teamid={team._id}\r\n              user={user}\r\n              teamNumber={team.teamNumber}\r\n              removeTeam={() => removeTeam(team._id)}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTeams;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport userService from \"../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass EditPlayer extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      userImage: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    name: Joi.string().min(2).max(255).required(),\r\n    userImage: Joi.string().min(11).max(1024).uri().allow(\"\"),\r\n  };\r\n  async componentDidMount() {\r\n    const { data } = await userService.getUserDetails();\r\n\r\n    this.setState({ data: this.mapToViewModel(data) });\r\n  }\r\n\r\n  mapToViewModel(player) {\r\n    return {\r\n      _id: player._id,\r\n      name: player.name,\r\n      userImage: player.userImage,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n\r\n    await userService.editUserDetails(data);\r\n    toast(\"User is updated\");\r\n    this.props.history.replace(`/my-stats/${data._id}`);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.history.push(\"/my-teams\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Edit Player Form\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Edit your player details here</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"name\", \"Player Name\")}\r\n              {/* {this.renderInput(\"players\", \"Players\")} */}\r\n              {this.renderInput(\"userImage\", \"Player Image\")}\r\n              {this.renderButton(\"Update Player\")}\r\n              <button\r\n                className=\"btn-lg btn-secondary ms-4 \"\r\n                onClick={this.handleCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPlayer;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\n\r\nconst editTeam = () => {\r\n  return ( \r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Edit Games\"/>\r\n          <iframe title=\"edit games\" src=\"https://nadav.retool.com/apps/REST%20API%20Admin%20Panel\" width=\"100%\" height=\"800px\"></iframe>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default editTeam;\r\n\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function newH2h(game) {\r\n  return http.post(`${apiUrl}/h2h`, game);\r\n}\r\n\r\nexport function getByGameId(gameId) {\r\n  return http.get(`${apiUrl}/h2h/${gameId}`);\r\n}\r\n\r\nexport function updateH2h(gameId) {\r\n  return http.put(`${apiUrl}/h2h/updateh2h/${gameId}`);\r\n}\r\n\r\nexport function getPointsByPlayer(pId) {\r\n  return http.get(`${apiUrl}/h2h/byPlayer/${pId}`);\r\n}\r\n\r\nexport function getPointsByTeam(teamId) {\r\n  return http.get(`${apiUrl}/h2h/byTeam/${teamId}`);\r\n}\r\n\r\nexport function teamAllGames(teamId) {\r\n  return http.get(`${apiUrl}/h2h/teamAllGames/${teamId}`);\r\n}\r\n\r\nexport function addPlayersH2h(gameId, game) {\r\n  return http.put(`${apiUrl}/h2h/addPlayersH2h/${gameId}`, game);\r\n}\r\nexport default {\r\n  newH2h,\r\n  getByGameId,\r\n  updateH2h,\r\n  getPointsByPlayer,\r\n  getPointsByTeam,\r\n  teamAllGames,\r\n  addPlayersH2h,\r\n};\r\n","import React from \"react\";\r\nimport { apiImage } from \"../config.json\";\r\n\r\nconst Player = ({ player, selectPlayers, selected }) => {\r\n  return (\r\n    <div className=\"col-md-6 col-lg-2 col-3 \" id=\"players_select\">\r\n      <div className=\"card align-items-center playersCard\">\r\n        <div className=\"card-head d-flex justify-content-center\">\r\n          <img\r\n            className=\"m-2 playerImage\"\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n            src={`${apiImage}${player.image}`}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            selected.find((e) => player._id === e.id)\r\n              ? \"card-body selected d-flex flex-column p-0 mw-100\"\r\n              : \"card-body d-flex flex-column p-0 \"\r\n          }\r\n        >\r\n          <h5\r\n            className=\"card-title d-flex m-0 justify-content-center\"\r\n            id=\"selectTitle\"\r\n          >\r\n            {player.nickName}\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-sm btn-primary card-title d-flex p-0 \"\r\n            onClick={selectPlayers}\r\n          >\r\n            +Add/Remove player\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport teamService from \"../services/teamService\";\r\nimport gameService from \"../services/gameService\";\r\nimport userService from \"../services/userService\";\r\nimport h2hService from \"../services/h2hService\";\r\nimport Player from \"./player\";\r\nimport { apiImage } from \"../config.json\";\r\n\r\nconst SelectPlayers = (props) => {\r\n  const [data, setData] = useState([props.match.params.teamId]);\r\n  const [selected, setSelected] = useState([]);\r\n  const [started, setStarted] = useState(\"\");\r\n  const [me, setMe] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchPlayers = async () => {\r\n      if (data.length > 0) {\r\n        const players = await teamService.getTeam(data);\r\n        const game = await gameService.inProgress(props.match.params.teamId);\r\n        const getGameManager = await userService.getUserDetails();\r\n        me.id = getGameManager.data._id;\r\n        me.name = getGameManager.data.nickName;\r\n        setMe(me);\r\n        if (game.data.length > 0) {\r\n          setSelected(game.data[0].players);\r\n          setStarted(game.data[0]);\r\n        }\r\n\r\n        setData(players.data);\r\n      }\r\n    };\r\n    fetchPlayers();\r\n  }, [props.match.params.teamId, data]);\r\n\r\n  function selectPlayers(playerId, name, image) {\r\n    const push = new Audio(process.env.PUBLIC_URL + `sounds/push.mp3`);\r\n    push.play();\r\n    const player = {\r\n      id: playerId,\r\n      name: name,\r\n      image: image,\r\n      cashing: 0,\r\n      cashInHand: 0,\r\n      numOfCashing: 0,\r\n      profit: 0,\r\n    };\r\n    selected.find((e) => player.id === e.id)\r\n      ? setSelected(selected.filter((item) => item.id !== player.id))\r\n      : setSelected([...selected, player]);\r\n  }\r\n\r\n  async function shuffle() {\r\n    const shuffle = new Audio(process.env.PUBLIC_URL + \"sounds/Shuffle.mp3\");\r\n    shuffle.play();\r\n    if (!started) {\r\n      let game = {\r\n        isOpen: true,\r\n        players: selected,\r\n        team_name: data.name,\r\n        team_id: data._id,\r\n        game_manager: me,\r\n        cashing_details: [],\r\n      };\r\n      await gameService.newGame(game).then((res) => {\r\n        let newGame = { ...res.data };\r\n        newGame.gameId = newGame._id;\r\n        delete newGame._id;\r\n        h2hService.newH2h(newGame);\r\n        props.history.push(`/games/${res.data._id}`);\r\n      });\r\n    } else {\r\n      let game = {\r\n        players: selected,\r\n        team_name: started.team_name,\r\n        team_id: started.team_id,\r\n        gameId: started._id,\r\n        cashing_details: started.cashing_details,\r\n      };\r\n      await gameService.updateGame(started._id, game).then((res) => {\r\n        res.data.gameId = res.data._id;\r\n        // h2hService.newH2h(res.data);\r\n        h2hService.addPlayersH2h(started._id, game);\r\n        props.history.push(`/games/${res.data._id}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Start A New Game\" />\r\n      <h2 className=\"teamName\">{data.name}</h2>\r\n      <h3>Team Number:{data.teamNumber}</h3>\r\n      <img\r\n        src={`${apiImage}${data.teamImage}`}\r\n        alt={data.name}\r\n        width=\"120\"\r\n        height=\"120\"\r\n      ></img>\r\n      <h3 className=\"p-2 text-primary\">Select players for current game</h3>\r\n      <div className=\"row container\">\r\n        {data.players &&\r\n          data.players.map((player) => (\r\n            <Player\r\n              teamName={data.name}\r\n              selected={selected}\r\n              player={player}\r\n              key={player._id}\r\n              selectPlayers={() => {\r\n                selectPlayers(player._id, player.nickName, player.image);\r\n              }}\r\n            />\r\n          ))}\r\n      </div>\r\n      {selected.length > 1 && (\r\n        <button className=\"btn btn-primary btn-lg m-3\" onClick={shuffle}>\r\n          Continue to game\r\n        </button>\r\n      )}\r\n      {selected.length <= 1 && (\r\n        <p className=\"selectP\">*Please select at least 2 players</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectPlayers;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport teamService from \"../services/teamService\";\r\nimport userService from \"../services/userService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass JoinTeam extends Form {\r\n  state = {\r\n    data: { teamNumber: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    teamNumber: Joi.string().required().min(6).max(6).label(\"Team Number\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n\r\n    try {\r\n      const team = await teamService.getTeamByNumber(data.teamNumber);\r\n      //get user details from token\r\n      let user = await userService.getCurrentUser();\r\n      //get full user details\r\n      user = await userService.getUserDetails();\r\n      //add the team id to the user in db\r\n      user.data.teams.push(team.data._id);\r\n      await userService.editUserDetails(user.data);\r\n      delete user.data.password;\r\n      //add the user details to team in db\r\n      await team.data.players.push(user.data);\r\n      await teamService.editTeam(team.data);\r\n      this.props.history.push(\"/my-teams\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({\r\n          errors: { teamNumber: \"No team was found with this team number\" },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Join an existing team\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\" id=\"joinText\">\r\n            <p>\r\n              <strong>Please enter team number</strong> <br />\r\n              *Ask team members for the number\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-8\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"PUT\">\r\n              {this.renderInput(\"teamNumber\", \"Team Number\")}\r\n              <div className=\"d-flex justify-content-between\">\r\n                {this.renderButton(\"Join Team\")}\r\n                <Link\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary joinB\"\r\n                  to=\"/my-teams\"\r\n                >\r\n                  Not right now\r\n                </Link>\r\n              </div>\r\n            </form>\r\n            <p className=\"mt-2 join\">*To join a demo team, enter:976991</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JoinTeam;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function createSideBet(sideBet) {\r\n  return http.post(`${apiUrl}/sideBets`, sideBet);\r\n}\r\n\r\nexport function getSidebetsForMainTable(teamId) {\r\n  return http.get(`${apiUrl}/sideBets/getsidebetsForMainTable/${teamId}`);\r\n}\r\n\r\nexport function gotOfferedSidebet(userId) {\r\n  return http.get(`${apiUrl}/sideBets/gotOfferedSidebet/${userId}`);\r\n}\r\n\r\nexport function acceptSideBet(sideBetId) {\r\n  return http.put(`${apiUrl}/sideBets/acceptSideBet/${sideBetId}`);\r\n}\r\n\r\nexport function dismissSideBet(sideBetId) {\r\n  return http.put(`${apiUrl}/sideBets/dismissSideBet/${sideBetId}`);\r\n}\r\n\r\nexport function getAllApprovedSideBets(teamId) {\r\n  return http.get(`${apiUrl}/sideBets/getAllApprovedSideBets/${teamId}`);\r\n}\r\n\r\nexport function getExtraDetais(\r\n  teamId,\r\n  sideBetMasterPlayerId,\r\n  sideBetsSlavePlayerId,\r\n  sideBetStartDate,\r\n  sideBetEndDate\r\n) {\r\n  return http.post(`${apiUrl}/sideBets/getExtraDetais/${teamId}`, {\r\n    teamId,\r\n    sideBetMasterPlayerId,\r\n    sideBetsSlavePlayerId,\r\n    sideBetStartDate,\r\n    sideBetEndDate,\r\n  });\r\n}\r\n\r\nexport function getAllDismissedSideBets(teamId) {\r\n  return http.get(`${apiUrl}/sideBets/getAllDismissedSideBets/${teamId}`);\r\n}\r\n\r\nexport default {\r\n  createSideBet,\r\n  getSidebetsForMainTable,\r\n  gotOfferedSidebet,\r\n  acceptSideBet,\r\n  dismissSideBet,\r\n  getAllApprovedSideBets,\r\n  getExtraDetais,\r\n  getAllDismissedSideBets,\r\n};\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"./../../config.json\";\r\n\r\nconst PlayerCard = ({ header, data, name, image, cardName, team, teamimage }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n             style={{\r\n              backgroundImage: `url(${\r\n                process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n              })`,\r\n            }}\r\n      >\r\n        <h5 className=\"card-title \">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/tables/${cardName}/${team}`}\r\n        header={header}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerCard;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\n\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nconst SuccessP = ({ header, data, name, image, team, table }) => {\r\n  return (\r\n\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n           style={{\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n            })`,\r\n          }}>\r\n        <h5 className=\"card-title \">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n     className=\"text-white btn btn-primary\"\r\n     id=\"cardFooter\"\r\n        to={`/tables/success/${team}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessP;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst CurrMonth = ({ header, data, name, image, cMonth, team, month }) => {\r\n  const date = new Date();\r\n  let currentMonth = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div\r\n        className=\"card \"\r\n        id=\"mainStats\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n          })`,\r\n        }}\r\n      >\r\n        <h5 className=\"card-title \">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body p-0\" id=\"statsCardBody\">\r\n          <div className=\"card-text pt-3\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n            <div className=\"d-flex justify-content-around\">\r\n              <span id=\"month\">{currentMonth ? currentMonth : \"\"}</span>\r\n\r\n              <span>{data ? data : 0}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/tables/monthlyStats/${team}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrMonth;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\n\r\nconst Profits = ({ header, data, name, image, team, table }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n           style={{\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n            })`,\r\n          }}>\r\n        <h5 className=\"card-title\">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n     className=\"text-white btn btn-primary\"\r\n     id=\"cardFooter\"\r\n        to={`/tables/profits/top-ten/${team}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight/>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profits;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport _ from \"lodash\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\n\r\nconst H2hGameEnd = ({ gameId, header }) => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [ended, setEnded] = useState(false);\r\n  useEffect(() => {\r\n    const lastH2h = async () => {\r\n      try {\r\n        let last = await h2hService.getByGameId(gameId);\r\n        last = _.flattenDeep(last.data[0].players);\r\n        last.sort((a, b) => b.points - a.points);\r\n        setPlayers(last);\r\n        setEnded(true);\r\n      } catch (error) {\r\n        // console.log(\"error1\");\r\n      }\r\n    };\r\n    lastH2h();\r\n  }, [gameId]);\r\n  let Rank = 1;\r\n  return (\r\n    <div>\r\n      <SpinnerInfinity\r\n        size={130}\r\n        thickness={151}\r\n        speed={70}\r\n        color=\"rgba(252, 252, 252, 1)\"\r\n        secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n        enabled={!ended}\r\n      />\r\n      {ended && (\r\n        <div className=\"contain\">\r\n          <PageHeader titleText={header} />\r\n          <div className=\"col-12\" id=\"card-top\">\r\n            <ol className=\"statsList\">\r\n              <li\r\n                id=\"lastGameHero\"\r\n                className=\"statsHero d-flex flex-column\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                  })`,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"stats d-flex w-100 justify-content-between\"\r\n                  id=\"lGame\"\r\n                >\r\n                  <p className=\"ms-5\">Player</p>\r\n                  <p className=\"me-3\">Points</p>\r\n                </div>\r\n              </li>\r\n              <React.Fragment>\r\n                {players.map((player) => (\r\n                  <li\r\n                    className=\"statsRow w-100 justify-content-between\"\r\n                    key={player.id}\r\n                  >\r\n                    <div className=\"rowPos\">{Rank++}</div>\r\n                    <div className=\"rowImage\">\r\n                      <img\r\n                        src={`${apiImage}${player.image}`}\r\n                        alt=\"player list row\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"rowName\" id=\"lGameName\">\r\n                      {player.name}\r\n                    </div>\r\n                    <div className=\"rowProfit\">{player.points}</div>\r\n                  </li>\r\n                ))}\r\n              </React.Fragment>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hGameEnd;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../services/gameService\";\r\nimport PageHeader from \"../components/common/pageHeader\";\r\nimport { apiImage } from \"../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport H2hGameEnd from \"./h2h/h2hGameEnd\";\r\n\r\nconst MainLastgame = ({ teamId }) => {\r\n  const [data, setData] = useState([]);\r\n  const [lastGame, setLastGame] = useState([]);\r\n  useEffect(() => {\r\n    const getLastGame = async () => {\r\n      let game = await gameService.lastGame(teamId);\r\n      game = game.data[0];\r\n      let last = game.players.sort((a, b) => b.profit - a.profit);\r\n      setData(last);\r\n      setLastGame(game);\r\n    };\r\n\r\n    getLastGame();\r\n  }, [teamId]);\r\n\r\n  let Rank = 1;\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Last Game\" />\r\n\r\n      {!data && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={!data ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {data && (\r\n        <div className=\"col-lg-4 col-12 pb-3\" id=\"card-top\">\r\n          <ol className=\"statsList\">\r\n            <li\r\n              id=\"lastGameHero\"\r\n              className=\"statsHero d-flex flex-column\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <p>\r\n                {new Date(lastGame.createdAt).toLocaleDateString(\"en-GB\") +\r\n                  \"  \" +\r\n                  new Date(lastGame.createdAt).toLocaleString(\"en-US\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                  }) +\r\n                  \" - \" +\r\n                  new Date(lastGame.updatedAt).toLocaleString(\"en-US\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                  })}\r\n              </p>\r\n              <div className=\"stats d-flex  w-100\" id=\"lGameMain\">\r\n                <p>Rank</p>\r\n                <p>Player</p>\r\n                <p>Name</p>\r\n                <p>Cashing</p>\r\n                <p>Profit</p>\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow\" key={player.id}>\r\n                  <div className=\"rowPos\">{Rank++}.</div>\r\n                  <div className=\"rowImagePerHour\">\r\n                    <img\r\n                      src={data.length > 0 ? `${apiImage}${player.image}` : \"\"}\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div id=\"lGamePlayer\">\r\n                    {data.length > 1 ? player.name : \"\"}\r\n                  </div>\r\n                  <div className=\"rowCashingLastGame\">\r\n                    {data.length > 1 ? player.cashing : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      player.profit > 0\r\n                        ? \"rowProfit text-success\"\r\n                        : \"rowProfit text-danger\"\r\n                    }\r\n                  >\r\n                    {player.profit}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ol>\r\n          <H2hGameEnd gameId={lastGame._id} header=\"Last H2H\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLastgame;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"./../../config.json\";\r\n\r\nconst H2hCard = ({ header, data, name, image, cardName, team, teamimage }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n           style={{\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n            })`,\r\n          }}>\r\n        <h5 className=\"card-title \">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/tables/h2h/${team}`}\r\n        header={header}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport _ from \"lodash\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst AllGames = ({ teamId }) => {\r\n  const [games, setGames] = useState(null);\r\n  const [gamesData, setGamesData] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [pages, setPages] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [perPage, setPerPage] = useState(3);\r\n  useEffect(() => {\r\n    const getGames = async () => {\r\n      const all = await gameService.allGamesByTeam(teamId);\r\n      setGamesData(all.data);\r\n      const allGames = all.data.map((d) => _.flattenDeep(d.players));\r\n      setGames(allGames);\r\n      setLoading(true);\r\n      try {\r\n        setPages(Math.floor(games.length / perPage));\r\n      } catch {\r\n        console.log(\"not yet logged\");\r\n      }\r\n    };\r\n\r\n    getGames();\r\n  }, [perPage, games ? games.length : \"\", teamId]);\r\n  let created = 0;\r\n  let items = [];\r\n  items = games ? games.slice(page * perPage, (page + 1) * perPage) : \"\";\r\n  let itemsDates = gamesData\r\n    ? gamesData.slice(page * perPage, (page + 1) * perPage)\r\n    : \"\";\r\n\r\n  const handlePageClick = (event) => {\r\n    let pageC = event.selected;\r\n    setPage(pageC);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"All Games\" />\r\n      {!games && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={true}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"row\">\r\n        {loading && (\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            pageCount={items.length % 3 === 0 ? pages + 1 : pages}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination text-white justify-content-center\"}\r\n            activeClassName={\"active\"}\r\n            pageClassName={\"page-item\"}\r\n            pageLinkClassName={\"page-link\"}\r\n            previousClassName={\"page-item\"}\r\n            previousLinkClassName={\"page-link\"}\r\n            nextClassName={\"page-item\"}\r\n            nextLinkClassName={\"page-link\"}\r\n          />\r\n        )}\r\n\r\n        {games &&\r\n          items.map((g) => (\r\n            <div\r\n              className=\"col-lg-4 col-12 \"\r\n              id=\"card-top\"\r\n              key={g[0].profit + g[0].image}\r\n            >\r\n              <ol className=\"statsList\">\r\n                <li\r\n                  id=\"lastGameHero\"\r\n                  className=\"statsHero d-flex flex-column\"\r\n                  style={{\r\n                    backgroundImage: `url(${\r\n                      process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                    })`,\r\n                  }}\r\n                >\r\n                  <p>\r\n                    {new Date(\r\n                      itemsDates[created++].createdAt\r\n                    ).toLocaleDateString(\"en-GB\") +\r\n                      \" \" +\r\n                      new Date(\r\n                        itemsDates[created - 1].createdAt\r\n                      ).toLocaleString(\"en-US\", {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                        hour12: false,\r\n                      }) +\r\n                      \" - \" +\r\n                      new Date(\r\n                        itemsDates[created - 1].updatedAt\r\n                      ).toLocaleString(\"en-US\", {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                        hour12: false,\r\n                      })}\r\n                  </p>\r\n                  <div className=\"stats d-flex w-100 \" id=\"lGameAllGames\">\r\n                    <p>Rank</p>\r\n                    <p>Player</p>\r\n                    <p>Name</p>\r\n                    <p>Cashing</p>\r\n                    <p>Profit</p>\r\n                  </div>\r\n                </li>\r\n\r\n                {g\r\n                  .sort((a, b) => b.profit - a.profit)\r\n                  .map((player) => (\r\n                    <li className=\"statsRowAllGames\" key={player.image}>\r\n                      <div className=\"rowPos\">{player.gameRank}.</div>\r\n                      <div className=\"rowImage\">\r\n                        <img\r\n                          src={`${apiImage}${player.image}`}\r\n                          alt=\"player list row\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"rowName\" id=\"lGameName\">\r\n                        {player.name}\r\n                      </div>\r\n                      <div className=\"rowCashingAll\">{player.cashing}</div>\r\n                      <div\r\n                        className={\r\n                          player.profit > 0\r\n                            ? \"rowProfit text-success\"\r\n                            : \"rowProfit text-danger\"\r\n                        }\r\n                      >\r\n                        {player.profit}\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n              </ol>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllGames;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\n\r\nconst Profits = ({ header, data, name, image, team, table,path }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n           style={{\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n            })`,\r\n          }}>\r\n        <h5 className=\"card-title\">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n     className=\"text-white btn btn-primary\"\r\n     id=\"cardFooter\"\r\n        to={path}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight/>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profits;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiFillDollarCircle } from \"react-icons/ai\";\r\n\r\nconst SideBetsCard = ({ teamId }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div\r\n        className=\"card\"\r\n        id=\"mainStats\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n          })`,\r\n        }}\r\n      >\r\n        <h5 className=\"card-title \">Poker @ Vasili</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={`${apiImage}images/vsCard.jpg`}\r\n            className=\"card-img-top \"\r\n            alt=\"cards\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>$Side-Bets$</span>\r\n            <br />\r\n            <span>\r\n              <AiFillDollarCircle />\r\n            </span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/side-bets/${teamId}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBetsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gameService from \"../services/gameService\";\r\nimport userService from \"../services/userService\";\r\nimport sideBetsService from \"../services/sideBetsService\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport PlayerCard from \"./topStats/playerCard\";\r\nimport SuccessP from \"./topStats/successp\";\r\nimport CurrMonth from \"./topStats/currMonth\";\r\nimport Profits from \"./topStats/profits\";\r\nimport { SpinnerDiamond } from \"spinners-react\";\r\nimport MainLastgame from \"./mainLastGame\";\r\nimport teamService from \"../services/teamService\";\r\nimport { apiImage } from \"../config.json\";\r\nimport h2hService from \"../services/h2hService\";\r\nimport H2hCard from \"./h2h/h2hCard\";\r\nimport AllGames from \"./games/allGames\";\r\nimport { IoIosTrophy } from \"react-icons/io\";\r\nimport StatsPerHour from \"./topStats/statsPerHour\";\r\nimport SideBetsCard from \"./sidebets/sidebetsCard\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdDateRange } from \"react-icons/md\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as dayjs from \"dayjs\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function MainTable(props) {\r\n  //get the data for the table\r\n  const [data, setData] = useState(\"\");\r\n  const [avgprofit, setAvgprofit] = useState([]);\r\n  const [totalgames, setTotalgames] = useState([]);\r\n  const [avgcashing, setAvgcashing] = useState([]);\r\n  const [success, setSuccess] = useState([]);\r\n  const [gamesprofit, setGamesprofit] = useState([]);\r\n  const [h2h, setH2h] = useState([]);\r\n  const [monthleader, setMonthleader] = useState([]);\r\n  const [profits, setProfits] = useState([]);\r\n  const [teamImage, setTeamImage] = useState(\"\");\r\n  const [totalCash, setTotalCash] = useState({});\r\n  const [totalGames, setTotalGames] = useState(\"\");\r\n  const [statsPerHour, setstatsPerHour] = useState([]);\r\n  const teamId = props.match.params.teamId;\r\n  const [teams, setTeams] = useState([]);\r\n  const [lastGame, setLastGame] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  const [sideBets, setSideBets] = useState([]);\r\n  var relativeTime = require(\"dayjs/plugin/relativeTime\");\r\n\r\n  const alertGotOfferedSideBet = (sideBetData) => {\r\n    sideBetData.map((sideBet) => {\r\n      Swal.fire({\r\n        title: `You got offered a side bet from ${sideBet.masterPlayer.nickName}!`,\r\n        text: `  for ${sideBet.sideBetSum}$ from ${new Date(\r\n          sideBet.startDate\r\n        ).toLocaleDateString(\"en-GB\")} to ${new Date(\r\n          sideBet.endDate\r\n        ).toLocaleDateString(\"en-GB\")} Do you accept?`,\r\n        icon: \"info\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, accept it!\",\r\n        cancelButtonText: \"No, dismiss it!\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          toast.success(\"You accepted the side bet 🔥🔥🔥\");\r\n          sideBetsService.acceptSideBet(sideBet._id);\r\n        } else if (result.isDismissed) {\r\n          toast.error(\"You dismissed the side bet 😢\");\r\n          console.log(\"disssmissed\");\r\n          sideBetsService.dismissSideBet(sideBet._id);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getLastGame = async () => {\r\n      let game = await gameService.lastGame(teamId);\r\n      game = game.data[0];\r\n      setLastGame(game);\r\n      const me = await userService.getUserDetails();\r\n      setUser(me.data);\r\n    };\r\n\r\n    getLastGame();\r\n  }, []);\r\n\r\n  //fetch data from DB\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.table(teamId);\r\n      table = table.data;\r\n\r\n      table.sort((a, b) => b.totalProfit - a.totalProfit);\r\n      setData(table);\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImage(teamPic.data);\r\n\r\n      let totalCash = await gameService.totalCash(teamId);\r\n      setTotalCash(totalCash.data);\r\n\r\n      let totalGames = await gameService.totalGames(teamId);\r\n      setTotalGames(totalGames.data);\r\n\r\n      let h2h = await h2hService.getPointsByTeam(teamId);\r\n      if (h2h.data[0]._id.name === \"Nispach\") {\r\n        h2h.data.shift();\r\n      }\r\n      setH2h(h2h.data);\r\n\r\n      let totoalg = [...table];\r\n      const totalG = await totoalg.sort((a, b) => b.numOfGames - a.numOfGames);\r\n      setTotalgames(totalG);\r\n\r\n      let avgp = [...table];\r\n      const avgP = await avgp.sort((a, b) => b.avgProfit - a.avgProfit);\r\n      setAvgprofit(avgP);\r\n\r\n      let gamep = [...table];\r\n      const gameP = await gamep.sort(\r\n        (a, b) => b.gamesWithProfit - a.gamesWithProfit\r\n      );\r\n      setGamesprofit(gameP);\r\n\r\n      let successPc = [...table];\r\n      const successP = await successPc.sort(\r\n        (a, b) => b.successPercentage - a.successPercentage\r\n      );\r\n      setSuccess(successP);\r\n      let avgc = [...table];\r\n      const avgC = await avgc.sort((a, b) => a.avgCashing - b.avgCashing);\r\n      setAvgcashing(avgC);\r\n    };\r\n    getTable();\r\n    return () => {\r\n      let isCancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dataByMonths = async () => {\r\n      let thisMonth = new Date().getMonth();\r\n      let results = await gameService.monthsData(\r\n        props.match.params.teamId,\r\n        thisMonth + 1\r\n      );\r\n      results = results.data;\r\n      if (results.length > 0) {\r\n        const currMonth = results.filter(\r\n          (e) => e._id.monthPlayed !== thisMonth\r\n        );\r\n        const currMonthLeader = await currMonth.sort(\r\n          (a, b) => b.totalProfit - a.totalProfit\r\n        );\r\n\r\n        setMonthleader(currMonthLeader);\r\n      } else {\r\n        const currMonth = results.filter(\r\n          (e) => e._id.monthPlayed !== thisMonth - 1\r\n        );\r\n        const currMonthLeader = await currMonth.sort(\r\n          (a, b) => b.totalProfit - a.totalProfit\r\n        );\r\n        setMonthleader(currMonthLeader);\r\n      }\r\n    };\r\n    dataByMonths();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const profits = async () => {\r\n      let results = await gameService.profits(props.match.params.teamId);\r\n      results = results.data;\r\n      setProfits(results);\r\n    };\r\n    profits();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const statsPerHour = async () => {\r\n      const dataPerHour = await gameService.statsPerHour(\r\n        props.match.params.teamId\r\n      );\r\n      setstatsPerHour(dataPerHour.data);\r\n    };\r\n    statsPerHour();\r\n  }, []);\r\n\r\n  //get team players for avatars\r\n  useEffect(() => {\r\n    const fetchTeams = async () => {\r\n      const { data } = await teamService.getMyTeam();\r\n\r\n      setTeams(data[0].players);\r\n\r\n      const sideBetsData = await sideBetsService.getSidebetsForMainTable(\r\n        props.match.params.teamId\r\n      );\r\n      setSideBets(sideBetsData.data);\r\n\r\n      ///check if user got offered a side bet he didnt approved yet\r\n      const gotOfferedSideBet = await sideBetsService.gotOfferedSidebet(\r\n        user._id\r\n      );\r\n      if (gotOfferedSideBet.data.length > 0) {\r\n        alertGotOfferedSideBet(gotOfferedSideBet.data);\r\n      }\r\n    };\r\n    fetchTeams();\r\n  }, [user]);\r\n\r\n  dayjs.extend(relativeTime);\r\n  let daysFromGame = lastGame ? dayjs(lastGame.createdAt).fromNow() : null;\r\n\r\n  return (\r\n    <div className=\"container\" id=\"dashboard\">\r\n      <PageHeader\r\n        className=\"mb-0\"\r\n        titleText={new Date().getFullYear() + \" Top Stats\"}\r\n      />\r\n      {data.length < 1 && (\r\n        <div className=\"spinner mt-5\">\r\n          <SpinnerDiamond\r\n            size={130}\r\n            thickness={151}\r\n            speed={81}\r\n            color=\"rgba(108, 20, 180, 1)\"\r\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\r\n            enabled={data.length < 1 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {data.length > 1 && (\r\n        <React.Fragment>\r\n          <div className=\"teamImages d-flex w-100 justify-content-between\">\r\n            <motion.img\r\n              style={{\r\n                width: 150,\r\n                height: 150,\r\n                borderRadius: 30,\r\n                backgroundColor: \"#fff\",\r\n              }}\r\n              animate={{ rotate: 360 }}\r\n              transition={{\r\n                type: \"spring\",\r\n                duration: 5,\r\n                bounce: 0.6,\r\n              }}\r\n              src={`${apiImage}${teamImage.teamImage}`}\r\n              alt=\"team\"\r\n            />\r\n            <Link to={`/players-stats/${user._id}`}>\r\n              <div\r\n                className=\"teamShield d-flex justify-content-center flex-column align-items-center\"\r\n                style={{\r\n                  backgroundImage: `url(${apiImage}images/fifaCard.png)`,\r\n                }}\r\n              >\r\n                <img src={`${apiImage}${user.image}`} alt=\"\" />\r\n                <p className=\"m-0\">{user.nickName}</p>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"ms-2 text-white mb-2 mt-2 display-6\">\r\n              {teamImage.name}\r\n            </p>\r\n            <div className=\"container playersList mb-2\">\r\n              {teams.map((player) => (\r\n                <motion.div\r\n                  className=\"\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ delay: 1.5, duration: 5 }}\r\n                >\r\n                  <Link to={`/players-stats/${player._id}`}>\r\n                    <img src={`${apiImage}${player.image}`} alt=\"player\" />\r\n                  </Link>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <motion.div\r\n            initial={{ x: \"-100vw\" }}\r\n            animate={{ x: 0 }}\r\n            transition={{\r\n              delay: 2,\r\n              type: \"spring\",\r\n              duration: 2,\r\n              bounce: 0.6,\r\n            }}\r\n            className=\"totalCash d-flex flex-column mb-2 ps-1\"\r\n          >\r\n            {sideBets.length > 0 && (\r\n              <div className=\"alert alert-gold alert-dismissible \" role=\"alert\">\r\n                <span\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-bs-dismiss=\"alert\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\" className=\"text-black\">\r\n                    &times;\r\n                  </span>\r\n                </span>\r\n                <strong>New Side Bets Offered!!!💥💥💥</strong>\r\n                <span className=\"text-primary\">\r\n                  <ol>\r\n                    {sideBets.map((bet) => (\r\n                      <li>\r\n                        {`${bet.masterPlayer.nickName} VS ${\r\n                          bet.slavePlayer.nickName\r\n                        }  ${bet.sideBetSum}$  date: ${new Date(\r\n                          bet.createdAt\r\n                        ).toLocaleDateString(\"en-GB\")} `}\r\n                      </li>\r\n                    ))}\r\n                  </ol>\r\n                </span>\r\n              </div>\r\n            )}\r\n\r\n            <p className=\"mb-0\">\r\n              Total Cash Played:\r\n              <strong>\r\n                <span className=\"ps-1\">\r\n                  {totalCash[0]\r\n                    ? totalCash[0].totalCashing.toLocaleString()\r\n                    : null}\r\n                  <i className=\"fas fa-money-bill-alt ps-1\"></i>\r\n                </span>\r\n              </strong>\r\n            </p>\r\n            <p className=\"mb-0\">\r\n              Total Hours Played:\r\n              <strong>\r\n                <span className=\"ps-1\">\r\n                  {totalCash[0] ? totalCash[0].totalHours.toFixed(2) : null}\r\n                  <i className=\"fas fa-hourglass-half ps-1 \"></i>\r\n                </span>\r\n              </strong>\r\n            </p>\r\n            <p className=\"mb-0\">\r\n              Total Games Played:\r\n              <strong>\r\n                <span className=\"ps-1\">\r\n                  {totalGames[0] ? totalGames[0].TotalGames : null}\r\n                  <IoIosTrophy className=\"ms-1 mb-1\" />\r\n                </span>\r\n              </strong>\r\n            </p>\r\n            <p className=\"mb-0\">\r\n              Last Game Played:\r\n              <strong>\r\n                <span className=\"ps-1\">\r\n                  {totalGames[0] ? daysFromGame : \"\"}\r\n                  <MdDateRange className=\"ms-1 \" />\r\n                </span>\r\n              </strong>\r\n            </p>\r\n            <div className=\"cardOdds\">\r\n              <a\r\n                href=\"https://www.cardschat.com/poker/tools/poker-odds-calculator/\"\r\n                target=\"_blank\"\r\n              >\r\n                Texas Odds Calculator\r\n              </a>\r\n            </div>\r\n          </motion.div>\r\n          <motion.div\r\n            id=\"dashboardDisplay\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{\r\n              y: [\"300px\", \"0px\"],\r\n              delay: 2.2,\r\n              opacity: 1,\r\n            }}\r\n            transition={{ duration: 2 }}\r\n          >\r\n            <PlayerCard\r\n              header=\"Total Profit\"\r\n              data={data[0].totalProfit}\r\n              name={data[0]._id.name}\r\n              image={data[0]._id.image}\r\n              cardName=\"totalProfit\"\r\n              team={teamId}\r\n              table={data}\r\n            />\r\n            {avgprofit.length > 1 && (\r\n              <PlayerCard\r\n                header=\"Average Profit\"\r\n                data={avgprofit[0].avgProfit}\r\n                name={avgprofit[0]._id.name}\r\n                image={avgprofit[0]._id.image}\r\n                cardName=\"avgProfit\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n\r\n            {totalgames.length > 1 && (\r\n              <PlayerCard\r\n                header=\"Total Games\"\r\n                data={totalgames[0].numOfGames}\r\n                name={totalgames[0]._id.name}\r\n                image={totalgames[0]._id.image}\r\n                cardName=\"numOfGames\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {gamesprofit.length > 1 && (\r\n              <PlayerCard\r\n                header=\"Games With Profit\"\r\n                data={gamesprofit[0].gamesWithProfit}\r\n                name={gamesprofit[0]._id.name}\r\n                image={gamesprofit[0]._id.image}\r\n                cardName=\"gamesWithProfit\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {success.length > 1 && (\r\n              <SuccessP\r\n                header=\"Success %\"\r\n                data={success[0].successPercentage}\r\n                name={success[0]._id.name}\r\n                image={success[0]._id.image}\r\n                cardName=\"successPercentage\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {avgcashing.length > 1 && (\r\n              <PlayerCard\r\n                header=\"Average Cashing\"\r\n                data={avgcashing[0].avgCashing}\r\n                name={avgcashing[0]._id.name}\r\n                image={avgcashing[0]._id.image}\r\n                cardName=\"avgCashing\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {statsPerHour.length > 1 && (\r\n              <StatsPerHour\r\n                header=\"Profit Per Hour\"\r\n                name={statsPerHour.length > 0 ? statsPerHour[0]._id.name : \"\"}\r\n                image={statsPerHour.length > 0 ? statsPerHour[0]._id.image : \"\"}\r\n                data={\r\n                  statsPerHour.length > 0 ? statsPerHour[0].profitPerHour : \"\"\r\n                }\r\n                team={teamId}\r\n                path={`/stats-per-hour/${props.match.params.teamId}`}\r\n              />\r\n            )}\r\n            <Profits\r\n              header=\"Top 10 Profits\"\r\n              name={profits.length > 0 ? profits[0].players.name : \"\"}\r\n              image={profits.length > 0 ? profits[0].players.image : \"\"}\r\n              data={profits.length > 0 ? profits[0].players.profit : \"\"}\r\n              team={teamId}\r\n            />\r\n            {monthleader.length > 0 && (\r\n              <CurrMonth\r\n                header=\"Stats By Month's\"\r\n                data={monthleader[0].totalProfit}\r\n                name={monthleader[0]._id.name}\r\n                image={monthleader[0]._id.image}\r\n                cMonth={monthleader[0].lastGame}\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {monthleader.length === 0 && (\r\n              <p className=\"text-danger display-10\">\r\n                {new Date().toLocaleString(\"en-us\", { month: \"long\" })} Stats-No\r\n                games this month yet\r\n              </p>\r\n            )}\r\n            {h2h.length > 0 && (\r\n              <H2hCard\r\n                header=\"H2H Games\"\r\n                data={h2h[0].avgPoints.toFixed(2)}\r\n                name={h2h[0]._id.name}\r\n                image={h2h[0]._id.image}\r\n                team={teamId}\r\n              />\r\n            )}\r\n            <SideBetsCard teamId={teamId} />\r\n          </motion.div>\r\n          <MainLastgame teamId={teamId} />\r\n          <AllGames teamId={teamId} />\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nconst Demo = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Game Demo\" />\r\n      <div className=\"screenShots col-lg-6 col-12\">\r\n        <h3 className=\"text-primary\">Screen Shots</h3>\r\n        <Carousel>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={process.env.PUBLIC_URL + \"demo/dashboard.JPG\"}\r\n              alt=\"First slide\"\r\n            />\r\n            <Carousel.Caption>\r\n              {/* <h3>First slide label</h3>\r\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p> */}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={process.env.PUBLIC_URL + \"demo/dash2.JPG\"}\r\n              alt=\"Second slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              {/* <h3>Second slide label</h3>\r\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> */}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={process.env.PUBLIC_URL + \"demo/dash3.JPG\"}\r\n              alt=\"Third slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              {/* <h3>Third slide label</h3>\r\n              <p>\r\n                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n              </p> */}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={process.env.PUBLIC_URL + \"demo/dash4.JPG\"}\r\n              alt=\"Third slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              {/* <h3>Third slide label</h3>\r\n              <p>\r\n                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n              </p> */}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n      <div className=\"row demoText\">\r\n        <h3>Basic instructions for setting up a game:</h3>\r\n        <ul>\r\n          <li>First sign-up or sign-in to set up a user</li>\r\n          <li>Head over to \"My-Teams\" located at the top navbar</li>\r\n          <li>\r\n            *If you want to check out a demo team, select \"Join an existing\r\n            team\" and follow instuctions\r\n          </li>\r\n\r\n          {/* <img\r\n            src={process.env.PUBLIC_URL + `demo/myTeams.JPG`}\r\n            alt=\"demo img\"\r\n            className=\"demo-img\"\r\n          /> */}\r\n          {/* <video src={process.env.PUBLIC_URL + \"demo/demo1.mp4\"}></video> */}\r\n          {/* <div className=\"video col-lg-6 col-12\">\r\n         <video width=\"100%\" controls className=\"demoVideo \">\r\n            <source src={process.env.PUBLIC_URL + \"demo/demo1.mp4\"} />\r\n          </video>\r\n         </div> */}\r\n\r\n          <li>\r\n            In this page you can:\r\n            <ul>\r\n              <li>Join an existing team</li>\r\n              <li>Start a new team</li>\r\n              <li>Check out your team statistics</li>\r\n              <li>Start a new game</li>\r\n              <li>Edit or delete a team</li>\r\n            </ul>\r\n          </li>\r\n          <li>Table & statistics</li>\r\n          {/* <div className=\"video col-lg-6 col-12\">\r\n          <video width=\"100%\" controls className=\"demoVideo\">\r\n            <source src={process.env.PUBLIC_URL + \"demo/demo2.mp4\"} />\r\n          </video>\r\n          </div> */}\r\n          <li>Start a new game:</li>\r\n          <ul>\r\n            <li>Select the players that will play in the game</li>\r\n            <li>*Note that you need to select at least 2 players</li>\r\n          </ul>\r\n\r\n          <li>\r\n            Start your game, compete with your amigos for the chance to be poker\r\n            champions\r\n          </li>\r\n          <li>\r\n            Each time a player cashes in, press the $ icon to add another 50$ to\r\n            his cashing\r\n          </li>\r\n          <li>\r\n            At the end of the match , count each players cash and input the\r\n            ammount to the \"cash in hand\" field.\r\n          </li>\r\n\r\n          <li>\r\n            To finish the game press \"Update Results\" & you will be transferd to\r\n            the leading boards of the latest game\r\n          </li>\r\n          <li>Have fun & ALL IN!!!!!!!!!!!!</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <PageHeader titleText=\"About\" />\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/icons/about.png\"}\r\n          alt=\"abput icon\"\r\n          className=\"aboutIcon\"\r\n        />\r\n        <h4 className=\"mt-4\">\r\n          My name is Nadav Galili, I developed Poker-Underground after several\r\n          years of <br />\r\n          playing Poker with my friends.\r\n        </h4>\r\n        <h4 className=\"mt-4\">\r\n          One of the pleasures of the game is to keep track of your game\r\n          results.\r\n          <br /> <br />\r\n          That’s how I came up with the idea for this app...\r\n        </h4>\r\n        <h4 className=\"mt-4\">\r\n          No more writing game results on papers or EXCEL sheets, all you need\r\n          is in this app!\r\n        </h4>\r\n        <h4 className=\"mt-4\">\r\n          Further features are yet to come soon.. Enjoy & ALL IN!!!!\r\n        </h4>\r\n        <h3>\r\n          <br />\r\n          Get in touch:\r\n          <a href=\"mailto:nadavg1000@gmail.com\" className=\"ms-2\">\r\n            {\" \"}\r\n            nadavg1000@gmail.com\r\n          </a>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nconst TotalPersonal = ({ details }) => {\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [pages, setPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const getGames = () => {\r\n      setPages(Math.floor(details.length / perPage));\r\n    };\r\n    getGames();\r\n  }, [details.length, perPage]);\r\n  let items = [];\r\n  items = details ? details.slice(page * perPage, (page + 1) * perPage) : \"\";\r\n\r\n  const handlePageClick = (event) => {\r\n    let pageC = event.selected;\r\n    setPage(pageC);\r\n  };\r\n\r\n  return (\r\n    <div className=\"allPersonal mt-2 col-lg-4 col-11\">\r\n      <PageHeader titleText=\"All Games\"/>\r\n      <ReactPaginate\r\n        previousLabel={\"prev\"}\r\n        nextLabel={\"next\"}\r\n        pageCount={items.length%10===0?pages+1:pages}\r\n        onPageChange={handlePageClick}\r\n        containerClassName={\"pagination text-white justify-content-center\"}\r\n        activeClassName={\"active\"}\r\n        pageClassName={\"page-item\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        previousClassName={\"page-item\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n      />\r\n      <div className=\"col-12 mt-2\">\r\n        <div id=\"card-top\">\r\n          <ol className=\"statsList mb-0\">\r\n            <li\r\n              id=\"gameLi\"\r\n              className=\"statsHero d-flex\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div\r\n                className=\"gameH2h d-flex w-100 justify-content-between\"\r\n                id=\"personalheader\"\r\n              >\r\n                <div className=\"headerDetails ms-2\">Date</div>\r\n                <div className=\"headerDetails\">Team Name</div>\r\n                <div className=\"headerDetails\">Cashing</div>\r\n                <div className=\"headerDetails\">Num Of Cashing</div>\r\n                <div className=\"headerDetails\">Game Rank</div>\r\n                <div className=\"headerDetails\">Profit</div>\r\n              </div>\r\n            </li>\r\n            {items.map((d) => (\r\n              <li\r\n                className=\"statsRow w-100 d-flex justify-content-between\"\r\n                id=\"personalDetails\"\r\n                key={new Date(d.createdAt)}\r\n              >\r\n                <div className=\"rowPlayerDetails ms-1\">\r\n                  {new Date(d.createdAt).toLocaleDateString(\"en-GB\")}\r\n                </div>\r\n                <div className=\"rowPlayerDetails\">{d.team_name}</div>\r\n                <div className=\"rowPlayerDetails\">{d.players.cashing}</div>\r\n                <div className=\"rowPlayerDetails\">{d.players.numOfCashing}</div>\r\n                <div className=\"rowPlayerDetails\">{d.players.gameRank}</div>\r\n                <div\r\n                  className={\r\n                    d.players.profit > 0\r\n                      ? \"rowPlayersDetails text-success\"\r\n                      : \"rowPlayersDetails text-danger\"\r\n                  }\r\n                >\r\n                  {d.players.profit}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalPersonal;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport userService from \"../../services/userService\";\r\nimport gameService from \"../../services/gameService\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { SpinnerCircular } from \"spinners-react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport _ from \"lodash\";\r\nimport TotalPersonal from \"./totalPersonal\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\n\r\nconst MyStats = () => {\r\n  const [me, setMe] = useState({});\r\n  const [stats, setStats] = useState({});\r\n  const [month, setMonth] = useState([]);\r\n  const [points, setPoints] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [chartDates, setChartDates] = useState([]);\r\n  const [chartCashing, setChartCashing] = useState([]);\r\n  let currentMonth = new Date();\r\n  let currentMonthNumber = currentMonth.getMonth() + 1;\r\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      if (me.teams) {\r\n        let table = await gameService.monthsData(me.teams[0]);\r\n        table = table.data;\r\n        let currentMonth = [...table];\r\n        currentMonth = currentMonth.filter(\r\n          (month) => month._id.monthPlayed === currentMonthNumber\r\n        );\r\n        currentMonth = currentMonth.find((e) => e._id.player_id === me._id);\r\n        setMonth(currentMonth);\r\n        let detailed = await gameService.personalGames(me._id);\r\n        setDetails(detailed.data);\r\n\r\n        let myDetailed = await gameService.personalGames(me._id);\r\n        let chartDetails = [];\r\n        let chartDates = [];\r\n        let chartCash = [];\r\n        try {\r\n          await myDetailed.data.forEach((e) =>\r\n            chartDetails.push(e.players.profit)\r\n          );\r\n          setChartData(chartDetails);\r\n          await myDetailed.data.forEach((e) =>\r\n            chartCash.push(e.players.cashing)\r\n          );\r\n          setChartCashing(chartCash);\r\n\r\n          await myDetailed.data.forEach((e) =>\r\n            chartDates.push(\r\n              new Date(e.createdAt).toLocaleDateString(\"en-GB\").substr(0, 5)\r\n            )\r\n          );\r\n          setChartDates(chartDates);\r\n        } catch {\r\n          console.log(\"errr\");\r\n        }\r\n      }\r\n    };\r\n\r\n    getTable();\r\n  }, [setMonth, currentMonthNumber, me.teams, me._id]);\r\n\r\n  useEffect(() => {\r\n    const getMydata = async () => {\r\n      let myData = await userService.getUserDetails();\r\n      delete myData.data.password;\r\n      setMe(myData.data);\r\n      let myStats = await gameService.personal(me._id);\r\n\r\n      setStats(myStats.data[0]);\r\n    };\r\n    getMydata();\r\n  }, [setMe, me._id]);\r\n\r\n  useEffect(() => {\r\n    const points = async () => {\r\n      if (me._id) {\r\n        let myPoints = await h2hService.getPointsByPlayer(me._id);\r\n        setPoints(myPoints.data[0]);\r\n      }\r\n    };\r\n    points();\r\n  }, [me._id]);\r\n\r\n  const data = {\r\n    labels: chartDates,\r\n    datasets: [\r\n      {\r\n        label: \"Profit\",\r\n        data: chartData,\r\n        fill: false,\r\n        backgroundColor: \"#6c14b4\",\r\n        borderColor: \"#6c14b4\",\r\n      },\r\n      {\r\n        label: \"Cashing\",\r\n        data: chartCashing,\r\n        fill: false,\r\n        backgroundColor: \"#2752ea\",\r\n        borderColor: \"#2752ea\",\r\n      },\r\n    ],\r\n  };\r\n  let delayed;\r\n  const options = {\r\n    options: {\r\n      animation: {\r\n        onComplete: () => {\r\n          delayed = true;\r\n        },\r\n        delay: (context) => {\r\n          let delay = 0;\r\n          if (\r\n            context.type === \"data\" &&\r\n            context.mode === \"default\" &&\r\n            !delayed\r\n          ) {\r\n            delay = context.dataIndex * 400 + context.datasetIndex * 200;\r\n          }\r\n          return delay;\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          type: \"linear\",\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"container playerStats pb-4\">\r\n      <PageHeader titleText=\"Player Statistics\" />\r\n      {_.isEmpty(stats) && (\r\n        <div className=\"spinner\">\r\n          <SpinnerCircular\r\n            size={130}\r\n            thickness={151}\r\n            speed={81}\r\n            color=\"rgba(108, 20, 180, 1)\"\r\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\r\n            // enabled={true}\r\n            enabled={_.isEmpty(stats) ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {!_.isEmpty(stats) && (\r\n        <div className=\"\">\r\n          <div className=\"playerInfo bg-white col-11 col-lg-4\">\r\n            <span className=\"text-primary ms-3\">\r\n              {new Date().toLocaleDateString(\"en-GB\")}\r\n            </span>\r\n            <div\r\n              className=\"playerBg d-flex justify-content-around bg-primary\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"pDetails\">\r\n                <p>\r\n                  {me.firstName} {me.lastName}\r\n                </p>\r\n                <p>{me.nickName}</p>\r\n                <Link\r\n                  className=\"text-white text-decoration-none\"\r\n                  to={`/my-stats/edit_player/${me._id}`}\r\n                >\r\n                  <AiFillEdit color=\"white\" className=\"ms-1\" />\r\n                  Edit Player\r\n                </Link>\r\n              </div>\r\n              <div className=\"pImage\">\r\n                <img src={`${apiImage}${me.image}`} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStats d-flex justify-content-between mt-3\">\r\n              <div className=\"personalStatP\">\r\n                <p>Total Profit</p>\r\n                <p>{stats.totalProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Profit</p>\r\n                <p>{stats.avgProfit ? stats.avgProfit.toFixed(2) : 0}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Total Games</p>\r\n                <p>{stats.numOfGames}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Games W/ Profit</p>\r\n                <p>{stats.gamesWithProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Success %</p>\r\n                <p>{stats.successPercentage}%</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStatsRow2 d-flex justify-content-between\">\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Cashing</p>\r\n                <p>{stats.avgCashing.toFixed(2)}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Max Profit</p>\r\n                <p>{stats.maxProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Max Loss</p>\r\n                <p>{stats.minProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>{currentMonth}-Total Profit</p>\r\n                <p>{month ? month.totalProfit : \"No games this month\"}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>H2H Points</p>\r\n                <p>{points.totalPoints}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStats d-flex justify-content-between\">\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Game Rank</p>\r\n                <p>{stats.avgGameRank ? stats.avgGameRank.toFixed(2) : 0}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Last Game</p>\r\n                <p>{new Date(stats.lastGame).toLocaleDateString(\"en-GB\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"header\">\r\n            <h1 className=\"title  mt-2\">Personal Chart</h1>\r\n          </div>\r\n          <div className=\"col-lg-4 col-11\">\r\n            <Line data={data} options={options} />\r\n          </div>\r\n          <TotalPersonal details={details} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyStats;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { VscTriangleDown } from \"react-icons/vsc\";\r\nimport { VscTriangleUp } from \"react-icons/vsc\";\r\nimport { AiOutlineMinus } from \"react-icons/ai\";\r\n\r\nconst CardTable = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [previousPlayerRank, setPreviousPlayerRank] = useState([]);\r\n  const [headerTitle, setHeaderTitle] = useState(\"\");\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [dataChartDetails, setdataChartDetails] = useState({});\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n  const [heroPreviousRank, setHeroPreviousRank] = useState([]);\r\n  const teamId = props.match.params.teamId;\r\n  const cardName = props.match.params.cardName;\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.cardsData(teamId, cardName);\r\n      table = table.data;\r\n\r\n      if (cardName === \"totalProfit\") {\r\n        let previousRank = await gameService.previousRank(teamId);\r\n        setPreviousPlayerRank(previousRank.data);\r\n        try {\r\n          const previousHero = previousPlayerRank.find((player) => {\r\n            return player._id.player_id === hero._id.player_id;\r\n          });\r\n          setHeroPreviousRank(previousHero);\r\n        } catch (err) {\r\n          setHeroPreviousRank({ previousTableRank: 1 });\r\n          console.log(\"E\", err);\r\n        }\r\n      }\r\n\r\n      //merge objects to get previous rank\r\n      var merged = _.merge(\r\n        _.keyBy(table, \"_id.player_id\"),\r\n        _.keyBy(previousPlayerRank, \"_id.player_id\")\r\n      );\r\n      var values = _.values(merged);\r\n      setData(values);\r\n\r\n      let accu = [];\r\n      const barChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: `${headerTitle} By Player`,\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          barChart.labels.push(player._id.name);\r\n          barChart.datasets[0].data.push(player.cardTitle);\r\n        });\r\n        setbarChartDetails(barChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      const dataChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          dataChart.labels.push(player._id.name);\r\n          accu.push(player.cardTitle);\r\n        });\r\n        let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\r\n        let percentageSum = [];\r\n        accu.forEach((percent) => {\r\n          percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\r\n        });\r\n        dataChart.datasets[0].data = percentageSum;\r\n        setdataChartDetails(dataChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      let myHero = table.shift();\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n\r\n      switch (cardName) {\r\n        case \"avgProfit\":\r\n          setHeaderTitle(\"Average Profit\");\r\n          break;\r\n        case \"numOfGames\":\r\n          setHeaderTitle(\"Total Games\");\r\n          break;\r\n        case \"avgCashing\":\r\n          setHeaderTitle(\"Average  Cashing\");\r\n          break;\r\n        case \"gamesWithProfit\":\r\n          setHeaderTitle(\"Games W/ Profit\");\r\n          break;\r\n        default:\r\n          setHeaderTitle(\"Total Profit\");\r\n      }\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n    getTable();\r\n  }, [setData, teamId, cardName, headerTitle]);\r\n  let rank = 2;\r\n  ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n  return (\r\n    <div className=\"container pb-4\">\r\n      <PageHeader titleText={headerTitle} />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {data.length === 0 && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {data.length > 0 && hero._id && (\r\n        <div className=\"col-lg-5 col-12\" id=\"cardTop\">\r\n          <ol className=\"statsList\">\r\n            <li\r\n              className=\"statsHero d-flex w-100\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"statsInfo flex-fill\">\r\n                <div className=\"pos\">\r\n                  {headerTitle === \"Total Profit\" ? hero.currentTableRank : 1}.\r\n                  <span className=\"previousPosition ps-1\">\r\n                    {hero.previousTableRank - 1 > 0 ? <VscTriangleUp /> : \"\"}\r\n                  </span>\r\n                  <span className=\"previousPosition ps-1\">\r\n                    {hero.previousTableRank - 1 > 0\r\n                      ? hero.previousTableRank - 1\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  {data.length > 0 ? hero._id.name : \"\"}\r\n                </Link>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  {data.length > 0 ? hero.cardTitle : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"heroImage\">\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  <img\r\n                    src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow\" key={player._id.name}>\r\n                  <div className=\"rowPos ps-1\">\r\n                    {headerTitle === \"Total Profit\" && player.currentTableRank}\r\n                    {headerTitle === \"Total Profit\" && (\r\n                      <span id=\"arrows\">\r\n                        {player.previousTableRank - player.currentTableRank >\r\n                        0 ? (\r\n                          <VscTriangleUp />\r\n                        ) : player.previousTableRank - player.currentTableRank <\r\n                          0 ? (\r\n                          <VscTriangleDown className=\"text-danger\" />\r\n                        ) : (\r\n                          <AiOutlineMinus className=\"text-warning\" />\r\n                        )}\r\n                      </span>\r\n                    )}\r\n                    {headerTitle === \"Total Profit\" && (\r\n                      <span\r\n                        className={`previousPosition ${\r\n                          player.previousTableRank - player.currentTableRank < 0\r\n                            ? \"text-danger\"\r\n                            : player.previousTableRank -\r\n                                player.currentTableRank >\r\n                              0\r\n                            ? \"text-success\"\r\n                            : \"text-warning\"\r\n                        }`}\r\n                      >\r\n                        {player.previousTableRank - player.currentTableRank !==\r\n                        0\r\n                          ? player.previousTableRank - player.currentTableRank\r\n                          : 0}\r\n                      </span>\r\n                    )}\r\n                    {headerTitle !== \"Total Profit\" && rank++}\r\n                  </div>\r\n                  <Link\r\n                    className=\"rowImage\"\r\n                    to={`/players-stats/${player._id.player_id}`}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\r\n                      }\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </Link>\r\n                  <div className=\"rowName\">\r\n                    {data.length > 0 ? player._id.name : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      player.cardTitle > 0\r\n                        ? \"rowProfit text-success\"\r\n                        : \"rowProfit text-danger\"\r\n                    }\r\n                  >\r\n                    {data.length > 0 ? player.cardTitle : \"\"}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ol>\r\n          {headerTitle !== \"Average Profit\" && headerTitle !== \"Total Profit\" && (\r\n            <React.Fragment>\r\n              <h4 className=\"text-white justify-content-center d-flex\">\r\n                {headerTitle} In %\r\n              </h4>\r\n              <Doughnut data={dataChartDetails} className=\"mb-3 pb-3\" />\r\n            </React.Fragment>\r\n          )}\r\n          <Bar data={barChartDetails} className=\"mb-3\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst SuccessCard = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n  const teamId = props.match.params.teamId;\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.successp(teamId);\r\n      table = table.data;\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n\r\n      const barChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: `Success %  By Player`,\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          barChart.labels.push(player._id.name);\r\n          barChart.datasets[0].data.push(player.successPercentage);\r\n        });\r\n        setbarChartDetails(barChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      let myHero = table.shift();\r\n\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n\r\n    getTable();\r\n  }, [setData, teamId]);\r\n\r\n  let rank = 2;\r\n\r\n  return (\r\n    <div className=\"container pb-4\">\r\n      <PageHeader titleText=\"Success %\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {data.length === 0 && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {data.length > 0 && (\r\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n          <ul className=\"statsList \">\r\n            <li\r\n              className=\"statsHero d-flex w-100\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"statsInfo flex-fill\">\r\n                <div className=\"pos\">1.</div>\r\n                <a href=\"#/\" id=\"heroName\">\r\n                  {data.length > 0 ? hero._id.name : \"\"}\r\n                </a>\r\n\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  {data.length > 0 ? hero.successPercentage + \" %\" : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"heroImage \">\r\n                <img\r\n                  src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow d-flex\" key={player._id.name}>\r\n                  <div className=\"rowPos\">{rank++}.</div>\r\n                  <div className=\"rowImage\">\r\n                    <img\r\n                      src={\r\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\r\n                      }\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"rowName\">\r\n                    {data.length > 0 ? player._id.name : \"\"}\r\n                  </div>\r\n                  <div className=\"rowProfitSuccess\">\r\n                    {data.length > 0 ? player.successPercentage + \" %\" : \"\"}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ul>\r\n          <Bar data={barChartDetails} className=\"mb-3 pb-3\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport teamService from \"../../services/teamService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\n\r\nconst CurrMonthCard = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n\r\n  let chosenMonth = props.match.params.currentMonth;\r\n  const monthNumber = (mon) => {\r\n    return new Date(Date.parse(mon + \" 1, 2012\")).getMonth() + 1;\r\n  };\r\n  const teamId = props.match.params.teamId;\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.monthsData(\r\n        teamId,\r\n        monthNumber(chosenMonth)\r\n      );\r\n      table = table.data;\r\n      const barChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: `Profit By Player`,\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          barChart.labels.push(player._id.name);\r\n          barChart.datasets[0].data.push(player.totalProfit);\r\n        });\r\n\r\n        setbarChartDetails(barChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n\r\n    getTable();\r\n  }, [setData, teamId]);\r\n\r\n  let rank = 2;\r\n\r\n  return (\r\n    <div className=\"container pb-3\">\r\n      <PageHeader titleText={`${chosenMonth} Profit`} />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {data.length === 0 && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {data.length > 0 && hero._id && (\r\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n          <ol className=\"statsList \">\r\n            <li\r\n              className=\"statsHeroPerHour d-flex w-100\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"statsInfo flex-fill\" id=\"perHourHeroSide\">\r\n                <div className=\"pos\">1.</div>\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  {data.length > 0 ? hero._id.name : \"\"}\r\n                </Link>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <div className=\"heroPerHour\">Games Played:</div>\r\n                  <div className=\"heroPerHour \">{hero.numOfGames}</div>\r\n                </div>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <p className=\"heroPerHour m-0\">Avg Profit:</p>\r\n                  <p className=\"heroPerHour m-0\">\r\n                    {\" \"}\r\n                    {data.length > 0 ? hero.avgProfit : \"\"}\r\n                  </p>\r\n                </div>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <p className=\"heroPerHour m-0\">Total Profit:</p>\r\n                  <p className=\"heroPerHour m-0\">\r\n                    {\" \"}\r\n                    {data.length > 0 ? hero.totalProfit : \"\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"heroImagePerHour\">\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  <img\r\n                    src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n              </div>\r\n            </li>\r\n            <li className=\"statsHeaderPerHour d-flex w-100 justify-content-between\">\r\n              <div>Rank</div>\r\n              <div>Image</div>\r\n              <div>Player</div>\r\n              <div>Games Played</div>\r\n              <div>Avg Profit</div>\r\n              <div>Total Profit</div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow d-flex\" key={player._id.name}>\r\n                  <div className=\"rowPos month\">{rank++}.</div>\r\n                  <div className=\"rowImage month\">\r\n                    <img\r\n                      src={\r\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\r\n                      }\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"rowName month p-0\">\r\n                    {data.length > 0 ? player._id.name : \"\"}\r\n                  </div>\r\n                  <div className=\"gamePlayed p-0\">\r\n                    {data.length > 0 ? player.numOfGames : \"\"}\r\n                  </div>\r\n                  <div className=\"gamePlayed p-0\">\r\n                    {data.length > 0 ? player.avgProfit.toFixed(2) : \"\"}\r\n                  </div>\r\n                  <div className=\"rowProfit month\">\r\n                    {data.length > 0 ? player.totalProfit : \"\"}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ol>\r\n          {barChartDetails.datasets && (\r\n            <Bar data={barChartDetails} className=\"mb-3\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrMonthCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nconst ProfitsCard = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [dataChartDetails, setdataChartDetails] = useState({});\r\n\r\n  const teamId = props.match.params.teamId;\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.profits(teamId);\r\n      table = table.data;\r\n\r\n      let aggregatedProfits = await gameService.agg_profits(teamId);\r\n      aggregatedProfits = aggregatedProfits.data;\r\n\r\n      let accu = [];\r\n      const dataChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await aggregatedProfits.forEach((player) => {\r\n          dataChart.labels.push(player._id.name);\r\n          accu.push(player.totalProfit);\r\n        });\r\n        let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\r\n        let percentageSum = [];\r\n        accu.forEach((percent) => {\r\n          percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\r\n        });\r\n        dataChart.datasets[0].data = percentageSum;\r\n        setdataChartDetails(dataChart);\r\n      } catch (error) {\r\n        console.log(error, \"err1\");\r\n      }\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n\r\n      const handleDates = (list, prop) => {\r\n        return list.map((item) => {\r\n          const obj = Object.assign({}, item);\r\n          obj[prop] = new Date(obj[prop]).toLocaleDateString();\r\n          return obj;\r\n        });\r\n      };\r\n      table = handleDates(table, \"createdAt\");\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n\r\n    getTable();\r\n  }, [teamId]);\r\n\r\n  let rank = 2;\r\n  ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n  return (\r\n    <div className=\"container  pb-4\">\r\n      <PageHeader titleText=\"Top 10 Profits\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n        <ul className=\"statsList \">\r\n          <li\r\n            className=\"statsHero d-flex w-100\"\r\n            style={{\r\n              backgroundImage: `url(${\r\n                process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n              })`,\r\n            }}\r\n          >\r\n            <div className=\"statsInfo flex-fill\">\r\n              <div className=\"pos\">1.</div>\r\n              <a href=\"#/\" id=\"heroName\">\r\n                {data.length > 0 ? hero.players.name : \"\"}\r\n              </a>\r\n              <div className=\"heroDate ps-1\">\r\n                {data.length > 0 ? hero.createdAt : \"\"}\r\n              </div>\r\n              <div id=\"amount\" className=\"flex-fill\">\r\n                {data.length > 0 ? hero.players.profit : \"\"}\r\n              </div>\r\n            </div>\r\n            <div className=\"heroImage \">\r\n              <img\r\n                src={data.length > 0 ? `${apiImage}${hero.players.image}` : \"\"}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </li>\r\n          <React.Fragment>\r\n            {data.map((player) => (\r\n              <li\r\n                className=\"statsRow d-flex\"\r\n                key={player.createdAt + player.players.profit}\r\n              >\r\n                <div className=\"rowPosTop\">{rank++}.</div>\r\n                <div className=\"rowImageTop\">\r\n                  <img\r\n                    src={\r\n                      data.length > 0\r\n                        ? `${apiImage}${player.players.image}`\r\n                        : \"\"\r\n                    }\r\n                    alt=\"player list row\"\r\n                  />\r\n                </div>\r\n                <div className=\"rowNameTop\">\r\n                  {data.length > 0 ? player.players.name : \"\"}\r\n                </div>\r\n                <div className=\"rowDate\">\r\n                  {data.length > 0 ? player.createdAt : \"\"}\r\n                </div>\r\n                <div className=\"rowProfitTop\">\r\n                  {data.length > 0 ? player.players.profit : \"\"}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </React.Fragment>\r\n        </ul>\r\n        <h7 className=\"text-white justify-content-center d-flex\">\r\n          Players Profit In % From Top 10 Profits\r\n        </h7>\r\n        {dataChartDetails.hasOwnProperty(\"labels\") ? (\r\n          <Doughnut data={dataChartDetails} className=\"mb-3 pb-3\" />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfitsCard;\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport * as Yup from \"yup\";\r\nimport http from \"../../services/httpService\";\r\nimport { apiUrl } from \"../../config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  nickName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  image: \"\",\r\n};\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string().required(\"Required\"),\r\n  lastName: Yup.string().required(\"Required\"),\r\n  nickName: Yup.string().required(\"Required\"),\r\n  image: Yup.string(),\r\n  email: Yup.string().email(\"Invaild email format\").required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(6, \"Password must be min 6 chars\")\r\n    .required(\"Required\"),\r\n});\r\n\r\n\r\nconst SignUp = (props) => {\r\n  const handleLogin = async googleData => {\r\n    console.log(googleData);\r\n    setFields({...fields,\r\n    firstName: googleData.profileObj.givenName,\r\n    lastName: googleData.profileObj.familyName,\r\n    nickName: \"\",\r\n    email: googleData.profileObj.email,\r\n    password: Date.now(),\r\n    fakeId: Date.now()});\r\n    setUseGoogle(true);\r\n    setToken(googleData.tokenId)\r\n  }\r\n\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    onSubmitProps.setSubmitting(false);\r\n    let data = new FormData();\r\n    data.append(\"firstName\", values.firstName);\r\n    data.append(\"lastName\", values.lastName);\r\n    data.append(\"nickName\", values.nickName);\r\n    data.append(\"email\", values.email);\r\n    data.append(\"password\", values.password);\r\n    if (values.image) {\r\n      data.append(\"image\", values.image);\r\n    }\r\n\r\n    try {\r\n      if (!values.image) delete values.image;\r\n      await http.post(`${apiUrl}/users`, data);\r\n      useGoogle ? \r\n        await userService.loginGoogle(values.email,token) :\r\n        await userService.login(values.email, values.password) \r\n      window.location = \"/\";\r\n      toast(\"A new acoount is opened\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        setErrors({ email: \"This email is taken\" });\r\n        console.error(ex);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [token,setToken] = useState(\"\");\r\n  const [errors, setErrors] = useState({ email: \"\", image: \"\" });\r\n  const [useGoogle, setUseGoogle] = useState(false);\r\n  const [fields, setFields] = useState(initialValues);\r\n  useEffect(() => {console.log(fields)})\r\n  if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Sign Up\" />\r\n      <GoogleLogin\r\n        clientId='310842465793-hdu8fm8luvho3qds0ce4chg9c3696d4d.apps.googleusercontent.com'\r\n        onSuccess={handleLogin}\r\n        buttonText=\"Sign UP with Google\"\r\n      />\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={fields}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        validateOnMount\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <div className=\"row mt-4\">\r\n              <div className=\"col-10 col-lg-4\">\r\n                <Form>\r\n                  <div className=\"form-control d-flex flex-column bg-primary\">\r\n                    <label htmlFor=\"First Name\">First Name</label>\r\n                    <Field type=\"text\" id=\"firstName\" name=\"firstName\" />\r\n                    <ErrorMessage\r\n                      name=\"firstName\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\r\n                    <label htmlFor=\"Last Name\">Last Name</label>\r\n                    <Field type=\"text\" id=\"lastName\" name=\"lastName\" />\r\n                    <ErrorMessage\r\n                      name=\"lastName\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\r\n                    <label htmlFor=\"Nick Name\">Nick Name</label>\r\n                    <Field type=\"text\" id=\"nickName\" name=\"nickName\" />\r\n                    <ErrorMessage\r\n                      name=\"nickName\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <Field type=\"email\" id=\"email\" name=\"email\" />\r\n                    <span className=\"error\">{errors.email}</span>\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n                  {(useGoogle) ? <div></div> :\r\n                    <div className=\"form-control d-flex flex-column    bg-primary mb-3\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <Field type=\"password\" id=\"password\" name=\"password\" />\r\n                      <ErrorMessage\r\n                        name=\"password\"\r\n                        component=\"div\"\r\n                        className=\"error\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  <div className=\"form-control d-flex flex-column bg-primary mb-3\">\r\n                    <label htmlFor=\"image\">Image</label>\r\n                    <input\r\n                      className=\"row mb-4 inputFile\"\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      onChange={(event) => {\r\n                        formik.setFieldValue(\"image\", event.target.files[0]);\r\n                      }}\r\n                    ></input>\r\n                    <span className=\"error\">{errors.image}</span>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={!formik.isValid || formik.isSubmitting}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst H2hGame = ({ gameId }) => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [game, setGame] = useState({});\r\n\r\n  useEffect(() => {\r\n    const h2h = async () => {\r\n      try {\r\n        let playersInGame = await h2hService.getByGameId(gameId);\r\n        playersInGame = await playersInGame.data[0].players;\r\n        setPlayers(playersInGame);\r\n      } catch (error) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    h2h();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const game = async () => {\r\n      try {\r\n        let gameForH2h = await gameService.gameById(gameId);\r\n        setGame(gameForH2h.data);\r\n      } catch (error) {\r\n        console.log(\"Error\");\r\n      }\r\n    };\r\n    game();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pb-1\">\r\n      <PageHeader titleText=\"Head 2 Head\" />\r\n      <div className=\"col-lg-8 col-12\" id=\"cardTop\">\r\n        <ol className=\"statsList \">\r\n          <li\r\n            id=\"gameLi\"\r\n            className=\"statsHero d-flex\"\r\n            style={{\r\n              backgroundImage: `url(${\r\n                process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n              })`,\r\n            }}\r\n          >\r\n            <div className=\"gameH2h d-flex w-100 justify-content-evenly\">\r\n              <div className=\"player1\">Player 1</div>\r\n              <div className=\"player2\">Player 2</div>\r\n            </div>\r\n          </li>\r\n          {players.length > 0 &&\r\n            players.map((p) => (\r\n              <div\r\n                className=\"statsRow w-100 justify-content-evenly\"\r\n                key={p[0].id}\r\n              >\r\n                <div className=\"rowPlayer newGame\">\r\n                  <img src={`${apiImage}${p[0].image}`} alt=\"\" />\r\n                  <p className=\"playerNameOnGame m-0 text-primary\">\r\n                    {p[0].name}\r\n                  </p>\r\n                </div>\r\n                <p className=\"d-flex align-items-center\">\r\n                  <strong>Vs</strong>\r\n                </p>\r\n                <div className=\"rowPlayer newGame\">\r\n                  <img src={`${apiImage}${p[1].image}`} alt=\"\" />\r\n                  <p className=\"playerNameOnGame m-0 text-primary\">\r\n                    {p[1].name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hGame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport userService from \"../../services/userService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport H2hGame from \"../h2h/h2hGame\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\nimport CashingDetails from \"./cashingDetails\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NewGame = (props) => {\r\n  const [data, setData] = useState({});\r\n  const [id, setId] = useState(\"\");\r\n  const [me, setMe] = useState({});\r\n  const [manager, setManager] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    const players = async () => {\r\n      const getGameManager = await userService.getUserDetails();\r\n      me.id = getGameManager.data._id;\r\n      me.name = getGameManager.data.nickName;\r\n      setMe(me);\r\n\r\n      try {\r\n        let playersInGame = await gameService.gameById(\r\n          props.match.params.gameId\r\n        );\r\n        setData(playersInGame.data);\r\n        setId(playersInGame.data._id);\r\n        return () => ac.abort(); // Abort both fetches on unmount\r\n      } catch (e) {\r\n        console.log(e, \"EE\");\r\n      }\r\n    };\r\n\r\n    players();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const manager = data.game_manager;\r\n    setManager(manager);\r\n  }, [data.game_manager]);\r\n\r\n  const addCashing = (playerId, playerName, playerImage) => {\r\n    Swal.fire({\r\n      title: `Add Cashing to ${playerName}?`,\r\n      imageUrl: `${apiImage}${playerImage}`,\r\n      imageWidth: 100,\r\n      imageHeight: 100,\r\n      imageAlt: \"Custom image\",\r\n      showDenyButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#00a9ff\",\r\n      denyButtonColor: \"#08e046\",\r\n      confirmButtonText: \"50\",\r\n      denyButtonText: `100`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let game = { ...data };\r\n        game.gameId = props.match.params.gameId;\r\n        if (game.gameId) {\r\n          game.isOpen = true;\r\n          let player = data.players.find((e) => playerId === e.id);\r\n          player.cashing += 50;\r\n          player.numOfCashing += 1;\r\n          delete game._id;\r\n          delete game.__v;\r\n          let cashingDetails = {\r\n            playerId: player.id,\r\n            playerName: player.name,\r\n            playerCashing: 50,\r\n            time: new Date(),\r\n          };\r\n          if (game.cashing_details) {\r\n            game.cashing_details.push(cashingDetails);\r\n          } else {\r\n            game.cashing_details = [];\r\n            game.cashing_details.push(cashingDetails);\r\n          }\r\n          setData(game);\r\n\r\n          gameService.updateGame(game.gameId, game);\r\n          const chips = new Audio(process.env.PUBLIC_URL + `sounds/chips.mp3`);\r\n          chips.play();\r\n          toast.success(`💸 💸Added 50 to ${player.name}`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        }\r\n      } else if (result.isDenied) {\r\n        let game = { ...data };\r\n        game.gameId = props.match.params.gameId;\r\n        if (game.gameId) {\r\n          game.isOpen = true;\r\n          let player = data.players.find((e) => playerId === e.id);\r\n          player.cashing += 100;\r\n          player.numOfCashing += 2;\r\n          delete game._id;\r\n          delete game.__v;\r\n          let cashingDetails = {\r\n            playerId: player.id,\r\n            playerName: player.name,\r\n            playerCashing: 100,\r\n            time: new Date(),\r\n          };\r\n          if (game.cashing_details) {\r\n            game.cashing_details.push(cashingDetails);\r\n          } else {\r\n            game.cashing_details = [];\r\n            game.cashing_details.push(cashingDetails);\r\n          }\r\n          setData(game);\r\n\r\n          gameService.updateGame(game.gameId, game);\r\n          const chips = new Audio(process.env.PUBLIC_URL + `sounds/chips.mp3`);\r\n          chips.play();\r\n          toast.success(`💸 💸Added 100 to ${player.name}`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const undoCashing = (playerId) => {\r\n    let player = data.players.find((e) => playerId === e.id);\r\n    if (player.cashing > 0) {\r\n      let game = { ...data };\r\n      game.gameId = props.match.params.gameId;\r\n      delete game._id;\r\n      delete game.__v;\r\n      //remove the player's cashing from cashing details\r\n      const indexOfLastPlayerCashing = game.cashing_details\r\n        .map((el) => el.playerId)\r\n        .lastIndexOf(playerId);\r\n\r\n      const playersLastCashing =\r\n        game.cashing_details[indexOfLastPlayerCashing].playerCashing;\r\n\r\n      game.cashing_details.splice(indexOfLastPlayerCashing, 1);\r\n\r\n      player.cashing -= playersLastCashing;\r\n      player.numOfCashing -= 1;\r\n      setData(game);\r\n      const cancel = new Audio(process.env.PUBLIC_URL + `sounds/cancel.mp3`);\r\n      cancel.play();\r\n      gameService.updateGame(game.gameId, game);\r\n    }\r\n  };\r\n\r\n  const handleChange = (playerId, e) => {\r\n    let play = { ...data };\r\n    let player = play.players.find((e) => playerId === e.id);\r\n    player.cashedOut = true;\r\n\r\n    e.target.value\r\n      ? (player.cashInHand = parseInt(e.target.value))\r\n      : (player.cashInHand = 0);\r\n    player.profit = player.cashInHand - player.cashing;\r\n    let game = play;\r\n    setData(game);\r\n  };\r\n\r\n  const cashOutPlayer = (playerId) => {\r\n    let player = data.players.find((e) => playerId === e.id);\r\n    player.finishedGame = true;\r\n    player.cashOutTime = new Date();\r\n    let game = { ...data };\r\n    game.gameId = props.match.params.gameId;\r\n    delete game._id;\r\n    delete game.__v;\r\n    delete game.playerCashedOut;\r\n    gameService.updateGame(game.gameId, game);\r\n    game.playerCashedOut = true;\r\n    setData(game);\r\n\r\n    /// ! add cashing details\r\n  };\r\n\r\n  const editCashing = (playerId) => {\r\n    let player = data.players.find((e) => {\r\n      return playerId === e.id;\r\n    });\r\n    player.finishedGame = false;\r\n    player.edit = true;\r\n    let game = { ...data };\r\n    setData(game);\r\n  };\r\n\r\n  const updateGame = () => {\r\n    Swal.fire({\r\n      title: \"sure you want to end game?\",\r\n      text: \"you won't be able to cancel\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let game = { ...data };\r\n        game.gameId = props.match.params.gameId;\r\n        delete game._id;\r\n        delete game.playerCashedOut;\r\n        game.isOpen = false;\r\n        game.players.sort((a, b) => b.profit - a.profit);\r\n        let gameRank = 1;\r\n        game.players.map((p) => (p.gameRank = gameRank++));\r\n        setData(game);\r\n        gameService.updateGame(game.gameId, game).then((res) => {\r\n          h2hService.updateH2h(game.gameId);\r\n          setData(res.data);\r\n        });\r\n        props.history.replace(`/last-game/${data.team_id}`);\r\n      }\r\n    });\r\n  };\r\n\r\n  const takeControl = async () => {\r\n    Swal.fire({\r\n      title: \"Take control of game?\",\r\n      text: \"\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        setManager(me);\r\n        if (manager)\r\n          toast.success(`🤟 ${me.name} is now manager`, {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n      }\r\n    });\r\n    await gameService.updateManager(id, me);\r\n  };\r\n\r\n  if (!id) {\r\n    return <div className=\"text-primary\">No Games</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Game No.\" />\r\n        <p className=\"text-danger\">{id}</p>\r\n        <p className=\"text-primary\">\r\n          Started At:{\" \"}\r\n          {`${new Date(data.createdAt).toLocaleDateString(\"en-GB\")}\r\n        ${new Date(data.createdAt).toLocaleString(\"en-US\", {\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n          hour12: false,\r\n        })}`}\r\n        </p>\r\n        <p className=\"m-0 mb-1 p-0 text-primary\">\r\n          Game Manager:<span>{manager ? manager.name : \"\"}</span>\r\n        </p>\r\n        {data.length < 1 && (\r\n          <div className=\"spinner pt-2\">\r\n            <SpinnerInfinity\r\n              size={130}\r\n              thickness={151}\r\n              speed={70}\r\n              color=\"rgba(252, 252, 252, 1)\"\r\n              secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n              enabled={data.length === 0 ? true : false}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {data.players && manager.id === me.id && (\r\n          <div className=\"col-lg-8 col-12\" id=\"newGameTop\">\r\n            <Link\r\n              className=\"button-72 mb-2 px-\"\r\n              to={`/new-game/${data.team_id}`}\r\n            >\r\n              Add/Remove Players\r\n            </Link>\r\n            <div\r\n              className=\"alert alert-primary alert-dismissible \"\r\n              role=\"alert\"\r\n            >\r\n              <span\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\" className=\"text-black\">\r\n                  &times;\r\n                </span>\r\n              </span>\r\n              <strong>New Updates 21/12/22:</strong>\r\n              <span className=\"text-primary\">\r\n                <ol>\r\n                  <li>added option to cash in 100 or 50</li>\r\n                  <li>\r\n                    added option to cash out single player while game is on\r\n                  </li>\r\n                </ol>\r\n              </span>\r\n            </div>\r\n            <ol className=\"statsList\">\r\n              <li\r\n                id=\"gameLi\"\r\n                className=\"statsHero d-flex\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                  })`,\r\n                }}\r\n              >\r\n                <div className=\"gameHeaders d-flex justify-content-evenly\">\r\n                  <div className=\"P1\">Player</div>\r\n                  <div className=\"add1\">Add Cash</div>\r\n                  <div className=\"Cashing1\">Cashing</div>\r\n                  <div className=\"Hand1\">Cash In Hand</div>\r\n                  <div className=\"Profit1\">Profit</div>\r\n                  <div className=\"\">Cancel </div>\r\n                </div>\r\n              </li>\r\n              <React.Fragment>\r\n                {data.players.map((player) => (\r\n                  <li\r\n                    className=\"statsRows w-100 d-flex justify-content-evenly\"\r\n                    key={player.id}\r\n                  >\r\n                    <div className=\"rowPlayer newGame\">\r\n                      <img src={`${apiImage}${player.image}`} alt=\"player\" />\r\n                      <p className=\"playerNameOnGame m-0 text-primary\">\r\n                        {player.name}\r\n                      </p>\r\n                    </div>\r\n                    {!player.finishedGame ? (\r\n                      <i\r\n                        className=\"fas fa-money-bill-wave\"\r\n                        onClick={() =>\r\n                          addCashing(player.id, player.name, player.image)\r\n                        }\r\n                      >\r\n                        $$$\r\n                      </i>\r\n                    ) : (\r\n                      <p className=\"text-danger playerProfit\">Out</p>\r\n                    )}\r\n\r\n                    <div className=\"rowCash\">{player.cashing}</div>\r\n                    <div className=\"rowCashInHand\">\r\n                      {player.finishedGame ? (\r\n                        <p className=\"text-primary m-0 text-center\">\r\n                          {player.cashInHand}\r\n                        </p>\r\n                      ) : (\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"cashInHand\"\r\n                          onChange={(e) => handleChange(player.id, e)}\r\n                          value={\r\n                            player.cashInHand\r\n                              ? player.cashInHand\r\n                              : !player.cashInHand && player.cashedOut\r\n                              ? 0\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"playerProfit \">\r\n                      {player.profit ? player.profit : 0}\r\n                    </div>\r\n                    {player.cashedOut && !player.finishedGame && (\r\n                      <i\r\n                        className=\"fa-solid fa-floppy-disk text-primary\"\r\n                        onClick={(e) => cashOutPlayer(player.id)}\r\n                      >\r\n                        Save\r\n                      </i>\r\n                    )}\r\n                    {!player.cashedOut && !player.finishedGame && (\r\n                      <i\r\n                        className=\"fas fa-minus-circle\"\r\n                        onClick={() => undoCashing(player.id)}\r\n                      >\r\n                        Cancel\r\n                      </i>\r\n                    )}\r\n                    {player.cashedOut && player.finishedGame && (\r\n                      <i\r\n                        className=\"fa-solid fa-pen-to-square text-success\"\r\n                        onClick={() => editCashing(player.id)}\r\n                      >\r\n                        Edit\r\n                      </i>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </React.Fragment>\r\n              <li className=\"statsRows w-100 d-flex justify-content-evenly\">\r\n                <div className=\"rowPlayer text-primary\"></div>\r\n                <div className=\"fas fa-money-bill-wave text-primary\">Total</div>\r\n                <div className=\"rowCash text-primary\">\r\n                  {data.players.reduce((a, b) => {\r\n                    return a + b.cashing;\r\n                  }, 0)}\r\n                </div>\r\n                <div className=\"rowCashInHand text-center\">\r\n                  {\" \"}\r\n                  {data.players.reduce((a, b) => {\r\n                    return a + b.cashInHand;\r\n                  }, 0)}\r\n                </div>\r\n                <div className=\"playerProfit text-primary\">\r\n                  {data.players.reduce((a, b) => {\r\n                    return a + b.profit;\r\n                  }, 0)}\r\n                </div>\r\n                <div className=\"fas fa-minus-circle text-white\">Cancel</div>\r\n              </li>\r\n              {data.playerCashedOut && (\r\n                <li className=\"statsRows w-100 d-flex justify-content-evenly\">\r\n                  <div className=\"cashedOutPlayers\">\r\n                    After Cashed Out Players\r\n                  </div>\r\n                  <div className=\"rowCash text-primary\">\r\n                    {data.players.reduce((a, b) => {\r\n                      return a + b.cashing - b.cashInHand;\r\n                    }, 0)}\r\n                  </div>\r\n                  <div className=\"rowCashInHand\"></div>\r\n                  <div className=\"playerProfit text-primary\"></div>\r\n                  <div className=\"fas fa-minus-circle text-white\">Cancel</div>\r\n                </li>\r\n              )}\r\n\r\n              <div className=\"buttonsGame d-flex justify-content-between\">\r\n                <div\r\n                  className=\"btn btn-primary update m-2\"\r\n                  onClick={() => {\r\n                    updateGame();\r\n                  }}\r\n                >\r\n                  Update Game\r\n                </div>\r\n                <div className=\"btn btn-danger update m-2\">Reset Game</div>\r\n              </div>\r\n            </ol>\r\n          </div>\r\n        )}\r\n        {data.players && manager.id !== me.id && (\r\n          <button\r\n            className=\"button-72\"\r\n            onClick={() => {\r\n              takeControl();\r\n            }}\r\n          >\r\n            Take control of game\r\n          </button>\r\n        )}\r\n\r\n        <H2hGame gameId={data._id} className=\"mb-2\" />\r\n        <CashingDetails gameId={id} updated={data} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NewGame;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ClockSpinner from \"../clockSpinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport gameService from \"../../../services/gameService\";\r\nimport { apiImage } from \"../../../config.json\";\r\nimport PageHeader from \"../../common/pageHeader\";\r\n\r\nconst NewStatsCard = (props) => {\r\n    const [cardData, setCardData] = useState([]);\r\n    const [cardHeader, setCardHeader] = useState(\"\");\r\n    const [leaderData, setLeaderData] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    const [headerDetails, setHeaderDetails] = useState([]);\r\n    const [dates, setDates] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function getCardData() {\r\n            const teamId = props.match.params.teamId;\r\n            const query = new URLSearchParams(props.location.search);\r\n            const stats = query.get(\"stats\");\r\n            const cardTitle = query.get(\"cardTitle\");\r\n            let dataParam = query.get(\"data\");\r\n            setData(dataParam.split(\",\"));\r\n            let leaderParam = query.get(\"leaderData\");\r\n            setLeaderData(leaderParam.split(\",\"));\r\n            let headerData = query.get(\"headerData\");\r\n            setHeaderDetails(headerData.split(\",\"));\r\n            let seasonDates = query.get(\"seasonDates\");\r\n            setDates(JSON.parse(seasonDates));\r\n            console.log(\"seasonDates\", dates);\r\n            let month = query.get(\"month\");\r\n            const { data: cardStats } = await gameService.getCardStats(teamId, stats, month, JSON.parse(seasonDates));\r\n            setCardData(cardStats);\r\n            setCardHeader(cardTitle);\r\n        }\r\n        getCardData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"statsCardContainer py-3\">\r\n            {cardData.length === 0 && (\r\n                <div className=\"my-5 py-5\">\r\n                    <ClockSpinner />\r\n                </div>\r\n            )}\r\n            {cardData.length > 0 && (\r\n                <div className=\"statsDashboard pb-3\">\r\n                    <div className=\"ps-3\">\r\n                        <PageHeader titleText={cardHeader} />\r\n                    </div>\r\n                    <div className=\"cardHeaderDates d-flex justify-content-around\">\r\n                        <p className=\"\">{dates?.startDate}</p>\r\n                        <p className=\"\">{dates?.endDate}</p>\r\n                    </div>\r\n                    <div className=\"mx-3 newCardContainer\">\r\n                        <div className=\"newLeaderContainer d-flex justify-content-around\">\r\n                            <div className=\"leaderImage m-3\">\r\n                                <Link to={`/players-stats/${cardData[0]._id.id}`}>\r\n                                    <img src={`${apiImage}${cardData[0]._id.image}`} alt=\"leader\" />\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"leaderDetail pe-4\">\r\n                                <p>1.</p>\r\n                                <p className=\"leaderName\">{cardData[0]._id.name}</p>\r\n                                <p className=\"leaderProfit\">\r\n                                    {leaderData[0]}: <span>{cardData[0][data[0]]}</span>\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[1]}: {cardData[0][data[1]]}\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[2]}:{cardData[0][data[2]]}\r\n                                </p>\r\n                                <div>\r\n                                    {leaderData[3] && (\r\n                                        <p className=\"p-0\">\r\n                                            {leaderData[3]}:{cardData[0][data[3]]}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                                <div>\r\n                                    {leaderData[4] && (\r\n                                        <p className=\"p-0\">\r\n                                            {leaderData[4]}:{cardData[0][data[4]]}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ul start=\"2\" className=\"bg-white m-0  p-0 listPlayers\">\r\n                            <li className=\"text-primary  d-flex\">\r\n                                <div className=\"ms-2 fixedHeader d-flex justify-content-around\">\r\n                                    <p>Rank</p>\r\n                                    <p>Image</p>\r\n                                    <p className=\"headerName\">Player</p>\r\n                                </div>\r\n                                <div className=\"dynamicStatsCardHeader  d-flex justify-content-between\">\r\n                                    <p>{headerDetails[0]}</p>\r\n                                    <p>{headerDetails[1]}</p>\r\n                                    <p>{headerDetails[2]}</p>\r\n                                    <p>{headerDetails[3]}</p>\r\n                                    <p>{headerDetails[4]}</p>\r\n                                </div>\r\n                            </li>\r\n                            {cardData.slice(1).map((card, index) => (\r\n                                <li className=\"d-flex\" key={index}>\r\n                                    <div className=\"ms-2 fixedPlayerStats d-flex justify-content-around\">\r\n                                        <p className=\"rank text-center\">{index + 2}.</p>\r\n                                        <div className=\"ms-2 listPlayerStats my-1\">\r\n                                            <Link to={`/players-stats/${card._id.id}`}>\r\n                                                <img src={`${apiImage}${card._id.image}`} alt=\"\" />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <p className=\"ms-1 listPlayersName\">{card._id.name}</p>\r\n                                    </div>\r\n                                    <div className=\"dynamicStatsCard d-flex justify-content-between\">\r\n                                        <p className=\"text-bold\">{card[data[0]]}</p>\r\n                                        <p>{card[data[1]]}</p>\r\n                                        <p>{card[data[2]]}</p>\r\n                                        <p className=\"thirdList\">{card[data[3]]}</p>\r\n                                        <p>{card[data[4]]}</p>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewStatsCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../services/gameService\";\r\nimport PageHeader from \"../components/common/pageHeader\";\r\nimport H2hGameEnd from \"./h2h/h2hGameEnd\";\r\nimport { apiImage } from \"../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GameEnd = (props) => {\r\n    const teamId = props.match.params.teamId;\r\n    const [data, setData] = useState([]);\r\n    const [lastGame, setLastGame] = useState([]);\r\n    useEffect(() => {\r\n        const getLastGame = async () => {\r\n            let game = await gameService.lastGame(props.match.params.teamId);\r\n            game = game.data[0];\r\n            game.players.sort((a, b) => b.profit - a.profit);\r\n            setData(game.players);\r\n            setLastGame(game);\r\n        };\r\n\r\n        getLastGame();\r\n    }, [setData, props.match.params.teamId]);\r\n    let Rank = 1;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <PageHeader titleText=\"Last Game\" />\r\n\r\n            {data.length === 0 && lastGame._id && (\r\n                <div className=\"spinner pt-2\">\r\n                    <SpinnerInfinity\r\n                        size={130}\r\n                        thickness={151}\r\n                        speed={70}\r\n                        color=\"rgba(252, 252, 252, 1)\"\r\n                        secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n                        enabled={data.length === 0 ? true : false}\r\n                    />\r\n                </div>\r\n            )}\r\n            {data.length > 0 && (\r\n                <div className=\"col-lg-4 col-10\" id=\"card-top\">\r\n                    <ol className=\"statsList\">\r\n                        <li\r\n                            id=\"lastGameHero\"\r\n                            className=\"statsHero d-flex flex-column\"\r\n                            style={{\r\n                                backgroundImage: `url(${process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"})`,\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                {new Date(lastGame.createdAt).toLocaleDateString(\"en-GB\") +\r\n                                    \"  \" +\r\n                                    new Date(lastGame.createdAt).toLocaleString(\"en-US\", {\r\n                                        hour: \"2-digit\",\r\n                                        minute: \"2-digit\",\r\n                                        hour12: false,\r\n                                    }) +\r\n                                    \" - \" +\r\n                                    new Date(lastGame.updatedAt).toLocaleString(\"en-US\", {\r\n                                        hour: \"2-digit\",\r\n                                        minute: \"2-digit\",\r\n                                        hour12: false,\r\n                                    })}\r\n                            </p>\r\n                            <div className=\"stats d-flex w-100 justify-content-between\" id=\"lGame\">\r\n                                <p>Player</p>\r\n                                <p>Name</p>\r\n                                <p>Cashing</p>\r\n                                <p>Profit</p>\r\n                            </div>\r\n                        </li>\r\n                        <React.Fragment>\r\n                            {data.map((player) => (\r\n                                <li className=\"statsRow\" key={player.id}>\r\n                                    <div className=\"rowPosLast\">{Rank++}.</div>\r\n                                    <div className=\"rowImage\">\r\n                                        <img\r\n                                            src={data.length > 0 ? `${apiImage}${player.image}` : \"\"}\r\n                                            alt=\"player list row\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"rowName\" id=\"lGameName\">\r\n                                        {data.length > 1 ? player.name : \"\"}\r\n                                    </div>\r\n                                    <div className=\"rowCashing\">{data.length > 1 ? player.cashing : \"\"}</div>\r\n                                    <div\r\n                                        className={\r\n                                            player.profit > 0 ? \"rowProfit text-success\" : \"rowProfit text-danger\"\r\n                                        }\r\n                                    >\r\n                                        {player.profit}\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </React.Fragment>\r\n                    </ol>\r\n                    <H2hGameEnd gameId={lastGame._id} header=\"Head 2 Head\" />\r\n                    <Link className=\"btn btn-primary mb-3\" to={`/newMainTable/${teamId}`}>\r\n                        Team Tables & Statistics\r\n                        <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameEnd;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport _ from \"lodash\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst H2hGameCard = ({ team }) => {\r\n  const [games, setGames] = useState();\r\n  const [gamesData, setGamesData] = useState();\r\n  const [perPage, setPerPage] = useState(3);\r\n  const [page, setPage] = useState(0);\r\n  const [pages, setPages] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const lastH2h = async () => {\r\n      try {\r\n        let aGames = await h2hService.teamAllGames(team);\r\n        setGamesData(aGames.data);\r\n        let allGames = aGames.data.map((d) => _.flatten(d.players));\r\n        setGames(allGames);\r\n        setLoading(true);\r\n        setPages(Math.floor(games.length / perPage));\r\n      } catch (error) {\r\n        // console.log(\"error1\");\r\n      }\r\n    };\r\n    lastH2h();\r\n  }, [team, perPage, games ? games.length : \"\"]);\r\n\r\n  let created = 0;\r\n  let items = [];\r\n  items = gamesData\r\n    ? gamesData.slice(page * perPage, (page + 1) * perPage)\r\n    : \"\";\r\n\r\n  const handlePageClick = (event) => {\r\n    let pageC = event.selected;\r\n    setPage(pageC);\r\n  };\r\n  return (\r\n    <div>\r\n      {!games && (\r\n        <SpinnerInfinity\r\n          size={130}\r\n          thickness={151}\r\n          speed={70}\r\n          color=\"rgba(252, 252, 252, 1)\"\r\n          secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n          enabled={true}\r\n        />\r\n      )}\r\n      <div className=\"contain\">\r\n        <PageHeader titleText=\"All Games\" />\r\n        <div className=\"row\">\r\n          {loading && (\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              pageCount={items.length % 3 === 0 ? pages + 1 : pages}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\r\n                \"pagination text-white justify-content-center\"\r\n              }\r\n              activeClassName={\"active\"}\r\n              pageClassName={\"page-item\"}\r\n              pageLinkClassName={\"page-link\"}\r\n              previousClassName={\"page-item\"}\r\n              previousLinkClassName={\"page-link\"}\r\n              nextClassName={\"page-item\"}\r\n              nextLinkClassName={\"page-link\"}\r\n              marginPagesDisplayed={\"3\"}\r\n              // renderOnZeroPageCount={null}\r\n            />\r\n          )}\r\n          {gamesData &&\r\n            items.map((g) => (\r\n              <div className=\"col-12 col-lg-4 pb-4\" id=\"card-top\">\r\n                <ol className=\"statsList\">\r\n                  <li\r\n                    id=\"lastGameHero\"\r\n                    className=\"statsHero d-flex flex-column\"\r\n                    style={{\r\n                      backgroundImage: `url(${\r\n                        process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                      })`,\r\n                    }}\r\n                  >\r\n                    <span>\r\n                      {new Date(items[created++].createdAt).toLocaleDateString(\r\n                        \"en-GB\"\r\n                      )}\r\n                    </span>\r\n                    <div className=\"stats d-flex w-100 \" id=\"lGameP2P\">\r\n                      <p>Player 1</p>\r\n                      <p>profit</p>\r\n                      <p>points</p>\r\n                      <p>points</p>\r\n                      <p>profit</p>\r\n                      <p>Player 2</p>\r\n                    </div>\r\n                  </li>\r\n                  {g.players.map((game) => {\r\n                    return (\r\n                      <li\r\n                        className=\"statsRow w-100\"\r\n                        key={game.name + Date.now()}\r\n                      >\r\n                        <div className=\"rowImage h2hGames\">\r\n                          <img\r\n                            src={`${apiImage}${game[0].image}`}\r\n                            alt=\"player list row\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"rowProfit \">{game[0].profit}</div>\r\n                        <div className=\"rowProfit\">{game[0].points}</div>\r\n                        <span className=\"mt-3 pt-1\">VS</span>\r\n                        <div className=\"rowProfit\">{game[1].points}</div>\r\n                        <div className=\"rowProfit \">{game[1].profit}</div>\r\n                        <div className=\"rowImage  h2hGames d-flex justify-content-center\">\r\n                          <img\r\n                            src={`${apiImage}${game[1].image}`}\r\n                            alt=\"player list row\"\r\n                          />\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ol>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hGameCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport H2hGameCard from \"./h2hGameCard\";\r\n\r\nconst H2hTable = (props) => {\r\n  const [data, setData] = useState();\r\n  const [hero, setHero] = useState();\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n\r\n  const teamId = props.match.params.teamId;\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await h2hService.getPointsByTeam(teamId);\r\n      table = table.data.filter((player) => player._id.name !== \"Nispach\");\r\n\r\n      setData(table);\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n    };\r\n\r\n    getTable();\r\n  }, [setData, teamId]);\r\n\r\n  let rank = 2;\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"H2H Table\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {!data && (\r\n        <SpinnerInfinity\r\n          size={130}\r\n          thickness={151}\r\n          speed={70}\r\n          color=\"rgba(252, 252, 252, 1)\"\r\n          secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n          enabled={!data ? true : false}\r\n          // enabled={true}\r\n        />\r\n      )}\r\n      {data && (\r\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n          <ul className=\"statsList\">\r\n            <li\r\n              className=\"statsHeroPerHour d-flex w-100 \"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"h2hInfo d-flex w-100 justify-content-between\">\r\n                <div className=\"statsInfo\">\r\n                  <div className=\"pos\">1.</div>\r\n                  <a href=\"#/\" id=\"heroName\">\r\n                    {hero ? hero._id.name : \"\"}\r\n                  </a>\r\n                  <div className=\"heroDate ps-1\">\r\n                    Average Points:\r\n                    <span className=\"ms-2 avgP\">\r\n                      {hero ? hero.avgPoints.toFixed(2) : \"\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"heroDate ps-1\">\r\n                    Games Played:\r\n                    <span className=\"ms-2 avgP\">\r\n                      {hero ? hero.numOfGames : \"\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"heroDate ps-1\">\r\n                    Winning:\r\n                    <span className=\"ms-2 avgP\">\r\n                      {hero ? hero.successPercentage : \"\"}%\r\n                    </span>\r\n                  </div>\r\n                  <div id=\"amount\" className=\"\">\r\n                    Total Points:\r\n                    <span className=\"ms-2\">{hero ? hero.totalPoints : \"\"}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"heroImage \">\r\n                  <img\r\n                    src={hero ? `${apiImage}${hero._id.image}` : \"\"}\r\n                    alt=\"hero\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li id=\"h2hLi\">\r\n              <div className=\"h2hDetailsRow  d-flex \">\r\n                <p>Rank</p>\r\n                <p>Image</p>\r\n                <p>Player</p>\r\n                <p>Avg Points</p>\r\n                <p>Games played</p>\r\n                <p>Winning</p>\r\n                <p>Points</p>\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow d-flex\" key={player._id.name}>\r\n                  <div className=\"rowPosTop\" id=\"rowPosTop\">\r\n                    {rank++}.\r\n                  </div>\r\n                  <div className=\"rowImageH2h\">\r\n                    <img\r\n                      src={`${apiImage}${player._id.image}`}\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"rowNameH2h\">{player._id.name}</div>\r\n                  <div className=\"rowH2hAvg\">{player.avgPoints.toFixed(2)}</div>\r\n                  <div className=\"rowH2hG\">{player.numOfGames}</div>\r\n                  <div className=\"rowSuccessTop\">\r\n                    {player.successPercentage}%\r\n                  </div>\r\n                  <div className=\"rowPointsTop\">{player.totalPoints}</div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <H2hGameCard team={teamId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport * as Yup from \"yup\";\r\n// import http from \"../../services/httpService\";\r\n// import { apiUrl } from \"../../config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../services/userService\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport teamService from \"../../services/teamService\";\r\n\r\nconst initialValues = {\r\n  teamName: \"\",\r\n  teamImage: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  teamName: Yup.string()\r\n    .min(2, \"name must be min 2 chars\")\r\n    .required(\"required\"),\r\n  teamImage: Yup.string(),\r\n});\r\nconst TeamSignUp = (props) => {\r\n  const [errors, setErrors] = useState({ image: \"\" });\r\n  const [teamDetails, setTeamDetails] = useState({\r\n    name: \"\",\r\n    players: [],\r\n    teamImage: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const player = async () => {\r\n      let user = await userService.getUserDetails();\r\n      delete user.data.password;\r\n      let details = { ...teamDetails };\r\n      details.players.push(user.data);\r\n      setTeamDetails(details);\r\n    };\r\n    player();\r\n  }, []);\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    onSubmitProps.setSubmitting(false);\r\n\r\n    let data = new FormData();\r\n    data.append(\"name\", values.teamName);\r\n    if (values.image) {\r\n      data.append(\"image\", values.image);\r\n    }\r\n    data.players = teamDetails.players;\r\n    await teamService.createTeam(data);\r\n    \r\n    toast(\"A new Team is opened\");\r\n    props.history.replace(\"/my-teams\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Team Registration Form\" />\r\n      <p className=\"start\">Start a new team</p>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6 col-12\">\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            validateOnMount\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <div className=\"row mt-4\">\r\n                  <div className=\"col-10 col-lg-4\">\r\n                    <Form>\r\n                      <div className=\"form-control d-flex flex-column bg-primary\">\r\n                        <label htmlFor=\"Team Name\">Team Name</label>\r\n                        <Field type=\"text\" id=\"teamName\" name=\"teamName\" />\r\n                        <ErrorMessage\r\n                          name=\"teamName\"\r\n                          component=\"div\"\r\n                          className=\"error\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-control d-flex flex-column bg-primary mb-3\">\r\n                        <label htmlFor=\"image\">Image</label>\r\n                        <input\r\n                          className=\"row mb-4 inputFile\"\r\n                          type=\"file\"\r\n                          name=\"image\"\r\n                          onChange={(event) => {\r\n                            formik.setFieldValue(\r\n                              \"image\",\r\n                              event.target.files[0]\r\n                            );\r\n                          }}\r\n                        ></input>\r\n                        <span className=\"error\">{errors.image}</span>\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                      <Link\r\n                        className=\"btn btn-info ms-3\"\r\n                        type=\"button\"\r\n                        to=\"/my-teams\"\r\n                      >\r\n                        Do it later\r\n                      </Link>\r\n                    </Form>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamSignUp;\r\n","import React from 'react';\r\nimport PageHeader from \"../common/pageHeader\"\r\n\r\nconst EditGames = (props) => {\r\n   let  iframeUrl=`https://nadav.retool.com/embedded/public/b9a1f778-e9c9-44f9-9309-37862ad3a349#teamId=${props.match.params.teamId}`;\r\n   \r\n    return ( \r\n        <div className=\"container pb-3\">\r\n            <PageHeader titleText=\"Edit Games\"/>\r\n            <p className='text-white'>In this section you can edit, update and delete games and games details.</p>\r\n            <ul className='text-white'>\r\n                <li>Only team managers can edit games.</li>\r\n                <li>when you edit or delete a game, this will not effects details on the relevant Head to Head game (who \r\n                    will not be updated automatically).\r\n                    This will be fixed soon.\r\n                </li>\r\n            </ul>\r\n            <iframe  title=\"edit game\"src= {iframeUrl} width=\"100%\" height=\"800px\"></iframe>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default EditGames;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport userService from \"../../services/userService\";\r\nimport gameService from \"../../services/gameService\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { SpinnerCircular } from \"spinners-react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport _ from \"lodash\";\r\nimport TotalPersonal from \"./totalPersonal\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst PlayerStats = (props) => {\r\n  const [me, setMe] = useState({});\r\n  const [stats, setStats] = useState({});\r\n  const [month, setMonth] = useState([]);\r\n  const [points, setPoints] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [chartDates, setChartDates] = useState([]);\r\n  const [chartCashing, setChartCashing] = useState([]);\r\n  let currentMonth = new Date();\r\n  let currentMonthNumber = currentMonth.getMonth() + 1;\r\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      if (me.teams) {\r\n        let table = await gameService.monthsData(me.teams[0]);\r\n        table = table.data;\r\n        let currentMonth = [...table];\r\n        currentMonth = currentMonth.filter(\r\n          (month) => month._id.monthPlayed === currentMonthNumber\r\n        );\r\n        currentMonth = currentMonth.find((e) => e._id.player_id === me._id);\r\n        setMonth(currentMonth);\r\n        let detailed = await gameService.personalGames(me._id);\r\n        setDetails(detailed.data);\r\n\r\n        let myDetailed = await gameService.personalGames(me._id);\r\n\r\n        let chartDetails = [];\r\n        let chartDates = [];\r\n        let chartCash = [];\r\n        try {\r\n          await myDetailed.data.forEach((e) =>\r\n            chartDetails.push(e.players.profit)\r\n          );\r\n          setChartData(chartDetails);\r\n\r\n          await myDetailed.data.forEach((e) =>\r\n            chartCash.push(e.players.cashing)\r\n          );\r\n          setChartCashing(chartCash);\r\n\r\n          await myDetailed.data.forEach((e) =>\r\n            chartDates.push(\r\n              new Date(e.createdAt).toLocaleDateString(\"en-GB\").substr(0, 5)\r\n            )\r\n          );\r\n          setChartDates(chartDates);\r\n        } catch {\r\n          console.log(\"errr\");\r\n        }\r\n      }\r\n    };\r\n\r\n    getTable();\r\n  }, [setMonth, currentMonthNumber, me.teams, me._id]);\r\n\r\n  useEffect(() => {\r\n    const getMydata = async () => {\r\n      let myData = await userService.getPlayerDetails(props.match.params.id);\r\n      delete myData.data.password;\r\n      setMe(myData.data);\r\n      let myStats = await gameService.personal(myData.data._id);\r\n      setStats(myStats.data[0]);\r\n    };\r\n    getMydata();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const points = async () => {\r\n      if (me._id) {\r\n        let myPoints = await h2hService.getPointsByPlayer(me._id);\r\n        setPoints(myPoints.data[0]);\r\n      }\r\n    };\r\n    points();\r\n  }, [me._id]);\r\n\r\n  const data = {\r\n    labels: chartDates,\r\n    datasets: [\r\n      {\r\n        label: \"Profit\",\r\n        data: chartData,\r\n        fill: false,\r\n        backgroundColor: \"#6c14b4\",\r\n        borderColor: \"#6c14b4\",\r\n      },\r\n      {\r\n        label: \"Cashing\",\r\n        data: chartCashing,\r\n        fill: false,\r\n        backgroundColor: \"#2752ea\",\r\n        borderColor: \"#2752ea\",\r\n      },\r\n    ],\r\n  };\r\n  let delayed;\r\n  const options = {\r\n    options: {\r\n      animation: {\r\n        onComplete: () => {\r\n          delayed = true;\r\n        },\r\n        delay: (context) => {\r\n          let delay = 0;\r\n          if (\r\n            context.type === \"data\" &&\r\n            context.mode === \"default\" &&\r\n            !delayed\r\n          ) {\r\n            delay = context.dataIndex * 400 + context.datasetIndex * 200;\r\n          }\r\n          return delay;\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          type: \"linear\",\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"container playerStats pb-4\">\r\n      <PageHeader titleText=\"Player Statistics\" />\r\n      {_.isEmpty(stats) && (\r\n        <div className=\"spinner\">\r\n          <SpinnerCircular\r\n            size={130}\r\n            thickness={151}\r\n            speed={81}\r\n            color=\"rgba(108, 20, 180, 1)\"\r\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\r\n            // enabled={true}\r\n            enabled={_.isEmpty(stats) ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {!_.isEmpty(stats) && (\r\n        <div className=\"\">\r\n          <div className=\"playerInfo bg-white col-11 col-lg-4\">\r\n            <span className=\"text-primary ms-3\">\r\n              {new Date().toLocaleDateString(\"en-GB\")}\r\n            </span>\r\n            <div\r\n              className=\"playerBg d-flex justify-content-around\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"pDetails\">\r\n                <p>\r\n                  {me.firstName} {me.lastName}\r\n                </p>\r\n                <p className=\"text-white\">{me.nickName}</p>\r\n              </div>\r\n              <div className=\"pImage\">\r\n                <img src={`${apiImage}${me.image}`} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStats d-flex justify-content-between mt-3\">\r\n              <div className=\"personalStatP\">\r\n                <p>Total Profit</p>\r\n                <p>{stats.totalProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Profit</p>\r\n                <p>{stats.avgProfit ? stats.avgProfit.toFixed(2) : 0}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Total Games</p>\r\n                <p>{stats.numOfGames}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Games W/ Profit</p>\r\n                <p>{stats.gamesWithProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Success %</p>\r\n                <p>{stats.successPercentage}%</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStatsRow2 d-flex justify-content-between\">\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Cashing</p>\r\n                <p>{stats.avgCashing.toFixed(2)}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Max Profit</p>\r\n                <p>{stats.maxProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Max Loss</p>\r\n                <p>{stats.minProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>{currentMonth}-Total Profit</p>\r\n                <p>{month ? month.totalProfit : \"No games this month\"}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>H2H Points</p>\r\n                <p>{points.totalPoints}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStats d-flex justify-content-between\">\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Game Rank</p>\r\n                <p>{stats.avgGameRank ? stats.avgGameRank.toFixed(2) : 0}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Last Game</p>\r\n                <p>{new Date(stats.lastGame).toLocaleDateString(\"en-GB\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"header\">\r\n            <h1 className=\"title  mt-2\">Personal Chart</h1>\r\n          </div>\r\n          <div className=\"col-lg-4 col-11\">\r\n            <Line data={data} options={options} />\r\n          </div>\r\n          <TotalPersonal details={details} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerStats;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService, { statsPerHour } from \"../../services/gameService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StatsPerHourCard = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [headerTitle, setHeaderTitle] = useState(\"\");\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [dataChartDetails, setdataChartDetails] = useState({});\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n  const [statsHour, setStatsHour] = useState([]);\r\n  const teamId = props.match.params.teamId;\r\n  const cardName = props.match.params.cardName;\r\n\r\n  useEffect(() => {\r\n    const getStats = async () => {\r\n      let table = await gameService.statsPerHour(teamId);\r\n      table = table.data;\r\n      setStatsHour(table);\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n      console.log(\"s\", hero);\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n      // console.log(teamImg);\r\n      // console.log('1',table);\r\n    };\r\n\r\n    getStats();\r\n  }, [teamId]);\r\n\r\n  // useEffect(() => {\r\n  //   const getTable = async () => {\r\n  //     let table = await gameService.cardsData(teamId, cardName);\r\n  //     table = table.data;\r\n\r\n  //     let accu = [];\r\n  //     const barChart = {\r\n  //       labels: [],\r\n  //       datasets: [\r\n  //         {\r\n  //           label: `${headerTitle} By Player`,\r\n  //           data: [],\r\n  //           backgroundColor: [\r\n  //             \"rgba(255, 99, 132, 0.5)\",\r\n  //             \"rgba(54, 162, 235, 0.5)\",\r\n  //             \"rgba(255, 206, 86, 0.5)\",\r\n  //             \"rgba(75, 192, 192, 0.5)\",\r\n  //             \"rgba(153, 102, 255, 0.5)\",\r\n  //             \"rgba(255, 159, 64, 0.5)\",\r\n  //             \"rgba(39, 186, 46, 0.5)\",\r\n  //             \"rgba(8, 20, 107, 0.5)\",\r\n  //             \"rgba(8, 20, 107, 0.5)\",\r\n  //           ],\r\n  //           borderColor: [\r\n  //             \"rgba(255, 99, 132, 1)\",\r\n  //             \"rgba(54, 162, 235, 1)\",\r\n  //             \"rgba(255, 206, 86, 1)\",\r\n  //             \"rgba(75, 192, 192, 1)\",\r\n  //             \"rgba(153, 102, 255, 1)\",\r\n  //             \"rgba(255, 159, 64, 1)\",\r\n  //             \"rgba(39, 186, 46,1)\",\r\n  //             \"rgba(8, 20, 107, 1)\",\r\n  //             \"rgba(8, 20, 107, 1)\",\r\n  //           ],\r\n  //           borderWidth: 1,\r\n  //         },\r\n  //       ],\r\n  //     };\r\n  //     try {\r\n  //       await table.forEach((player) => {\r\n  //         barChart.labels.push(player._id.name);\r\n  //         barChart.datasets[0].data.push(player.cardTitle);\r\n  //       });\r\n  //       setbarChartDetails(barChart);\r\n  //     } catch {\r\n  //       console.log(\"err1\");\r\n  //     }\r\n\r\n  //     const dataChart = {\r\n  //       labels: [],\r\n  //       datasets: [\r\n  //         {\r\n  //           data: [],\r\n  //           backgroundColor: [\r\n  //             \"rgba(255, 99, 132, 0.5)\",\r\n  //             \"rgba(54, 162, 235, 0.5)\",\r\n  //             \"rgba(255, 206, 86, 0.5)\",\r\n  //             \"rgba(75, 192, 192, 0.5)\",\r\n  //             \"rgba(153, 102, 255, 0.5)\",\r\n  //             \"rgba(255, 159, 64, 0.5)\",\r\n  //             \"rgba(39, 186, 46, 0.5)\",\r\n  //             \"rgba(8, 20, 107, 0.5)\",\r\n  //             \"rgba(8, 20, 107, 0.5)\",\r\n  //           ],\r\n  //           borderColor: [\r\n  //             \"rgba(255, 99, 132, 1)\",\r\n  //             \"rgba(54, 162, 235, 1)\",\r\n  //             \"rgba(255, 206, 86, 1)\",\r\n  //             \"rgba(75, 192, 192, 1)\",\r\n  //             \"rgba(153, 102, 255, 1)\",\r\n  //             \"rgba(255, 159, 64, 1)\",\r\n  //             \"rgba(39, 186, 46,1)\",\r\n  //             \"rgba(8, 20, 107, 1)\",\r\n  //             \"rgba(8, 20, 107, 1)\",\r\n  //           ],\r\n  //           borderWidth: 1,\r\n  //         },\r\n  //       ],\r\n  //     };\r\n  //     try {\r\n  //       await table.forEach((player) => {\r\n  //         dataChart.labels.push(player._id.name);\r\n  //         accu.push(player.cardTitle);\r\n  //       });\r\n  //       let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\r\n  //       let percentageSum = [];\r\n  //       accu.forEach((percent) => {\r\n  //         percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\r\n  //       });\r\n  //       dataChart.datasets[0].data = percentageSum;\r\n  //       setdataChartDetails(dataChart);\r\n  //     } catch {\r\n  //       console.log(\"err1\");\r\n  //     }\r\n\r\n  //     }\r\n  //     setData(table);\r\n  //   };\r\n\r\n  //   getTable();\r\n  // }, [setData, teamId, cardName, headerTitle]);\r\n\r\n  let rank = 2;\r\n  // ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n  return (\r\n    <div className=\"container pb-2\">\r\n      <PageHeader titleText=\"Stats Per Hour\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"team\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {statsHour.length === 0 && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {statsHour.length > 0 && hero._id && (\r\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n          <ol className=\"statsList\">\r\n            <li\r\n              className=\"statsHeroPerHour d-flex w-100\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"statsInfo flex-fill\" id=\"perHourHeroSide\">\r\n                <div className=\"pos\">1.</div>\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  {statsHour.length > 0 ? hero._id.name : \"\"}\r\n                </Link>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <div className=\"heroPerHour\">Hours Played:</div>\r\n                  <div className=\"heroPerHour \">{hero.hoursPlayed}</div>\r\n                </div>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <p className=\"heroPerHour m-0\">Profit Per Hour:</p>\r\n                  <p className=\"heroPerHour m-0\">\r\n                    {\" \"}\r\n                    {statsHour.length > 0 ? hero.profitPerHour : \"\"}\r\n                  </p>\r\n                </div>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <p className=\"heroPerHour m-0\">Cashing Per Hour:</p>\r\n                  <p className=\"heroPerHour m-0\">\r\n                    {\" \"}\r\n                    {statsHour.length > 0 ? hero.cashingPerHour : \"\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"heroImagePerHour\">\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  <img\r\n                    src={\r\n                      statsHour.length > 0 ? `${apiImage}${hero._id.image}` : \"\"\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n              </div>\r\n            </li>\r\n\r\n            <li className=\"statsHeaderPerHour d-flex w-100 justify-content-between\">\r\n              <div>Rank</div>\r\n              <div>Image</div>\r\n              <div>Player</div>\r\n              <div>Hours Played</div>\r\n              <div>Profit Per Hour</div>\r\n              <div>Cashing Per Hour</div>\r\n            </li>\r\n            {statsHour.map((player) => (\r\n              <li className=\"statsRow\">\r\n                <div className=\"rowPosPerHour\">{rank++}.</div>\r\n                <Link\r\n                  className=\"rowImagePerHour\"\r\n                  to={`/players-stats/${player._id.player_id}`}\r\n                >\r\n                  <img\r\n                    src={\r\n                      statsHour.length > 0\r\n                        ? `${apiImage}${player._id.image}`\r\n                        : \"\"\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n                <div className=\"rowNamePerHour\">\r\n                  {statsHour.length > 0 ? player._id.name : \"\"}\r\n                </div>\r\n                <div className=\"rowHours\">\r\n                  {statsHour.length > 0 ? player.hoursPlayed : \"\"}\r\n                </div>\r\n                <div\r\n                  className={\r\n                    player.profitPerHour > 0\r\n                      ? \"rowProfitPerHour text-success\"\r\n                      : \"rowProfitPerHour text-danger\"\r\n                  }\r\n                >\r\n                  {statsHour.length > 0 ? player.profitPerHour : \"\"}\r\n                </div>\r\n                <div className=\"rowProfitPerHour\">\r\n                  {statsHour.length > 0 ? player.cashingPerHour : \"\"}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsPerHourCard;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst CurrMonth = ({ header, name, team, month }) => {\r\n  const year = new Date().getFullYear();\r\n  const date = new Date(month.month);\r\n\r\n  let currentMonth = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  let players = month.players;\r\n\r\n  const compare = (a, b) => {\r\n    if (a.totalProfit < b.totalProfit) return 1;\r\n    if (a.totalProfit > b.totalProfit) return -1;\r\n    return 0;\r\n  };\r\n  players.sort(compare);\r\n  return (\r\n    <div className=\"cardDiv month\">\r\n      <div\r\n        className=\"card \"\r\n        id=\"mainStats\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            process.env.PUBLIC_URL + \"/icons/diamond-month.svg\"\r\n          })`,\r\n        }}\r\n      >\r\n        <h5 className=\"card-title text-white\">{players[0]._id.name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              players[0]._id.image\r\n                ? `${apiImage}${players[0]._id.image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body p-0\" id=\"statsCardBody\">\r\n          <div className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n            <div className=\"d-flex justify-content-around\">\r\n              <span id=\"month\">{currentMonth ? currentMonth : \"\"}</span>\r\n              <span>{players ? players[0].totalProfit : 0}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/tables/monthlyStats/${year}/${currentMonth}/${team._id}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrMonth;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport teamService from \"../../services/teamService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport NewMonthCard from \"./newMonthCard\";\r\nimport _ from \"lodash\";\r\n\r\nconst MonthlyStats = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [monthlyStats, setMonthlyStats] = useState([]);\r\n  const [dataByMonth, setDataByMonth] = useState([]);\r\n  const [chartDates, setChartDates] = useState([]);\r\n  const [chartProfitsByPlayer, setChartProfitsByPlayer] = useState([]);\r\n  const [profits, setProfits] = useState([]);\r\n  let currentMonth = new Date();\r\n  let currentMonthNumber = currentMonth.getMonth() + 1;\r\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\r\n\r\n  const teamId = props.match.params.teamId;\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.monthsData(teamId);\r\n      table = table.data;\r\n      const monthlyStatsGroup = await gameService.monthlyStats(\r\n        props.match.params.teamId\r\n      );\r\n      setMonthlyStats(monthlyStatsGroup.data);\r\n      let dataBySeperateMonth = _.chain(monthlyStats)\r\n        //https://stackoverflow.com/questions/23600897/using-lodash-groupby-how-to-add-your-own-keys-for-grouped-output\r\n        // Group the elements of Array based on `monthPlayed` property\r\n        .groupBy(\"_id.monthPlayed\")\r\n        // `key` is group's name (monthPlayed), `value` is the array of objects\r\n        .map((value, key) => ({ month: key, players: value }))\r\n        .value();\r\n      setDataByMonth(dataBySeperateMonth);\r\n\r\n      let dates = await gameService.monthlyByPlayer(teamId);\r\n      setChartProfitsByPlayer(dates.data);\r\n\r\n      let chartDates = [];\r\n      try {\r\n        await dataByMonth.forEach((e) =>\r\n          chartDates.push(\r\n            new Date(e.month).toLocaleString(\"en-US\", { month: \"short\" })\r\n          )\r\n        );\r\n      } catch {\r\n        console.log(\"errr\");\r\n      }\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n\r\n      table = table.filter(\r\n        (month) => month._id.monthPlayed === currentMonthNumber\r\n      );\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n      setData(table);\r\n      setChartDates(chartDates);\r\n      setProfits(chartProfitsByPlayer);\r\n    };\r\n\r\n    getTable();\r\n  }, [\r\n    setData,\r\n    teamId,\r\n    currentMonthNumber,\r\n    monthlyStats.length,\r\n    dataByMonth.length,\r\n    chartProfitsByPlayer.length,\r\n  ]);\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"player profit by month\",\r\n      },\r\n    },\r\n  };\r\n\r\n  let chartProfits = {};\r\n  chartProfits.labels = chartDates;\r\n  chartProfits.datasets = [];\r\n  profits.forEach((e) => {\r\n    chartProfits.datasets.push({\r\n      label: e[0],\r\n      data: e[2],\r\n      fill: false,\r\n      backgroundColor: \"white\",\r\n      borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n    });\r\n  });\r\n  console.log(\"chartProfits\", chartProfits);\r\n\r\n  return (\r\n    <div className=\"container pb-3\">\r\n      <PageHeader titleText=\"Total Profit By Months\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      <div className=\"byMonth text-primary row \">\r\n        {dataByMonth.length > 0 &&\r\n          dataByMonth.map((month) => (\r\n            <div className=\"col-6\">\r\n              <NewMonthCard month={month} team={teamImg} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"line-chart\">\r\n        <Line data={chartProfits} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyStats;\r\n","import React from \"react\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst SideBetsVsCardPlayer = ({ sideBetDetail }) => {\r\n  return (\r\n    <div className=\"sideBets1 w-50\" key={sideBetDetail._id.playerId}>\r\n      <p className={sideBetDetail.leader ? \"sideBetLeader\" : \"sideBetLoser\"}>\r\n        {sideBetDetail.leader ? \"Leader\" : \"\"}\r\n      </p>\r\n      <div className=\"sideBetsPlayer1 d-flex align-items-center justify-content-center\">\r\n        <img\r\n          src={`${apiImage}${sideBetDetail._id.playerImage}`}\r\n          alt=\"masterPlayer\"\r\n        />\r\n      </div>\r\n      <p className=\"text-primary\">\r\n        <b>\r\n          <u>{sideBetDetail._id.playerName}</u>\r\n        </b>\r\n      </p>\r\n      <p className=\"sidebetTitles\">\r\n        <u>Profit</u>\r\n      </p>\r\n      <p className=\"text-white m-0 sideBetsVsStats\">\r\n        {sideBetDetail.totalProfit}\r\n      </p>\r\n      <p className=\"sidebetTitles\">\r\n        <u>Total Games</u>\r\n      </p>\r\n      <p className=\"text-white  m-0 sideBetsVsStats\">\r\n        {sideBetDetail.totalGames}\r\n      </p>\r\n      <p className=\"sidebetTitles\">\r\n        <u>Average Profit</u>\r\n      </p>\r\n      <p className=\"text-white  m-0 sideBetsVsStats\">\r\n        {sideBetDetail.avgProfit}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBetsVsCardPlayer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport sideBetsService from \"../../services/sideBetsService\";\r\nimport SideBetsVsCardPlayer from \"./sideBetsVsCardPlayer\";\r\n\r\nconst SideBetsVsCard = ({ sideBets }) => {\r\n  const [sideBetDetails, setSideBetDetails] = useState([]);\r\n  useEffect(() => {\r\n    const getSideBetsExtraData = async () => {\r\n      let extraDetails = await sideBetsService.getExtraDetais(\r\n        sideBets.teamId,\r\n        sideBets.masterPlayer._id,\r\n        sideBets.slavePlayer._id,\r\n        sideBets.startDate,\r\n        sideBets.endDate\r\n      );\r\n\r\n      setSideBetDetails(extraDetails.data);\r\n    };\r\n    getSideBetsExtraData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"vsImage d-flex justify-content-between align-items-center mt-3\"\r\n      style={{\r\n        backgroundImage: `url(${apiImage}images/vs.jpg)`,\r\n      }}\r\n    >\r\n      {sideBetDetails.length > 0 &&\r\n        sideBetDetails.map((sideBetDetail) => (\r\n          <SideBetsVsCardPlayer\r\n            sideBetDetail={sideBetDetail}\r\n            key={sideBetDetail.totalProfit}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBetsVsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport sideBetsService from \"../../services/sideBetsService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SideBetsVsCard from \"./sideBetsVsCard\";\r\nimport { SpinnerCircular } from \"spinners-react\";\r\nconst SidebetsMain = (props) => {\r\n  const [approvedSideBets, setApprovedSideBets] = useState(\"No side Bets\");\r\n  const [dismissedSideBets, setDismissedSideBets] = useState(\"No side Bets\");\r\n\r\n  const teamId = props.match.params.teamId;\r\n  useEffect(() => {\r\n    const getSideBets = async () => {\r\n      const sideBets = await sideBetsService.getAllApprovedSideBets(teamId);\r\n      setApprovedSideBets(sideBets.data);\r\n      const dismissedSideBets = await sideBetsService.getAllDismissedSideBets(\r\n        teamId\r\n      );\r\n      setDismissedSideBets(dismissedSideBets.data);\r\n    };\r\n    getSideBets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Side Bets\" />\r\n      <div className=\"container d-flex justify-content-center\">\r\n        <Link to={`/side-bets/new-sidebet/${props.match.params.teamId}`}>\r\n          <div className=\"btn btn-primary my-3\">Create a new side bet</div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"sideBetCard\">\r\n        <p className=\"text-primary text-center my-2\">\r\n          {approvedSideBets == \"No side Bets yet\" ? approvedSideBets : \"\"}\r\n        </p>\r\n        <div className=\"d-flex justify-content-center\">\r\n          {approvedSideBets == \"No side Bets\" && (\r\n            <SpinnerCircular\r\n              size={130}\r\n              thickness={151}\r\n              speed={81}\r\n              color=\"rgba(108, 20, 180, 1)\"\r\n              secondaryColor=\"rgba(252, 252, 252, 1)\"\r\n              enabled={true}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {Array.isArray(approvedSideBets) &&\r\n          approvedSideBets.map((sideBet) => (\r\n            <>\r\n              <p className=\"text-center goldText mt-4 \">\r\n                Bet Sum: {sideBet.sideBetSum}💰\r\n              </p>\r\n              <div className=\"sideBetDates d-flex justify-content-between\">\r\n                <p className=\"text-white\">\r\n                  Start Date:{\" \"}\r\n                  {new Date(sideBet.startDate).toLocaleDateString(\"en-GB\")}\r\n                </p>\r\n                <p className=\"text-white\">\r\n                  End Date:{\" \"}\r\n                  {new Date(sideBet.endDate).toLocaleDateString(\"en-GB\")}\r\n                </p>\r\n              </div>\r\n              <SideBetsVsCard sideBets={sideBet} key={sideBet._id} />\r\n              <p className=\"credit\">\r\n                <a href=\"https://www.freepik.com/vectors/dual\">\r\n                  Dual vector created by starline - www.freepik.com\r\n                </a>\r\n              </p>\r\n            </>\r\n          ))}\r\n        {Array.isArray(dismissedSideBets) &&\r\n          dismissedSideBets.map((sideBet) => (\r\n            <div className=\"dismissed p-4\">\r\n              <p className=\"text-primary text-center\">Dismissed Bets</p>\r\n              <ul>\r\n                <li className=\"text-danger\">\r\n                  Offered By: {sideBet.masterPlayer.nickName} at:\r\n                  {new Date(sideBet.createdAt).toLocaleDateString(\"en-GB\")}, Sum\r\n                  :{sideBet.sideBetSum}💰<br></br> dismissed by{\" \"}\r\n                  {sideBet.slavePlayer.nickName} :\r\n                  {new Date(\r\n                    sideBet.slavePlayer.dissmissDate\r\n                  ).toLocaleDateString(\"en-GB\")}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebetsMain;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst MasterPlayer = ({ user }) => {\r\n  return (\r\n    <div className=\"container d-flex justify-content-center\">\r\n      <Link to={`/players-stats/${user._id}`}>\r\n        <div\r\n          className=\"teamShield d-flex justify-content-center flex-column align-items-center\"\r\n          style={{\r\n            backgroundImage: `url(${apiImage}images/fifaCard.png)`,\r\n          }}\r\n        >\r\n          <img src={`${apiImage}${user.image}`} alt=\"\" />\r\n          <p className=\"m-0\">{user.nickName}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MasterPlayer;\r\n","import React from \"react\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst ChoosePlayer = (props) => {\r\n  let player = props.player;\r\n  return (\r\n    <div className=\"player col-4\" onClick={() => props.selectPlayer(player)}>\r\n      <div className=\"sideBetPlayer text-center mt-3\">\r\n        <img src={`${apiImage}${player.image}`} alt=\"\" />\r\n        <p className=\"m-0\">{player.nickName}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoosePlayer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../services/userService\";\r\nimport sideBetsService from \"../../services/sideBetsService\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst SelectedPlayer = (props) => {\r\n  const choosen = props.player;\r\n  const teamId = props.teamId;\r\n\r\n  const [sideBetSum, setSideBetSum] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"2023-01-01\");\r\n  const [endDate, setEndDate] = useState(\"2023-12-31\");\r\n  const [masterPlayer, setMasterPlayer] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getMasterPlayer = async () => {\r\n      let me = await userService.getUserDetails();\r\n      delete me.data.password;\r\n      delete me.data.email;\r\n      setMasterPlayer(me.data);\r\n    };\r\n\r\n    getMasterPlayer();\r\n  }, []);\r\n  const getSideBetSum = (e) => {\r\n    setSideBetSum(e.target.value);\r\n  };\r\n  const getStartDate = (e) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n  const getEndDate = (e) => {\r\n    setEndDate(e.target.value);\r\n  };\r\n\r\n  const validateSideBet = (sideBetSumAmount, startDate, endDate) => {\r\n    if (\r\n      sideBetSumAmount < 1 ||\r\n      !sideBetSumAmount ||\r\n      sideBetSumAmount === NaN ||\r\n      !Number.isInteger(sideBetSumAmount)\r\n    ) {\r\n      toast.error(\"Side bet sum must be a number greater than 0\");\r\n      return;\r\n    }\r\n    if (\r\n      !moment(startDate, \"YYYY-MM-DD\", true).isValid() ||\r\n      !startDate ||\r\n      moment(startDate).year() !== new Date().getFullYear()\r\n    ) {\r\n      toast.error(\r\n        \"Start date must be date in YYYY-MM-DD format and in current year\"\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      !moment(endDate, \"YYYY-MM-DD\", true).isValid() ||\r\n      !endDate ||\r\n      moment(endDate).year() !== new Date().getFullYear()\r\n    ) {\r\n      toast.error(\r\n        \"End date must be date in YYYY-MM-DD format and in current year\"\r\n      );\r\n      return;\r\n    }\r\n    if (startDate > endDate) {\r\n      toast.error(\"Start date must be before end date\");\r\n      return;\r\n    }\r\n\r\n    const sideBet = {\r\n      sideBetSum: sideBetSumAmount,\r\n      startDate: startDate,\r\n      endDate: endDate,\r\n      masterPlayer: masterPlayer,\r\n      slavePlayer: choosen,\r\n      approvedBySlavePlayer: false,\r\n      teamId: teamId,\r\n    };\r\n    Swal.fire({\r\n      title: `create a side bet with ${choosen.nickName}?`,\r\n      imageUrl: `${apiImage}${choosen.image}`,\r\n      imageWidth: 100,\r\n      imageHeight: 100,\r\n      imageAlt: \"Custom image\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#00a9ff\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        sideBetsService.createSideBet(sideBet);\r\n        toast.success(\"Side bet created\");\r\n        window.location = `/#/main-table/${teamId}`;\r\n      }\r\n    });\r\n  };\r\n\r\n  const makeABet = () => {\r\n    const sideBetSumAmount = parseInt(sideBetSum);\r\n    validateSideBet(sideBetSumAmount, startDate, endDate);\r\n  };\r\n\r\n  const cancelBet = () => {\r\n    window.location = `/#/side-bets/${teamId}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <p className=\"text-center text-primary\">Make A Side Bet With player</p>\r\n      <div className=\"d-flex justify-content-center choosenPlayer mt-3\">\r\n        <img src={`${apiImage}${choosen.image}`} alt=\"\" />\r\n      </div>\r\n      <p className=\"selectedSideBet text-center\">{choosen.nickName}</p>\r\n      <div className=\"sideBetSum d-flex justify-content-center m-2\">\r\n        <p className=\"text-primary pe-2\">$ Bet Sum:</p>\r\n        <input\r\n          type=\"number\"\r\n          className=\"w-25\"\r\n          value={sideBetSum}\r\n          placeholder=\"Enter sum\"\r\n          onChange={(e) => getSideBetSum(e)}\r\n        />\r\n      </div>\r\n      <div className=\"datesSideBets\">\r\n        <div className=\"d-flex flex-column justify-content-center\">\r\n          <p className=\"text-primary pe-2 text-center\">Start Date:</p>\r\n          <span className=\"text-center\">Format: 'MM/DD/YYY'</span>\r\n          <div className=\"startDAte d-flex justify-content-center\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"w-50\"\r\n              value={startDate}\r\n              min=\"2023-01-01\"\r\n              onChange={(e) => getStartDate(e)}\r\n            />\r\n          </div>\r\n          <p className=\"text-primary pe-2 text-center\">End Date</p>\r\n          <span className=\"text-center\">Format: 'MM/DD/YYY'</span>\r\n\r\n          <div className=\"endDate d-flex justify-content-center\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"w-50\"\r\n              value={endDate}\r\n              max=\"2023-12-31\"\r\n              onChange={(e) => getEndDate(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between mt-3\">\r\n        <button className=\"btn btn-danger\" onClick={cancelBet}>\r\n          Cancel\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={makeABet}>\r\n          Make A Bet\r\n        </button>\r\n      </div>\r\n      <div className=\"rules py-3\">\r\n        <p className=\"text-center text-primary mt-3 \">\r\n          <b>\r\n            <u>Rules For Side Bets:</u>\r\n          </b>\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            You can choose the sum of side bet and the start and end date of the\r\n            bet (default is january 1st 2023 to december 31st 2023)\r\n          </li>\r\n          <li>\r\n            After you click 'Make A Bet', the second player will see a\r\n            notification about your side bet in the app and will have to accept\r\n            it. If he accepts, the side bet will be created and you will be able\r\n            to see it in the 'Side Bets' section.\r\n          </li>\r\n          <li>\r\n            If the second player doesn't accept the side bet, the side bet is\r\n            cancelled.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedPlayer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport MasterPlayer from \"./masterPlayer\";\r\nimport userService from \"../../services/userService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport ChoosePlayer from \"./choosePlayer\";\r\nimport SelectedPlayer from \"./selectedPlayer\";\r\n\r\nconst NewSideBet = (props) => {\r\n  const [user, setUser] = useState({});\r\n  const [team, setTeam] = useState({});\r\n  const [selectedPlayer, setSelectedPlayer] = useState();\r\n  const [sideBetTeamId, setSideBetTeamId] = useState();\r\n\r\n  const selectPlayer = (player) => {\r\n    delete player.password;\r\n    delete player.email;\r\n    setSelectedPlayer(player);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getSideBets = async () => {\r\n      const me = await userService.getUserDetails();\r\n      setUser(me.data);\r\n      const teamId = props.match.params.teamId;\r\n      setSideBetTeamId(teamId);\r\n      let teamForSideBet = await teamService.getTeamForSideBets(\r\n        teamId,\r\n        me.data._id\r\n      );\r\n      teamForSideBet = teamForSideBet.data[0].players;\r\n      setTeam(teamForSideBet);\r\n    };\r\n\r\n    getSideBets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"New Side Bet\" />\r\n      <MasterPlayer user={user} />\r\n      {!selectedPlayer && (\r\n        <div className=\"playersContainer d-flex flex-row row mx-3\">\r\n          <p className=\"text-center text-primary\">\r\n            Choose a player to offer a side-bet\r\n          </p>\r\n          {team.length > 0 &&\r\n            team.map((player) => (\r\n              <ChoosePlayer\r\n                player={player}\r\n                key={player._id}\r\n                selectPlayer={selectPlayer}\r\n                teamId={sideBetTeamId}\r\n              />\r\n            ))}\r\n        </div>\r\n      )}\r\n      {selectedPlayer && (\r\n        <SelectedPlayer player={selectedPlayer} teamId={sideBetTeamId} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewSideBet;\r\n","import React from \"react\";\r\nimport { apiImage } from \"../../config.json\";\r\nconst SingleGame = ({ game }) => {\r\n    return (\r\n        <div className=\"singleGame\">\r\n            <div className=\"singleGame  my-2\" key={game._id}>\r\n                <div className=\"gameHeaders text-black\">\r\n                    <p className=\"text-center\">Game Manager:{game.game_manager?.name}</p>\r\n                    <p className=\"text-center\">{game.date}</p>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <p className=\"d\">{game.startTime} - </p>\r\n                        <p>{game.endTime}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"gamePlayersDetails bg-white \">\r\n                    <div className=\"singleGameHeader d-flex justify-content-around px-2\">\r\n                        <p>Rank</p>\r\n                        <p>Image</p>\r\n                        <p>Player</p>\r\n                        <p>Profit</p>\r\n                        <p>Cashing</p>\r\n                    </div>\r\n                    {game.players.map((player) => (\r\n                        <div key={player.id} className=\"singleGameDetails d-flex justify-content-around text-center\">\r\n                            <p>{player.gameRank}</p>\r\n                            <div className=\"listPlayerStats my-1\">\r\n                                <img src={`${apiImage}${player.image}`} alt=\"\" />\r\n                            </div>\r\n                            <p>{player.name}</p>\r\n                            <p className={player.profit > 0 ? \"green\" : \"red\"}>{player.profit}</p>\r\n                            <p>{player.cashing}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleGame;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport SingleGame from \"./singleGame\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst AllGamesList = ({ teamId, seasonDates }) => {\r\n    const [allGames, setAllGames] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const pagination = 3;\r\n    useEffect(() => {\r\n        async function getAllGames() {\r\n            const { data: allGames } = await gameService.getAllGamesByTeam(teamId, pagination, page, seasonDates);\r\n            setAllGames(allGames);\r\n        }\r\n        getAllGames();\r\n    }, [seasonDates, page]);\r\n\r\n    const handlePageClick = (event) => {\r\n        let pageC = event.selected + 1;\r\n        pageC === 0 ? setPage(1) : setPage(pageC);\r\n    };\r\n    return (\r\n        <div>\r\n            <h2 className=\"allGamesTitle text-center\">All Games</h2>\r\n            <ReactPaginate\r\n                previousLabel={\"prev\"}\r\n                nextLabel={\"next\"}\r\n                pageCount={allGames.length % pagination === 0 ? page + 1 : page}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination text-white justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n            />\r\n            {allGames.length > 0 && allGames.map((game) => <SingleGame game={game} key={game._id} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllGamesList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n\r\nconst BigCard = ({ teamId, cardTitle, stats, data, playersData, leaderData, headerData, seasonDates }) => {\r\n    const [cardStats, setCardStats] = useState([]);\r\n    useEffect(() => {\r\n        async function getCardStats() {\r\n            const { data: cardStats } = await gameService.getCardStats(teamId, stats, null, seasonDates);\r\n            setCardStats(cardStats);\r\n        }\r\n        getCardStats();\r\n    }, [seasonDates]);\r\n\r\n    return (\r\n        <>\r\n            {cardStats.length > 0 && (\r\n                <div className=\"profitsContainer p-0\">\r\n                    <p className=\"pt-3 ps-3  totalProfitNewCard\">{cardTitle}</p>\r\n                    <div className=\"col-12 profitCard\">\r\n                        <div className=\"leaderContainer d-flex justify-content-between\">\r\n                            <div className=\"leaderImage m-3\">\r\n                                <img src={`${apiImage}${cardStats[0]._id.image}`} alt=\"leader\" />\r\n                            </div>\r\n                            <div className=\"leaderDetail pe-4\">\r\n                                <p>1.</p>\r\n                                <p className=\"leaderName\">{cardStats[0]._id.name}</p>\r\n                                <p className=\"leaderProfit\">\r\n                                    {leaderData[0]}: <span>{cardStats[0][data[0]]}</span>\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[1]}: {cardStats[0][data[1]]}\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[2]}:{cardStats[0][data[2]]}\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[3]}: {cardStats[0][data[3]]}\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[4]}: {cardStats[0][data[4]]}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ol start=\"2\" className=\"bg-white m-0 pt-2 ps-1 secondPlayer\">\r\n                        <li className=\"d-flex flex-row\">\r\n                            2.\r\n                            <div className=\"secondPlayerImage \">\r\n                                <img src={`${apiImage}${cardStats[1]._id.image}`} alt=\"\" />\r\n                            </div>\r\n                            <span className=\"mx-1\">{cardStats[1]._id.name}- </span>\r\n                            {playersData[0]}:<span className=\"mx-1 playersNewProfit\">{cardStats[1][data[0]]}</span>{\" \"}\r\n                            {playersData[1]}:{cardStats[1][data[1]]} {playersData[2]}:{cardStats[1][data[2]]}{\" \"}\r\n                            {playersData[3]}:{cardStats[1][data[3]]} {playersData[4]}:{cardStats[1][data[4]]}\r\n                        </li>\r\n                        <li className=\"d-flex flex-row mt-2\">\r\n                            3.\r\n                            <div className=\"secondPlayerImage \">\r\n                                <img src={`${apiImage}${cardStats[2]._id.image}`} alt=\"\" />\r\n                            </div>\r\n                            <span className=\"mx-1\">{cardStats[2]._id.name}- </span>\r\n                            {playersData[0]}:<span className=\"mx-1 playersNewProfit\">{cardStats[2][data[0]]}</span>{\" \"}\r\n                            {playersData[1]}:{cardStats[2][data[1]]} {playersData[2]}:{cardStats[2][data[2]]}{\" \"}\r\n                            {playersData[3]}:{cardStats[2][data[3]]} {playersData[4]}:{cardStats[2][data[4]]}\r\n                        </li>\r\n                    </ol>\r\n                    <p className=\"bg-white fullTable\">\r\n                        <Link\r\n                            className=\"linkToNewCard\"\r\n                            to={`/newMainTable/newStatsCard/${teamId}?stats=${stats}&cardTitle=${cardTitle}&data=${data}&leaderData=${leaderData}&headerData=${headerData}&seasonDates=${JSON.stringify(\r\n                                seasonDates\r\n                            )}`}\r\n                        >\r\n                            View Full Table <AiOutlineArrowRight />\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BigCard;\r\n","import React, { Component } from \"react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PlayersImages = ({ player }) => {\r\n  return (\r\n    <Link to={`/players-stats/${player._id}`}>\r\n      <img\r\n        src={`${apiImage}${player.image}`}\r\n        alt=\"player image\"\r\n        className=\"rounded-circle\"\r\n      />\r\n      <p className=\"text-center playerName\">{player.nickName}</p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PlayersImages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n\r\nconst SmallCard = ({\r\n    teamId,\r\n    cardTitle,\r\n    stats,\r\n    data,\r\n    playersData,\r\n    leaderData,\r\n    extraHeader = null,\r\n    headerData,\r\n    seasonDates,\r\n}) => {\r\n    const [cardStats, setCardStats] = useState([]);\r\n    useEffect(() => {\r\n        async function getCardStats() {\r\n            const { data: cardStats } = await gameService.getCardStats(teamId, stats, null, seasonDates);\r\n            setCardStats(cardStats);\r\n        }\r\n        getCardStats();\r\n    }, [seasonDates]);\r\n    return (\r\n        <>\r\n            {/* {cardStats === \"No data found\" && (\r\n                <div className=\"container mt-5\">\r\n                    <p className=\"text-danger text-center\">No Games Played This Month</p>\r\n                </div>\r\n            )} */}\r\n            {cardStats.length > 0 && Array.isArray(cardStats) && (\r\n                <div className=\"smallCardContainer\">\r\n                    <p className=\"text-center pt-2  newSmallCard\">{cardTitle}</p>\r\n                    <div className=\"col-12 profitCard\">\r\n                        <div className=\"Small\">\r\n                            <div className=\"leaderImageSmall mx-auto\">\r\n                                <img src={`${apiImage}${cardStats[0]._id.image}`} alt=\"leader\" className=\"mt-1\" />\r\n                            </div>\r\n                            {extraHeader && (\r\n                                <div className=\"extraHeaderSmall text-center\">\r\n                                    <span>{extraHeader}</span>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"leaderDetailSmall d-flex  flex-column text-center mt-1\">\r\n                                <p className=\"leaderName\">1.{cardStats[0]._id.name}</p>\r\n                                <p className=\"leaderProfit\">\r\n                                    {leaderData[0]}: <span>{cardStats[0][data[0]]}</span>\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[1]}: {cardStats[0][data[1]]}\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[2]}:{cardStats[0][data[2]]}\r\n                                </p>\r\n                                <p className=\"\">\r\n                                    {leaderData[3]}: {cardStats[0][data[3]]}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ol start=\"2\" className=\"bg-white m-0 p-0  secondPlayerSmall\">\r\n                        <li className=\"d-flex flex-row py-1\">\r\n                            2.\r\n                            <div className=\"secondPlayerImage \">\r\n                                <img src={`${apiImage}${cardStats[1]._id.image}`} alt=\"\" />\r\n                            </div>\r\n                            <span className=\"mx-1\">{cardStats[1]._id.name}- </span>\r\n                            {playersData[0]}\r\n                            <span className=\"mx-1 playersNewProfit\">{cardStats[1][data[0]]}</span>{\" \"}\r\n                            <p className=\"smallCardLastDetail\">\r\n                                {\" \"}\r\n                                {playersData[1]}\r\n                                {cardStats[1][data[1]]}\r\n                            </p>\r\n                        </li>\r\n                        <li className=\"d-flex flex-row mt-2\">\r\n                            3.\r\n                            <div className=\"secondPlayerImage\">\r\n                                <img src={`${apiImage}${cardStats[2]._id.image}`} alt=\"\" />\r\n                            </div>\r\n                            <span className=\"mx-1\">{cardStats[2]._id.name}- </span>\r\n                            {playersData[0]}\r\n                            <span className=\"mx-1 playersNewProfit\">{cardStats[2][data[0]]}</span>{\" \"}\r\n                            <p className=\"smallCardLastDetail\">\r\n                                {playersData[1]}\r\n                                {cardStats[2][data[1]]}\r\n                            </p>\r\n                        </li>\r\n                    </ol>\r\n                    <p className=\"bg-white fullTable\">\r\n                        {/* {cardTitle === \"Stats By Months 💵\" && (\r\n                            <Link className=\"linkToNewCard\" to={`/newMainTable/newByMonths/${teamId}`}>\r\n                                View Full Table <AiOutlineArrowRight />\r\n                            </Link>\r\n                        )} */}\r\n                        {/* {cardTitle !== \"Stats By Months 💵\" && ( */}\r\n                        <Link\r\n                            className=\"linkToNewCard\"\r\n                            to={`/newMainTable/newStatsCard/${teamId}?stats=${stats}&cardTitle=${cardTitle}&data=${data}&leaderData=${leaderData}&headerData=${headerData}\r\n                                &seasonDates=${JSON.stringify(seasonDates)}`}\r\n                        >\r\n                            View Full Table <AiOutlineArrowRight />\r\n                        </Link>\r\n                        {/* )} */}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SmallCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport sideBetsService from \"../../services/sideBetsService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n\r\nconst SideBetsCard = ({ teamId }) => {\r\n  const [approvedSideBets, setApprovedSideBets] = useState([]);\r\n  useEffect(() => {\r\n    async function getApprovedSideBets() {\r\n      const { data: approvedSideBets } =\r\n        await sideBetsService.getAllApprovedSideBets(teamId);\r\n      setApprovedSideBets(approvedSideBets);\r\n      console.log(\"approvedSideBets\", approvedSideBets);\r\n    }\r\n    getApprovedSideBets();\r\n  }, []);\r\n  return (\r\n    <div className=\"\">\r\n      {approvedSideBets.length > 0 && Array.isArray(approvedSideBets) && (\r\n        <div className=\"vsContainerFather\">\r\n          <div className=\"sideBetContainer vsContainer\">\r\n            <p className=\"pt-3 ps-3  totalProfitNewCard \">Side Bets 🫵🏻</p>\r\n            <div className=\" d-flex justify-content-around\">\r\n              <div className=\"sideBetPlayerOne\">\r\n                <div className=\"leaderImageSmall mx-auto\">\r\n                  <img\r\n                    src={`${apiImage}${approvedSideBets[0].masterPlayer.image}`}\r\n                    alt=\"leader\"\r\n                    className=\"mt-1\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"sideBetPlayerTwo\">\r\n                <div className=\"leaderImageSmall mx-auto\">\r\n                  <img\r\n                    src={`${apiImage}${approvedSideBets[0].slavePlayer.image}`}\r\n                    alt=\"leader\"\r\n                    className=\"mt-1\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-evenly\">\r\n              <div className=\"playerOneStats\">\r\n                <p>{approvedSideBets[0].masterPlayer.nickName}</p>\r\n              </div>\r\n              <div className=\"vsDatak text-center\">\r\n                <p>VS</p>\r\n                <p>Bet Sum:{approvedSideBets[0].sideBetSum}</p>\r\n                <p>\r\n                  Start Date:\r\n                  {new Date(approvedSideBets[0].startDate).toLocaleDateString(\r\n                    \"en-US\"\r\n                  )}\r\n                </p>\r\n                <p>\r\n                  End Date:\r\n                  {new Date(approvedSideBets[0].endDate).toLocaleDateString(\r\n                    \"en-US\"\r\n                  )}\r\n                </p>\r\n              </div>\r\n              <div className=\"playerTwoStats\">\r\n                <p>{approvedSideBets[0].slavePlayer.nickName}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p className=\"bg-white fullTable\">\r\n            <Link className=\"linkToNewCard\" to={`/side-bets/${teamId}`}>\r\n              View Full Table <AiOutlineArrowRight />\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      )}\r\n      {!Array.isArray(approvedSideBets) && (\r\n        <div className=\"noSideBets\">\r\n          <p className=\"text-danger\">{approvedSideBets}</p>\r\n          <button className=\"btn btn-primary\">Create New Side Bet</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBetsCard;\r\n","import React from \"react\";\r\n\r\nconst TotalStatsForTeam = ({ totalStats }) => {\r\n  return (\r\n    <div className=\"totalStatsForMainTable \">\r\n      <div className=\"row totalStatsForTeam\">\r\n        <div className=\"col-3 \">\r\n          Total Cash:<br></br>\r\n          {totalStats[0].totalCashing}💵\r\n        </div>\r\n        <div className=\"col-3\">\r\n          Total Hours:<br></br>\r\n          {totalStats[0].totalHoursPlayed}⏳\r\n        </div>\r\n        <div className=\"col-3\">\r\n          Total Games:<br></br>\r\n          {totalStats[0].totalGames}🃏\r\n        </div>\r\n        <div className=\"col-3\">\r\n          Last Game:<br></br>\r\n          {totalStats[0].lastGamePlayed}🏆\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalStatsForTeam;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SeasonPick = ({ teamId, updateSeasonDates }) => {\r\n    const [seasons, setSeasons] = useState({});\r\n    const [seasonPick, setSeasonPick] = useState(0);\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n    useEffect(() => {\r\n        async function getSeasons() {\r\n            const { data: seasons } = await gameService.GetSeasonYears(teamId);\r\n            setSeasons(seasons);\r\n        }\r\n        getSeasons();\r\n    }, []);\r\n    const handleSeasonPick = (e) => {\r\n        setSeasonPick(e.target.value);\r\n    };\r\n\r\n    const getStartDate = (e) => {\r\n        setStartDate(e.target.value);\r\n    };\r\n\r\n    const getEndDate = (e) => {\r\n        setEndDate(e.target.value);\r\n        console.log(\"end date\", e.target.value);\r\n        console.log(\"start date\", startDate);\r\n        if (startDate) {\r\n            if (e.target.value <= startDate) {\r\n                toast.error(\"End date must be greater than start date...change your pick\");\r\n            }\r\n        } else {\r\n            if (e.target.value <= `${seasonPick}-01-01`) {\r\n                toast.error(\"End date must be greater than start date...change your pick\");\r\n            }\r\n        }\r\n        updateSeasonDates(startDate, e.target.value, seasonPick);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <p className=\"text-white text-center\">Select A Season</p>\r\n            <div className=\"season d-flex justify-content-center\">\r\n                <div className=\"col-6 mt-2\">\r\n                    <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleSeasonPick}>\r\n                        {!_.isEmpty(seasons) &&\r\n                            seasons.map((season) => (\r\n                                <option value={season._id} key={season._id}>\r\n                                    {season._id}\r\n                                </option>\r\n                            ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            {seasonPick && (\r\n                <div className=\"seasonDates d-flex justify-content-around\">\r\n                    <div className=\"seasonStartDate flex-column d-flex\">\r\n                        <p className=\"text-primary\">Start Date</p>\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"w-100\"\r\n                            value={startDate || `${seasonPick}-01-01`}\r\n                            min={`${seasonPick}-01-01`}\r\n                            max={`${seasonPick}-12-31`}\r\n                            onChange={(e) => getStartDate(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"seasonEndDate\">\r\n                        <p className=\"text-primary\">End Date</p>\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"w-100\"\r\n                            value={endDate || `${seasonPick}-12-31`}\r\n                            min={`${seasonPick}-01-01`}\r\n                            max={`${seasonPick}-12-31`}\r\n                            onChange={(e) => getEndDate(e)}\r\n                        />\r\n                        <p>Pick end date to see stats</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeasonPick;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n\r\nconst SmallMonthsCard = ({ teamId, seasonDates }) => {\r\n    const [monthsStats, setMonthsStats] = useState([]);\r\n    const monthNames = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n    const d = new Date();\r\n    const monthIndex = d.getMonth();\r\n    const monthName = monthNames[monthIndex];\r\n    useEffect(() => {\r\n        async function getCardStats() {\r\n            const { data: allGamesByMonth } = await gameService.getStatsByMonth(teamId, seasonDates);\r\n            setMonthsStats(allGamesByMonth);\r\n        }\r\n        getCardStats();\r\n    }, [seasonDates]);\r\n\r\n    return (\r\n        <>\r\n            {monthsStats.length > 0 && (\r\n                <div className=\"smallCardContainer\">\r\n                    <p className=\"text-center pt-2  newSmallCard\">Stats By Months 💵</p>\r\n                    <div className=\"col-12 profitCard\">\r\n                        <div className=\"Small\">\r\n                            <div className=\"leaderImageSmall mx-auto\">\r\n                                <img\r\n                                    src={`${apiImage}${monthsStats[0].players[0].image}`}\r\n                                    alt=\"leader\"\r\n                                    className=\"mt-1\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"extraHeaderSmall text-center\">\r\n                                <span>{monthName}</span>\r\n                            </div>\r\n\r\n                            <div className=\"leaderDetailSmall d-flex  flex-column text-center mt-1\">\r\n                                <p className=\"leaderName\">1.{monthsStats[0].players[0].name}</p>\r\n                                <p className=\"leaderProfit\">\r\n                                    Total Profit: <span>{monthsStats[0].players[0].totalProfit}</span>\r\n                                </p>\r\n                                <p className=\"\">Avg Profit: {monthsStats[0].players[0].roundedAvgProfit}</p>\r\n                                <p className=\"\">Total Games:{monthsStats[0].players[0].totalGames}</p>\r\n                                <p className=\"\">Avg Cashing: {monthsStats[0].players[0].roundedAvgCashing}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ol start=\"2\" className=\"bg-white m-0 p-0  secondPlayerSmall\">\r\n                        <li className=\"d-flex flex-row py-1\">\r\n                            2.\r\n                            <div className=\"secondPlayerImage \">\r\n                                <img src={`${apiImage}${monthsStats[0].players[1].image}`} alt=\"\" />\r\n                            </div>\r\n                            <span className=\"mx-1\">{monthsStats[0].players[1].name}- </span>\r\n                            Profit\r\n                            <span className=\"mx-1 playersNewProfit\">{monthsStats[0].players[1].totalProfit}</span>{\" \"}\r\n                            <p className=\"smallCardLastDetail\">\r\n                                {\" \"}\r\n                                AP\r\n                                {monthsStats[0].players[1].roundedAvgProfit}\r\n                            </p>\r\n                        </li>\r\n                        <li className=\"d-flex flex-row py-1\">\r\n                            3.\r\n                            <div className=\"secondPlayerImage \">\r\n                                <img src={`${apiImage}${monthsStats[0].players[2].image}`} alt=\"\" />\r\n                            </div>\r\n                            <span className=\"mx-1\">{monthsStats[0].players[2].name}- </span>\r\n                            Profit\r\n                            <span className=\"mx-1 playersNewProfit\">{monthsStats[0].players[2].totalProfit}</span>{\" \"}\r\n                            <p className=\"smallCardLastDetail\">\r\n                                {\" \"}\r\n                                AP\r\n                                {monthsStats[0].players[2].roundedAvgProfit}\r\n                            </p>\r\n                        </li>\r\n                    </ol>\r\n                    <p className=\"bg-white fullTable\">\r\n                        <Link\r\n                            className=\"linkToNewCard\"\r\n                            to={`/newMainTable/newByMonths/${teamId}?seasonDates=${JSON.stringify(seasonDates)}`}\r\n                        >\r\n                            View Full Table <AiOutlineArrowRight />\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SmallMonthsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport ClockSpinner from \"./clockSpinner\";\r\nimport teamService from \"../../services/teamService\";\r\nimport gameServices from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport AllGamesList from \"./allGamesList\";\r\nimport BigCard from \"./bigCard\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport PlayersImages from \"./playersImages\";\r\nimport SmallCard from \"./smallCard\";\r\nimport SideBetsCard from \"./sideBetsCard\";\r\nimport TotalStatsForTeam from \"./totalStatsForTeam\";\r\nimport SeasonPick from \"./seasonPick\";\r\nimport SmallMonthsCard from \"./smallMonthsCard\";\r\n\r\nconst NewMainTable = (props) => {\r\n    const teamId = props.match.params.teamId;\r\n    const [team, setTeam] = useState({});\r\n    const [totalStats, setTotalStats] = useState({});\r\n    const [seasonDates, setSeasonDates] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function getTeam() {\r\n            const { data: team } = await teamService.newGetTeam(teamId);\r\n            setTeam(team);\r\n        }\r\n        getTeam();\r\n        async function getTotalStatsForTeam() {\r\n            const { data: totalStats } = await gameServices.getTotalStatsForTeam(teamId, seasonDates);\r\n            setTotalStats(totalStats);\r\n        }\r\n        getTotalStatsForTeam();\r\n    }, [seasonDates]);\r\n\r\n    const updateSeasonDates = (startDate, endDate, seasonPick) => {\r\n        startDate = startDate || `${seasonPick}-01-01`;\r\n        const dates = { startDate, endDate };\r\n        setSeasonDates(dates);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container pb-3\">\r\n            <PageHeader className=\"mb-0\" titleText={new Date().getFullYear() + \" Top Stats\"} />\r\n            {_.isEmpty(totalStats) && <ClockSpinner />}\r\n\r\n            {!_.isEmpty(team) && (\r\n                <div className=\"teamDetails\">\r\n                    <div className=\"logoContainer d-flex justify-content-center \">\r\n                        <motion.img\r\n                            style={{\r\n                                width: 120,\r\n                                height: 120,\r\n                                borderRadius: 30,\r\n                                backgroundColor: \"#fff\",\r\n                                border: \"2px solid gold\",\r\n                            }}\r\n                            animate={{ rotate: 360 }}\r\n                            transition={{\r\n                                type: \"spring\",\r\n                                duration: 5,\r\n                                bounce: 0.6,\r\n                            }}\r\n                            src={`${apiImage}${team.teamImage}`}\r\n                            alt=\"team\"\r\n                        />\r\n                        {/* <div className=\"teamLogo\">\r\n                            <img src={`${apiImage}${team.teamImage}`} alt=\"\" />\r\n                        </div> */}\r\n                    </div>\r\n                    <p className=\"text-center mt-2\" id=\"teamName\">\r\n                        {team.name}\r\n                    </p>\r\n                    <div className=\"playersImages my-2\">\r\n                        <div className=\"row\">\r\n                            {team.players.map((player) => (\r\n                                <div\r\n                                    className=\"col-2 playersImagesRounded d-flex justify-content-center\"\r\n                                    key={player._id}\r\n                                >\r\n                                    <PlayersImages player={player} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {!_.isEmpty(totalStats) && (\r\n                <>\r\n                    <TotalStatsForTeam totalStats={totalStats} />\r\n                    <div className=\"odds text-center\">\r\n                        <a href=\"https://www.cardschat.com/poker/tools/poker-odds-calculator/\" target=\"_blank\">\r\n                            Texas Odds Calculator\r\n                        </a>\r\n                    </div>\r\n\r\n                    <SeasonPick teamId={teamId} updateSeasonDates={updateSeasonDates} />\r\n                </>\r\n            )}\r\n            {totalStats == \"No Games Played On These Dates\" && <p className=\"text-center text-danger\">{totalStats}</p>}\r\n            {!_.isEmpty(totalStats) && Array.isArray(totalStats) && (\r\n                <div className=\"playersCardsNew mt-3 pb-3\">\r\n                    <div className=\"row mx-2\">\r\n                        <BigCard\r\n                            teamId={teamId}\r\n                            cardTitle=\"Total Profit 💸\"\r\n                            stats=\"profitsStats\"\r\n                            data={[\"totalProfit\", \"totalGames\", \"gamesWithPlus\", \"avgProfit\", \"avgCashing\"]}\r\n                            playersData={[\"Total Profit\", \"TG\", \"GIP\", \"AP\", \"AC\"]}\r\n                            leaderData={[\"Profit\", \"Total Games\", \"Games In Plus\", \"Average Profit\", \"Average Cashing\"]}\r\n                            headerData={[\"P\", \"TG\", \"GIP\", \"AP\", \"AC\"]}\r\n                            seasonDates={seasonDates}\r\n                        />\r\n                        <div className=\"col-6 my-3\">\r\n                            <SmallCard\r\n                                teamId={teamId}\r\n                                cardTitle=\"Top 10 Profits 🔝\"\r\n                                stats=\"topTenProfits\"\r\n                                data={[\"profit\", \"date\", \"cashInHand\", \"cashing\"]}\r\n                                playersData={[\"P:\", \"D:\", \"CIN\", \"C\"]}\r\n                                leaderData={[\"Profit\", \"Date\", \"Cash In Hand\", \"Cashing\"]}\r\n                                headerData={[\"P\", \"D\", \"CIH\", \"C\"]}\r\n                                seasonDates={seasonDates}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 mt-3\">\r\n                            <SmallCard\r\n                                teamId={teamId}\r\n                                cardTitle=\"Head To Head 👊\"\r\n                                stats=\"head2head\"\r\n                                data={[\"totalPoints\", \"totalGames\", \"avgPoints\", \"successPercentage\"]}\r\n                                playersData={[\"Points: \", \"AP: \", \"\", \"\"]}\r\n                                leaderData={[\"Total Points\", \"Total Games\", \"Avg Points\", \"Success %\"]}\r\n                                headerData={[\"TP\", \"TG\", \"AP\", \"SP %\"]}\r\n                                seasonDates={seasonDates}\r\n                            />\r\n                        </div>\r\n                        <BigCard\r\n                            teamId={teamId}\r\n                            cardTitle=\"Hourly Stats ⏳\"\r\n                            stats=\"getHourlyStats\"\r\n                            data={[\"profitPerHour\", \"cashingPerHour\", \"hoursPlayed\", \"totalGames\", \"avgHourPerGame\"]}\r\n                            playersData={[\"Profit/H\", \"CPH\", \"HP\", \"TG\", \"AHPG\"]}\r\n                            leaderData={[\r\n                                \"Profit Per Hour\",\r\n                                \"Cashing Per Hour\",\r\n                                \"Hours Played\",\r\n                                \"Total Games\",\r\n                                \"Average Hour Per Game\",\r\n                            ]}\r\n                            headerData={[\"P/H\", \"CPH\", \"HP\", \"TG\", \"AHPG\"]}\r\n                            seasonDates={seasonDates}\r\n                        />\r\n                        <div className=\"col-6 mt-3\">\r\n                            <SmallMonthsCard teamId={teamId} seasonDates={seasonDates} />\r\n\r\n                            {/* <SmallCard\r\n                                teamId={teamId}\r\n                                cardTitle=\"Stats By Months 💵\"\r\n                                stats=\"getStatsByMonth\"\r\n                                data={[\"totalProfit\", \"roundedAvgProfit\", \"numOfGames\", \"roundedAvgCashing\"]}\r\n                                playersData={[\"Profit: \", \"AP: \", \"\", \"\"]}\r\n                                leaderData={[\"Total Profit\", \"Avg Profit\", \"Total Games\", \"Avg Cashing\"]}\r\n                                extraHeader={\r\n                                    !_.isEmpty(seasonDates)\r\n                                        ? new Date(seasonDates.endDate).toLocaleString(\"en-US\", {\r\n                                              month: \"long\",\r\n                                          })\r\n                                        : new Date().toLocaleString(\"default\", {\r\n                                              month: \"long\",\r\n                                          })\r\n                                }\r\n                                seasonDates={seasonDates}\r\n                            /> */}\r\n                        </div>\r\n                        <div className=\"col-6 mt-3\">\r\n                            <SmallCard\r\n                                teamId={teamId}\r\n                                cardTitle=\"Top 10 Comebacks\"\r\n                                stats=\"getTopComebacks\"\r\n                                data={[\"cashing\", \"profit\", \"date\", \"cashInHand\"]}\r\n                                playersData={[\"Cashing: \", \"P: \", \"\", \"\"]}\r\n                                leaderData={[\"Cashing\", \"Profit\", \"Date\", \"Cash In Hand\"]}\r\n                                headerData={[\"C\", \"P\", \"D\", \"CIH\"]}\r\n                                seasonDates={seasonDates}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 mt-3\">\r\n                            <SideBetsCard teamId={teamId} />\r\n                        </div>\r\n                        <div className=\"col-6 mt-3\">\r\n                            <SmallCard\r\n                                teamId={teamId}\r\n                                cardTitle=\"Winning Streak 🤫\"\r\n                                stats=\"getWiningStreak\"\r\n                                data={[\"maxWinStreak\", \"currWinStreak\", \"successPercentage\", \"won\"]}\r\n                                playersData={[\"MWS: \", \"CWS: \", \"\", \"\"]}\r\n                                leaderData={[\r\n                                    \"Max Win Streak\",\r\n                                    \"Current Win Streak\",\r\n                                    \"% Success\",\r\n                                    \"Total Games In Plus\",\r\n                                ]}\r\n                                headerData={[\"MWS\", \"CWS\", \"%S\", \"TGIP\"]}\r\n                                seasonDates={seasonDates}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 mt-3\">\r\n                            <AllGamesList teamId={teamId} seasonDates={seasonDates} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewMainTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../src/css/main.css\";\r\nimport Footer from \"./components/footer\";\r\nimport Home from \"./components/home\";\r\nimport SideNavbar from \"./components/sideNavbar\";\r\nimport ByMonthsDashboard from \"./components/newMainTable/byMonthsDashboard\";\r\nimport Signin from \"./components/signin\";\r\nimport Logout from \"./components/logout\";\r\nimport EditUser from \"./components/forms/editUser\";\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport userService from \"./services/userService\";\r\nimport ProtectedRoute from \"./components/common/protectedRoutes\";\r\nimport MyTeams from \"./components/myTeams\";\r\nimport EditPlayer from \"./components/editPlayer\";\r\nimport EditTeam from \"./components/editTeam\";\r\nimport SelectPlayers from \"./components/selectPlayers\";\r\nimport JoinTeam from \"./components/joinTeam\";\r\nimport MainTable from \"./components/mainTable\";\r\nimport Demo from \"./components/demo\";\r\nimport About from \"./components/about\";\r\nimport MyStats from \"./components/personalStats/myStats\";\r\nimport CardTable from \"./components/topStats/cardTable\";\r\nimport SuccessCard from \"./components/topStats/successCard\";\r\nimport CurrMonthCard from \"./components/topStats/currMonthCard\";\r\nimport ProfitsCard from \"./components/topStats/profitsCard\";\r\nimport SignUp from \"./components/forms/signUp\";\r\nimport NewGame from \"./components/games/newGame\";\r\nimport NewStatsCard from \"./components/newMainTable/newStatsCard/newStatsCard\";\r\nimport GameEnd from \"./components/gameEnd\";\r\nimport H2hTable from \"./components/h2h/h2hTable\";\r\nimport TeamSignUp from \"./components/forms/teamSignUp\";\r\nimport EditGames from \"./components/games/editGames\";\r\nimport PlayerStats from \"./components/personalStats/playerStats\";\r\nimport StatsPerHourCard from \"./components/topStats/statsPerHourCard\";\r\nimport MonthlyStats from \"./components/topStats/monthlyStats\";\r\nimport sidebetsMain from \"./components/sidebets/sidebetsMain\";\r\nimport NewSideBet from \"./components/sidebets/newSideBet\";\r\nimport NewMainTable from \"./components/newMainTable/newMainTable\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nReactGA.initialize(\"G-MPD41JDBPV\");\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({});\r\n  const [details, setDetails] = useState({});\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const me = await userService.getCurrentUser();\r\n      setUser(me);\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const me = await userService.getUserDetails();\r\n      setDetails(me.data);\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  // console.log(details);\r\n  // const style = {\r\n  //   minHeight: 780,\r\n  // };\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n\r\n      <header>\r\n        <SideNavbar\r\n          user={user}\r\n          details={details}\r\n          pageWrapId={\"page-wrap\"}\r\n          outerContainerId={\"App\"}\r\n        />\r\n      </header>\r\n      <main className=\"main\">\r\n        <HashRouter user={user}>\r\n          <Switch>\r\n            <ProtectedRoute path=\"/my-stats/edit/:id\" component={EditPlayer} />\r\n            <ProtectedRoute\r\n              path=\"/my-stats/edit_player/:id\"\r\n              component={EditUser}\r\n              user={user}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/my-stats/:id\"\r\n              component={MyStats}\r\n              user={user}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/my-teams/edit/:teamId\"\r\n              component={EditTeam}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/my-teams\"\r\n              component={MyTeams}\r\n              user={user}\r\n              d={details}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/create-team\"\r\n              user={user}\r\n              component={TeamSignUp}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/new-game/:teamId\"\r\n              component={SelectPlayers}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/join-team\"\r\n              component={JoinTeam}\r\n              user={user}\r\n            />\r\n            <ProtectedRoute path=\"/edit-games/:teamId\" component={EditGames} />\r\n            <ProtectedRoute path=\"/games/:gameId\" component={NewGame} />\r\n            <ProtectedRoute path=\"/last-game/:teamId\" component={GameEnd} />\r\n            <ProtectedRoute path=\"/tables/h2h/:teamId\" component={H2hTable} />\r\n            <ProtectedRoute path=\"/main-table/:teamId\" component={MainTable} />\r\n            <ProtectedRoute\r\n              path=\"/tables/success/:teamId\"\r\n              component={SuccessCard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/tables/monthlyStats/:year/:currentMonth/:teamId\"\r\n              component={CurrMonthCard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/tables/monthlyStats/:teamId\"\r\n              component={MonthlyStats}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/tables/profits/top-ten/:teamId\"\r\n              component={ProfitsCard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/tables/:cardName/:teamId\"\r\n              component={CardTable}\r\n            />\r\n            <ProtectedRoute path=\"/players-stats/:id\" component={PlayerStats} />\r\n            <ProtectedRoute\r\n              path=\"/stats-per-hour/:teamId\"\r\n              component={StatsPerHourCard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/side-bets/new-sidebet/:teamId\"\r\n              component={NewSideBet}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/side-bets/:teamId\"\r\n              component={sidebetsMain}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/newMainTable/newStatsCard/:teamId\"\r\n              component={NewStatsCard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/newMainTable/newByMonths/:teamId\"\r\n              component={ByMonthsDashboard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/newMainTable/:teamId\"\r\n              component={NewMainTable}\r\n            />\r\n            <Route path=\"/demo\" component={Demo} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/signin\" component={Signin} />\r\n            <Route path=\"/signup\" component={SignUp} user={user} />\r\n            <Route exact path=\"/\" component={Home} user={user} d={details} />\r\n          </Switch>\r\n        </HashRouter>\r\n      </main>\r\n\r\n      <footer>\r\n        <Footer />\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/main.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"jquery/dist/jquery\";\r\nimport \"popper.js/dist/popper\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nreportWebVitals();\r\n"],"sourceRoot":""}