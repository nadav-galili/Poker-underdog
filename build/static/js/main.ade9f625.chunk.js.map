{"version":3,"sources":["components/footer.jsx","components/common/pageHeader.jsx","components/home.jsx","components/sideNavbar.jsx","components/common/input.jsx","components/common/form.jsx","services/httpService.js","services/userService.js","components/signin.jsx","components/logout.jsx","components/forms/editUser.jsx","components/common/protectedRoutes.jsx","services/teamService.js","services/gameService.js","components/games/cashingDetails.jsx","components/team.jsx","components/myTeams.jsx","components/editPlayer.jsx","components/editTeam.jsx","services/h2hService.js","components/player.jsx","components/selectPlayers.jsx","components/joinTeam.jsx","components/topStats/playerCard.jsx","components/topStats/successp.jsx","components/topStats/currMonth.jsx","components/topStats/profits.jsx","components/h2h/h2hGameEnd.jsx","components/mainLastGame.jsx","components/h2h/h2hCard.jsx","components/games/allGames.jsx","components/topStats/statsPerHour.jsx","components/mainTable.jsx","components/demo.jsx","components/about.jsx","components/personalStats/totalPersonal.jsx","components/personalStats/myStats.jsx","components/topStats/cardTable.jsx","components/topStats/successCard.jsx","components/topStats/currMonthCard.jsx","components/topStats/profitsCard.jsx","components/forms/signUp.jsx","components/h2h/h2hGame.jsx","components/games/newGame.jsx","components/gameEnd.jsx","components/h2h/h2hGameCard.jsx","components/h2h/h2hTable.jsx","components/forms/teamSignUp.jsx","components/games/editGames.jsx","components/personalStats/playerStats.jsx","components/topStats/statsPerHourCard.jsx","components/topStats/newMonthCard.jsx","components/topStats/monthlyStats.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","id","src","alt","Date","getFullYear","href","PageHeader","titleText","Home","to","apiImage","SideNavBar","props","state","menuOpen","this","setState","isOpen","onStateChange","handleStateChange","onClick","closeMenu","user","_id","Fragment","Avatar","details","image","name","nickName","React","Component","Input","label","error","rest","htmlFor","Form","data","errors","validate","Joi","schema","abortEarly","item","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","type","onChange","axios","defaults","headers","common","localStorage","getItem","interceptors","response","use","status","toast","Promise","reject","get","post","put","patch","delete","tokenKey","email","password","a","http","apiUrl","setItem","token","login","loginGoogle","getCurrentUser","jwt","jwtDecode","ex","logout","removeItem","getJwt","getUserDetails","editUserDetails","uId","editUserForUpdate","console","log","getPlayerDetails","Signin","string","required","min","handleLogin","googleData","userService","profileObj","tokenId","window","location","clientId","onSuccess","onSubmit","autoComplete","method","renderInput","renderButton","Logout","validationSchema","Yup","EditUser","useState","me","setMe","useEffect","getUser","meData","values","onSubmitProps","setSubmitting","FormData","append","setErrors","savedValues","enableReinitialize","initialValues","validateOnMount","formik","component","event","setFieldValue","target","files","isValid","isSubmitting","ProtectedRoute","render","currentUser","pathname","from","createTeam","team","getMyTeam","getTeam","teamId","editTeam","deleteTeam","getTeamByNumber","teamNumber","removePlayerFromTeam","playerId","lastGame","table","personal","monthsData","month","cardsData","cardName","successp","profits","newGame","game","gameById","gameId","updateGame","inProgress","totalCash","personalGames","allGamesByTeam","totalGames","agg_profits","statsPerHour","updateManager","manager","fetchCashingDetails","previousRank","monthlyStats","CashingDetails","updated","cashing","setCashing","gameService","fetchDetails","getCashingDetails","length","map","cash","playerName","playerCashing","time","toLocaleString","hour","minute","second","hour12","Team","removeTeam","teamid","livePlayers","setLivePlayers","liveGame","setliveGame","buttons","setButtons","captain","players","filter","user_id","sort","b","getLiveGame","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","teamService","reload","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","teamImage","width","height","data-toggle","data-placement","takeControl","style","backgroundImage","createdAt","toLocaleDateString","player","color","MyTeams","teams","setTeams","setUser","fetchTeams","chosenTeam","myTeams","EditPlayer","userImage","max","uri","allow","history","replace","handleCancel","push","mapToViewModel","newH2h","getByGameId","updateH2h","getPointsByPlayer","pId","getPointsByTeam","teamAllGames","addPlayersH2h","Player","selectPlayers","selected","find","SelectPlayers","match","params","setData","setSelected","started","setStarted","Audio","play","team_name","team_id","game_manager","cashing_details","res","h2hService","getGameManager","fetchPlayers","teamName","cashInHand","numOfCashing","profit","JoinTeam","PlayerCard","header","teamimage","SuccessP","CurrMonth","cMonth","currentMonth","Profits","H2hGameEnd","setPlayers","ended","setEnded","last","_","flattenDeep","points","lastH2h","Rank","SpinnerInfinity","size","thickness","speed","secondaryColor","enabled","MainLastgame","setLastGame","getLastGame","updatedAt","H2hCard","AllGames","games","setGames","gamesData","setGamesData","page","setPage","pages","setPages","loading","setLoading","perPage","all","allGames","d","Math","floor","getGames","created","items","slice","itemsDates","previousLabel","nextLabel","pageCount","onPageChange","pageC","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","g","gameRank","MainTable","avgprofit","setAvgprofit","totalgames","setTotalgames","avgcashing","setAvgcashing","setSuccess","gamesprofit","setGamesprofit","h2h","setH2h","monthleader","setMonthleader","setProfits","setTeamImage","setTotalCash","setTotalGames","setstatsPerHour","relativeTime","require","totalProfit","teamPic","shift","totoalg","numOfGames","totalG","avgp","avgProfit","avgP","gamep","gamesWithProfit","gameP","successPc","successPercentage","successP","avgc","avgCashing","avgC","getTable","thisMonth","getMonth","results","currMonth","monthPlayed","currMonthLeader","dataByMonths","dataPerHour","dayjs","daysFromGame","fromNow","SpinnerDiamond","motion","img","borderRadius","backgroundColor","animate","rotate","transition","duration","bounce","div","initial","opacity","delay","x","totalCashing","totalHours","toFixed","TotalGames","role","y","profitPerHour","avgPoints","Demo","Carousel","Item","Caption","About","TotalPersonal","MyStats","stats","setStats","setMonth","setPoints","setDetails","chartData","setChartData","chartDates","setChartDates","chartCashing","setChartCashing","currentMonthNumber","player_id","detailed","myDetailed","chartDetails","chartCash","forEach","substr","myData","myStats","getMydata","myPoints","delayed","labels","datasets","fill","borderColor","options","animation","onComplete","context","mode","dataIndex","datasetIndex","scales","beginAtZero","isEmpty","SpinnerCircular","firstName","lastName","maxProfit","minProfit","totalPoints","avgGameRank","CardTable","hero","setHero","previousPlayerRank","setPreviousPlayerRank","headerTitle","setHeaderTitle","teamImg","setTeamImg","dataChartDetails","setdataChartDetails","barChartDetails","setbarChartDetails","setHeroPreviousRank","previousHero","err","previousTableRank","merged","merge","keyBy","accu","barChart","borderWidth","cardTitle","dataChart","sum","reduce","partial_sum","percentageSum","percent","myHero","rank","ChartJS","register","ArcElement","Tooltip","Legend","currentTableRank","SuccessCard","CurrMonthCard","chosenMonth","mon","parse","ProfitsCard","aggregatedProfits","list","prop","Object","assign","handleDates","hasOwnProperty","SignUp","setFields","fields","givenName","familyName","now","fakeId","setUseGoogle","setToken","useGoogle","buttonText","H2hGame","setGame","playersInGame","gameForH2h","p","class","NewGame","setId","setManager","__v","cashingDetails","indexOfLastPlayerCashing","el","lastIndexOf","splice","undoCashing","GameEnd","H2hGameCard","aGames","flatten","marginPagesDisplayed","H2hTable","TeamSignUp","teamDetails","setTeamDetails","EditGames","iframeUrl","PlayerStats","StatsPerHourCard","statsHour","setStatsHour","getStats","hoursPlayed","cashingPerHour","year","MonthlyStats","setMonthlyStats","dataByMonth","setDataByMonth","monthlyStatsGroup","dataBySeperateMonth","chain","groupBy","key","ReactGA","initialize","pageview","search","App","fetchUser","pageWrapId","outerContainerId","minHeight","EditTeam","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ade9f625.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-wrap justify-content-around align-items-center\"\r\n      id=\"footer\"\r\n    >\r\n      <div className=\"logoImage \">\r\n        <img src={process.env.PUBLIC_URL + \"newIcon.jpeg\"} alt=\"logo\" />\r\n      </div>\r\n      <div className=\"copyrights \">\r\n        <p className=\"w-100\">\r\n          Poker-Underdog was created by Nadav Galili &copy;{\" \"}\r\n          {new Date().getFullYear()}\r\n        </p>\r\n        <a href=\"https://www.nadav-galili.com\">www.nadav-galili.com</a>\r\n      </div>\r\n\r\n      <div className=\"social-icons \">\r\n        {/* <p className=\"mb-2\">Contact me at:</p> */}\r\n        <ul className=\"d-flex justify-content-around mt-4 p-0 \">\r\n          <li>\r\n            <a href=\"https://www.facebook.com/nadav.galili\">\r\n              <img\r\n                src=\"https://img.icons8.com/doodle/50/000000/facebook-new.png\"\r\n                alt=\"facebook\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://twitter.com/nadavgalili\">\r\n              <img\r\n                src=\"https://img.icons8.com/doodle/50/000000/twitter--v1.png\"\r\n                alt=\"twitter\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://www.linkedin.com/in/nadav-galili/\">\r\n              <img\r\n                src=\"https://img.icons8.com/doodle/50/000000/linkedin--v2.png\"\r\n                alt=\"linkedin\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/nadav-galili\">\r\n              <img\r\n                src=\"https://img.icons8.com/doodle/50/000000/github.png\"\r\n                alt=\"github\"\r\n              />\r\n            </a>\r\n          </li>\r\n\r\n          <li>\r\n            <a href=\"mailto:nadavg1000@gmail.com\">\r\n              <img\r\n                src=\"https://img.icons8.com/plasticine/50/000000/email.png\"\r\n                alt=\"email\"\r\n              />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst PageHeader = ({ titleText }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 mt-4 mb-0\">\r\n        <h1 className=\"m-0 pb-2 pt-2\">{titleText}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport { apiImage } from \"../config.json\";\r\nconst Home = () => {\r\n  return (\r\n    <section>\r\n      <div className=\"container pt-3\">\r\n        <PageHeader titleText=\"Poker-Underdog\" />\r\n        <div className=\"row home\">\r\n          <div className=\"col-12 col-md-6 homeText\" id=\"homeText\">\r\n            <p className=\"mt-4\">\r\n              Poker Underdog is an interactive platform for poker groups playing\r\n              together home games.\r\n            </p>\r\n            <p className=\"mt-4\">\r\n              In this app you can keep scores for your games and display\r\n              statistics for the whole group or individual stats.\r\n            </p>\r\n            <p className=\"mt-4\">\r\n              You can open or join as many groups as you like and stay updated\r\n              on each group individually and all these features are FREE!\r\n            </p>\r\n\r\n            <p>\r\n              Join us now and <br />\r\n              <Link to=\"/signup\" id=\"create\">\r\n                Create A New Account For Free\r\n              </Link>\r\n            </p>\r\n            <p>Already registerd?</p>\r\n            <p>\r\n              <Link to=\"/my-teams\" id=\"join\">\r\n                Pick a team and start a new game...ALL IN!\r\n              </Link>\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-3 col-12\" id=\"homeImg\">\r\n            <div className=\"homeImg1\">\r\n              <img src={`${apiImage}images/flying_cards.jpg`} alt=\"poker\" />\r\n            </div>\r\n            <div className=\"homeImg2\">\r\n              <img\r\n                src=\"https://www.telegraph.co.uk/content/dam/betting/Better-Collective/8-Classic-xlarge.jpg\"\r\n                alt=\"poker-cards\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-md-3 col-12 text-primary \">\r\n        <div className=\"vh-25 wh-25\">\r\n              <img\r\n                src={ process.env.PUBLIC_URL + \"/demo/dash3.JPG\"}\r\n                alt=\"poker-cards\"\r\n              />\r\n            </div>\r\n            </div> */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { apiImage } from \"../config.json\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { GiPokerHand } from \"react-icons/gi\";\r\nimport { HiOutlineUserGroup } from \"react-icons/hi\";\r\nimport { ImStatsBars } from \"react-icons/im\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { VscSignIn } from \"react-icons/vsc\";\r\nimport { FiUserPlus } from \"react-icons/fi\";\r\n\r\nclass SideNavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuOpen: false,\r\n    };\r\n  }\r\n\r\n  // This keeps your state in sync with the opening/closing of the menu\r\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\r\n  handleStateChange(state) {\r\n    this.setState({ menuOpen: state.isOpen });\r\n  }\r\n\r\n  // This can be used to close the menu, e.g. when a user clicks a menu item\r\n  closeMenu() {\r\n    this.setState({ menuOpen: false });\r\n  }\r\n\r\n  // This can be used to toggle the menu, e.g. when using a custom icon\r\n  // Tip: You probably want to hide either/both default icons if using a custom icon\r\n  // See https://github.com/negomi/react-burger-menu#custom-icons\r\n  toggleMenu() {\r\n    this.setState((state) => ({ menuOpen: !state.menuOpen }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Menu\r\n          isOpen={this.state.menuOpen}\r\n          onStateChange={(state) => this.handleStateChange(state)}\r\n        >\r\n          <Link\r\n            className=\"navbar-brand\"\r\n            to=\"/#\"\r\n            onClick={() => this.closeMenu()}\r\n          >\r\n            <img src={process.env.PUBLIC_URL + `newIcon.jpeg`} alt=\"logo\"></img>\r\n          </Link>\r\n          <NavLink\r\n            className=\"nav-link active d-flex\"\r\n            to=\"/about\"\r\n            onClick={() => this.closeMenu()}\r\n          >\r\n            <AiOutlineInfoCircle className=\"mt-2 me-2\" />\r\n            <p className=\"m-0\">About</p>\r\n          </NavLink>\r\n          <Link\r\n            onClick={() => this.closeMenu()}\r\n            className=\"nav-link d-flex\"\r\n            to=\"/demo\"\r\n          >\r\n            <GiPokerHand className=\"mt-2 me-2\" />\r\n            <p className=\"m-0\">Game Demo</p>\r\n          </Link>\r\n          {this.props.user && (\r\n            <NavLink\r\n              className=\"nav-item nav-link d-flex\"\r\n              onClick={() => this.closeMenu()}\r\n              to=\"/my-teams\"\r\n            >\r\n              <HiOutlineUserGroup className=\"mt-2 me-2\" />\r\n              <p className=\"m-0\">My Teams</p>\r\n            </NavLink>\r\n          )}\r\n\r\n          {this.props.user && (\r\n            <NavLink\r\n              className=\"nav-item nav-link d-flex\"\r\n              onClick={() => this.closeMenu()}\r\n              to={`/my-stats/${this.props.user._id}`}\r\n            >\r\n              <ImStatsBars className=\"mt-2 me-2\" />\r\n              <p className=\"m-0\">Personal Stats</p>\r\n            </NavLink>\r\n          )}\r\n          {!this.props.user && (\r\n            <React.Fragment>\r\n              <NavLink\r\n                className=\"nav-item nav-link d-flex\"\r\n                to=\"/signin\"\r\n                onClick={() => this.closeMenu()}\r\n              >\r\n                <VscSignIn className=\"mt-2 me-2\" />\r\n                <p className=\"m-0\">Sign-In</p>\r\n              </NavLink>\r\n              <NavLink\r\n                className=\"nav-item nav-link d-flex\"\r\n                to=\"/signup\"\r\n                onClick={() => this.closeMenu()}\r\n              >\r\n                <FiUserPlus className=\"mt-2 me-2\" />\r\n                <p className=\"m-0\">Sign-Up</p>\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {this.props.user && (\r\n            <React.Fragment>\r\n              <div className=\"userDetails nav-item nav-link d-flex pb-0\">\r\n                <Avatar\r\n                  src={`${apiImage}${this.props.details.image}`}\r\n                  alt={this.props.details.name}\r\n                />\r\n                <p className=\"ms-2 text-primary\">\r\n                  {this.props.details.nickName}\r\n                </p>\r\n              </div>\r\n              <NavLink\r\n                className=\"nav-item nav-link d-flex pt-0\"\r\n                to=\"/logout\"\r\n                onClick={() => this.closeMenu()}\r\n              >\r\n                <FiLogOut className=\"mt-2 me-2\" />\r\n                <p className=\"m-0\">Log out</p>\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideNavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group \">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <span className=\"text-danger\">{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = getJwt();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError = error.response && error.response.status >= 403;\r\n\r\n  if (expectedError) toast.error(\"An unexpected error occurrred.\");\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete,\r\n};\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst tokenKey = \"token\";\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getUserDetails() {\r\n  return http.get(`${apiUrl}/users/me`);\r\n}\r\n\r\n//get other player stats for players-stats component\r\nexport function getPlayerDetails(uId) {\r\n  return http.get(`${apiUrl}/users/player-stats/${uId}`);\r\n}\r\n\r\nexport function editUserDetails(user) {\r\n  const uId = user._id;\r\n  // delete user._id;\r\n  return http.put(`${apiUrl}/users/${uId}`, user);\r\n}\r\n\r\nexport function editUserForUpdate(user, data){\r\n  console.log(`sds`,user._id);\r\n  return http.put(`${apiUrl}/users/edit-user/${user._id}`,data);\r\n}\r\n\r\nexport async function login(email, password) {\r\n  const { data } = await http.post(`${apiUrl}/auth`, { email, password });\r\n  localStorage.setItem(tokenKey, data.token);\r\n}\r\n\r\nexport async function loginGoogle(email, token) {\r\n  const { data } = await http.post(`${apiUrl}/auth/google`, { email, token });\r\n  localStorage.setItem(tokenKey, data.token);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginGoogle,\r\n  getCurrentUser,\r\n  logout,\r\n  getJwt,\r\n  getUserDetails,\r\n  editUserDetails,\r\n  editUserForUpdate,\r\n  getPlayerDetails\r\n};\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nclass Signin extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n  };\r\n\r\n  handleLogin = async (googleData) => {\r\n    try {\r\n      await userService.loginGoogle(\r\n        googleData.profileObj.email,\r\n        googleData.tokenId\r\n      );\r\n\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: ex.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { email, password } = this.state.data;\r\n    try {\r\n      await userService.login(email, password);\r\n      //let details = await userService.getCurrentUser();\r\n\r\n      window.location = \"/\";\r\n\r\n      // setTimeout(() => {\r\n      //   this.props.history.replace(`/#/my-stats/${details._id}`);\r\n      // }, 5000);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: ex.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Sign-In\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p className=\"text-primary\">\r\n              You can sign-in here with your account!\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <GoogleLogin\r\n          clientId=\"310842465793-hdu8fm8luvho3qds0ce4chg9c3696d4d.apps.googleusercontent.com\"\r\n          onSuccess={this.handleLogin}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Sign-In\")}\r\n            </form>\r\n            <p className=\"selectP mt-5\">\r\n              *you can try a demo account-\r\n              <br />\r\n              Email:test@test.com\r\n              <br />\r\n              Password:123456\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import { Component } from \"react\";\r\nimport userService from \"../services/userService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    userService.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../services/userService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst validationSchema = Yup.object({\r\n  nickName: Yup.string().required(\"Required\"),\r\n  image: Yup.string(),\r\n});\r\n\r\nconst EditUser = () => {\r\n  const [me, setMe] = useState({});\r\n  useEffect(() => {\r\n    const meData = async () => {\r\n      let getUser = await userService.getUserDetails();\r\n      getUser = getUser.data;\r\n      setMe(getUser);\r\n    };\r\n    meData();\r\n  }, []);\r\n\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    onSubmitProps.setSubmitting(false);\r\n    let data = new FormData();\r\n    data.append(\"_id\", values._id);\r\n    data.append(\"nickName\", values.nickName);\r\n\r\n    if (values.image) {\r\n      data.append(\"image\", values.image);\r\n    }\r\n\r\n    try {\r\n      await userService.editUserForUpdate(values, data);\r\n      window.location = `#/my-stats/${values._id}`;\r\n      toast(\"The user has been updated!\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        setErrors({ email: \"Something went wrong\" });\r\n        console.error(ex);\r\n      }\r\n    }\r\n  };\r\n\r\n  const savedValues = {\r\n    nickName: me.nickName,\r\n    image: me.image,\r\n    _id: me._id,\r\n  };\r\n\r\n  const [errors, setErrors] = useState({ nickName: \"\", image: \"\" });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Edit User\" />\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={savedValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        validateOnMount\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <div className=\"row mt-2\">\r\n              <div className=\"col-10 col-lg-4\">\r\n                <Form>\r\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\r\n                    <label htmlFor=\"Nick Name\">Nick Name</label>\r\n                    <Field type=\"text\" id=\"nickName\" name=\"nickName\" />\r\n                    <ErrorMessage\r\n                      name=\"nickName\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"oldImage w-25 mb-2 \">\r\n                    <img\r\n                      src={`${apiImage}${savedValues.image}`}\r\n                      alt=\"user\"\r\n                      className=\"w-100 h-100\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-control d-flex flex-column bg-primary mb-3\">\r\n                    <label htmlFor=\"image\">Change Image</label>\r\n                    <input\r\n                      className=\"row mb-4 inputFile\"\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      onChange={(event) => {\r\n                        formik.setFieldValue(\"image\", event.target.files[0]);\r\n                      }}\r\n                    ></input>\r\n                    <span className=\"error\">{errors.image}</span>\r\n                  </div>\r\n                  <div className=\"buttons d-flex justify-content-between\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      disabled={!formik.isValid || formik.isSubmitting}\r\n                    >\r\n                      Update Details\r\n                    </button>\r\n                    <Link\r\n                      type=\"button\"\r\n                      className=\"btn btn-secondary  m-0\"\r\n                      to={`/my-stats/${me._id}`}\r\n                    >\r\n                      Not right now\r\n                    </Link>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport userService from \"../../services/userService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  const currentUser = userService.getCurrentUser();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!currentUser)\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function getTeam(teamId) {\r\n  return http.get(`${apiUrl}/teams/${teamId}`);\r\n}\r\n\r\n//\r\nexport function getTeamByNumber(teamNumber) {\r\n  return http.get(`${apiUrl}/teams/numbers/${teamNumber}`);\r\n}\r\n\r\nexport function editTeam(team) {\r\n  const teamId = team._id;\r\n  delete team._id;\r\n  return http.put(`${apiUrl}/teams/${teamId}`, team);\r\n}\r\n\r\nexport function createTeam(team) {\r\n  return http.post(`${apiUrl}/teams`, team);\r\n}\r\n\r\nexport function getMyTeam() {\r\n  return http.get(`${apiUrl}/teams/my-teams`);\r\n}\r\n// export function getTeam() {\r\n//   return http.get(`${apiUrl}/teams/my-teams`);\r\n// }\r\n\r\nexport function deleteTeam(teamId) {\r\n  return http.delete(`${apiUrl}/teams/${teamId}`);\r\n}\r\n\r\nexport function removePlayerFromTeam(teamNumber, playerId, teamId) {\r\n  return http.delete(\r\n    `${apiUrl}/teams/removePlayerFromTeam/${teamNumber}/${playerId}`,\r\n    { data: { teamId: teamId } }\r\n  );\r\n}\r\n\r\nexport default {\r\n  createTeam,\r\n  getMyTeam,\r\n  getTeam,\r\n  editTeam,\r\n  deleteTeam,\r\n  getTeamByNumber,\r\n  removePlayerFromTeam,\r\n};\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function lastGame(teamId) {\r\n  return http.get(`${apiUrl}/games/last-game/${teamId}`);\r\n}\r\n\r\nexport function table(teamId) {\r\n  return http.get(`${apiUrl}/games/table/${teamId}`);\r\n}\r\n\r\nexport function personal(uId) {\r\n  return http.get(`${apiUrl}/games/personal/${uId}`);\r\n}\r\n\r\nexport function personalGames(uId) {\r\n  return http.get(`${apiUrl}/games/personalGames/${uId}`);\r\n}\r\n\r\nexport function monthsData(teamId, month) {\r\n  return http.get(`${apiUrl}/games/byMonths/${month}/${teamId}`);\r\n}\r\n\r\nexport function statsPerHour(teamId) {\r\n  return http.get(`${apiUrl}/games/statsPerHour/${teamId}`);\r\n}\r\nexport function successp(teamId) {\r\n  return http.get(`${apiUrl}/games/success-p/${teamId}`);\r\n}\r\nexport function cardsData(teamId, cardName) {\r\n  return http.get(`${apiUrl}/games/${cardName}/${teamId}`);\r\n}\r\n\r\nexport function profits(teamId) {\r\n  return http.get(`${apiUrl}/games/profits/top-ten/${teamId}`);\r\n}\r\n\r\nexport function agg_profits(teamId) {\r\n  return http.get(`${apiUrl}/games/agg_profits/top-ten/${teamId}`);\r\n}\r\n\r\nexport function newGame(game) {\r\n  return http.post(`${apiUrl}/games`, game);\r\n}\r\n\r\nexport function gameById(gameId) {\r\n  return http.get(`${apiUrl}/games/${gameId}`);\r\n}\r\n\r\nexport function updateGame(gameId, game) {\r\n  return http.put(`${apiUrl}/games/${gameId}`, game);\r\n}\r\nexport function inProgress(teamId) {\r\n  return http.get(`${apiUrl}/games/true/${teamId}`);\r\n}\r\n\r\nexport function totalCash(teamId) {\r\n  return http.get(`${apiUrl}/games/total/cash/${teamId}`);\r\n}\r\n\r\nexport function allGamesByTeam(teamId) {\r\n  return http.get(`${apiUrl}/games/teams/byTeamId/${teamId}`);\r\n}\r\n\r\nexport function totalGames(teamId) {\r\n  return http.get(`${apiUrl}/games/totalGames/${teamId}`);\r\n}\r\n\r\nexport function updateManager(id, manager) {\r\n  return http.put(`${apiUrl}/games/updateManager/${id}`, manager);\r\n}\r\n\r\nexport function fetchCashingDetails(gameId) {\r\n  return http.get(`${apiUrl}/games/cashingDetails/${gameId}`);\r\n}\r\n\r\nexport function previousRank(teamId) {\r\n  return http.get(`${apiUrl}/games/previousRank/${teamId}`);\r\n}\r\n\r\nexport function monthlyStats(teamId) {\r\n  return http.get(`${apiUrl}/games/monthlyStats/${teamId}`);\r\n}\r\n\r\nexport default {\r\n  lastGame,\r\n  table,\r\n  personal,\r\n  monthsData,\r\n  cardsData,\r\n  successp,\r\n  profits,\r\n  newGame,\r\n  gameById,\r\n  updateGame,\r\n  inProgress,\r\n  totalCash,\r\n  personalGames,\r\n  allGamesByTeam,\r\n  totalGames,\r\n  agg_profits,\r\n  statsPerHour,\r\n  updateManager,\r\n  fetchCashingDetails,\r\n  previousRank,\r\n  monthlyStats,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\n\r\nconst CashingDetails = ({ gameId, updated }) => {\r\n  const [cashing, setCashing] = useState([]);\r\n  useEffect(() => {\r\n    const getCashingDetails = async () => {\r\n      const fetchDetails = await gameService.fetchCashingDetails(gameId);\r\n      setCashing(fetchDetails.data);\r\n    };\r\n    getCashingDetails();\r\n  }, [updated, cashing.length]);\r\n\r\n  return (\r\n    <div className=\"col-10 col-lg-6 p-2\">\r\n      <PageHeader titleText=\"Cashing Details\" />\r\n      {cashing.length > 0 && (\r\n        <ul className=\" cashingDetails bg-white p-0\">\r\n          {cashing.map((cash) => (\r\n            <li className=\"d-flex\" id=\"cashingList\">\r\n              <p id=\"cashingName\">{cash.playerName}</p>\r\n              <p id=\"cashingAmmount\">{cash.playerCashing}</p>\r\n              <p id=\"cashingTime\">\r\n                {new Date(cash.time).toLocaleString(\"en-US\", {\r\n                  hour: \"2-digit\",\r\n                  minute: \"2-digit\",\r\n                  second: \"2-digit\",\r\n                  hour12: false,\r\n                })}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {cashing.length < 1 && <p className=\"text-primary\">No Cashing Yet</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CashingDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../config.json\";\r\nimport { GiCardKingClubs } from \"react-icons/gi\";\r\nimport { IoMdStats } from \"react-icons/io\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport gameService from \"../services/gameService\";\r\nimport teamService from \"../services/teamService\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\nimport CashingDetails from \"./games/cashingDetails\";\r\n\r\nconst Team = ({ team, removeTeam, teamid, user, teamNumber }) => {\r\n  const [livePlayers, setLivePlayers] = useState([]);\r\n  const [liveGame, setliveGame] = useState({});\r\n  const [buttons, setButtons] = useState(false);\r\n  let captain = team.players.filter((e) => e._id === team.user_id);\r\n\r\n  useEffect(() => {\r\n    const getLiveGame = async () => {\r\n      let game = await gameService.inProgress(teamid);\r\n      game = await game.data[0];\r\n      setliveGame(game);\r\n      game ? setLivePlayers(game.players) : setLivePlayers([]);\r\n      if (game && (game.isOpen || game.isOpen == null))\r\n        game = game.players.sort((a, b) => b.cashing - a.cashing);\r\n    };\r\n\r\n    getLiveGame();\r\n  }, []);\r\n\r\n  const displayRemoveButtons = () => {\r\n    setButtons(!buttons);\r\n  };\r\n\r\n  const removePlayerFromTeam = async (teamNumber, playerId, teamId) => {\r\n    Swal.fire({\r\n      title: \"Are you sure you want to remove this player from team?\",\r\n      text: \"you wont be able to cancel\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        await teamService.removePlayerFromTeam(teamNumber, playerId, teamid);\r\n        window.location.reload();\r\n        toast.success(\"Player removed from team:)\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\" col-12 col-md-6 col-lg-4 mt-3\">\r\n      <div className=\"card mb-3\">\r\n        <img\r\n          className=\"p-2\"\r\n          src={`${apiImage}${team.teamImage}`}\r\n          alt={team.name}\r\n          width=\"100\"\r\n          height=\"100\"\r\n        />\r\n        <div className=\"card-body pt-0\">\r\n          <h3 className=\"card-title \">\r\n            <u className=\"text-primary\">{team.name}</u>\r\n          </h3>\r\n          <p className=\"card-text info\">\r\n            <strong>\r\n              <u>Team Number:</u>\r\n              <span className=\"text-primary\">{team.teamNumber}</span>\r\n            </strong>\r\n            <br />\r\n            <span id=\"share\">\r\n              *Share this number with your friends and let them join your team\r\n            </span>\r\n          </p>\r\n          <p className=\"mb-2\">\r\n            <b>\r\n              <u className=\"text-dark \">Team Manager:</u>\r\n              <span className=\"text-primary captain \">\r\n                {captain[0].nickName}\r\n              </span>\r\n            </b>\r\n          </p>\r\n          {liveGame && (\r\n            <div className=\"liveGames \">\r\n              <Link\r\n                className=\"\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Only Team Manger can edit games details\"\r\n                to={`/games/${liveGame._id}`}\r\n                takeControl=\"yes\"\r\n              >\r\n                Take Control Of Game\r\n                <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n              </Link>\r\n              <br></br>\r\n              <span className=\"display-6 \">\r\n                <u>Live Game</u>\r\n              </span>\r\n              <div className=\"col-12 border border-primary my-2\" id=\"card-top\">\r\n                <ol className=\"statsList m-0\">\r\n                  <li\r\n                    id=\"lastGameHero\"\r\n                    className=\"statsHero d-flex flex-column h-50\"\r\n                    style={{\r\n                      backgroundImage: `url(${\r\n                        process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                      })`,\r\n                    }}\r\n                  >\r\n                    <p>Game No. {liveGame._id}</p>\r\n                    <p>\r\n                      {`${new Date(liveGame.createdAt).toLocaleDateString(\r\n                        \"en-GB\",\r\n                        { hour: \"2-digit\", minute: \"2-digit\", hour12: false }\r\n                      )}`}\r\n                    </p>\r\n                    <div\r\n                      className=\"stats d-flex w-75 justify-content-between\"\r\n                      id=\"lGame\"\r\n                    >\r\n                      <p>Player</p>\r\n                      <p>Name</p>\r\n                      <p>Cashing</p>\r\n                    </div>\r\n                  </li>\r\n                  {livePlayers &&\r\n                    livePlayers.length > 1 &&\r\n                    livePlayers.map((player) => (\r\n                      <li className=\"statsRow\" key={player.id} id=\"liveGameRow\">\r\n                        <div className=\"rowImage ms-5\">\r\n                          <img\r\n                            src={\r\n                              livePlayers.length > 0\r\n                                ? `${apiImage}${player.image}`\r\n                                : \"\"\r\n                            }\r\n                            alt=\"player list row\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"rowName ms-4\" id=\"lGameName\">\r\n                          {livePlayers.length > 1 ? player.name : \"\"}\r\n                        </div>\r\n                        <div className=\"rowCashing\">\r\n                          {livePlayers.length > 1 ? player.cashing : \"\"}\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                </ol>\r\n                {liveGame._id && (\r\n                  <CashingDetails gameId={liveGame._id} updated={liveGame} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"teamBtns d-flex flex-column w-75 \">\r\n            <Link\r\n              className=\"button-72 p-2\"\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              to={`/main-table/${team._id}`}\r\n            >\r\n              Team Tables & Stats\r\n              <IoMdStats className=\"ms-2\" />\r\n              <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n            </Link>\r\n            {captain[0]._id === user._id && (\r\n              <div className=\"d-flex flex-column\">\r\n                <Link\r\n                  className=\"button-75 mt-2 \"\r\n                  to={`/edit-games/${team._id}`}\r\n                  teamId={team._id}\r\n                  title=\"Only Team Manger can edit games details\"\r\n                >\r\n                  Edit Games\r\n                  <AiFillEdit color=\"white\" className=\"ms-1\" />\r\n                  <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n                </Link>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-danger mt-2 w-75\"\r\n                  onClick={() => displayRemoveButtons()}\r\n                >\r\n                  <AiFillEdit color=\"red\" className=\"ms-1\" />\r\n                  Remove Players From Team\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"card-text \">\r\n            <strong>\r\n              <u>Players:</u>\r\n            </strong>\r\n            <ul className=\"row  ps-0\" id=\"playersList\">\r\n              {team.players.map((player) => (\r\n                <li\r\n                  key={player._id}\r\n                  className=\"col-3 col-lg-3 teams \"\r\n                  id=\"playerAvatar\"\r\n                >\r\n                  <p id=\"playerPersonalInfo\">{player.nickName}</p>\r\n\r\n                  <Avatar\r\n                    src={`${apiImage}${player.image}`}\r\n                    alt={player.name}\r\n                  />\r\n\r\n                  {captain[0]._id === user._id &&\r\n                    buttons &&\r\n                    player._id !== captain[0]._id && (\r\n                      <p\r\n                        className=\"text-danger  text-wrap mb-2\"\r\n                        onClick={() =>\r\n                          removePlayerFromTeam(teamNumber, player._id, teamid)\r\n                        }\r\n                      >\r\n                        <i className=\"fas fa-trash-alt \"></i>\r\n                        remove player from team\r\n                      </p>\r\n                    )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {!liveGame && (\r\n            <Link className=\"mb-2 button-71\" to={`/new-game/${team._id}`}>\r\n              Start a new game\r\n              <GiCardKingClubs className=\"ms-2\" />\r\n              <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n            </Link>\r\n          )}\r\n\r\n          <p className=\"card-text border-top pt-2\">\r\n            Created At:{new Date(team.createdAt).toLocaleDateString(\"en-GB\")}\r\n          </p>\r\n          <p className=\"text-primary\">\r\n            <Link onClick={removeTeam} to=\"/my-teams\" className=\"text-danger\">\r\n              <i className=\"fas fa-trash-alt me-2\"></i>\r\n              Delete Team\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport teamService from \"../services/teamService\";\r\nimport userService from \"../services/userService\";\r\nimport Team from \"./team\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst MyTeams = () => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchTeams = async () => {\r\n      const { data } = await teamService.getMyTeam();\r\n      setTeams(data);\r\n      const me = await userService.getCurrentUser();\r\n      setUser(me);\r\n    };\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  let removeTeam = (teamId) => {\r\n    let chosenTeam = teams.filter((team) => team._id === teamId);\r\n\r\n    if (user._id !== chosenTeam[0].user_id) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Only team manager can delete a team\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Are you sure you want to delete this team?\",\r\n        text: \"you wont be able to cancel\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          let myTeams = teams.filter((team) => team._id !== teamId);\r\n          teamService.deleteTeam(teamId);\r\n          setTeams(myTeams);\r\n          toast(\"This team was deleted succesfully\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container about\">\r\n      <PageHeader titleText=\"My Teams Page\" />\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/icons/teams.png\"}\r\n        alt=\"teams icon\"\r\n        className=\"aboutIcon\"\r\n      />\r\n      <div className=\"row\">\r\n        <div className=\"col-12\" id=\"myTeams\">\r\n          <Link className=\"btn btn-primary  mb-3\" to=\"/create-team\">\r\n            +Add A New Team\r\n          </Link>\r\n          <Link className=\"btn btn-primary  mb-3\" to=\"/join-team\">\r\n            Join An Existing Team\r\n          </Link>\r\n          <div className=\"teamText\">\r\n            You can try a test team.\r\n            <br /> enter \"Join an existing team\" and try out\r\n          </div>\r\n          <p className=\"mt-3 team-list\">\r\n            {teams.length > 0 && <span>Your teams are in the list below:</span>}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {teams.length > 0 &&\r\n          teams.map((team) => (\r\n            <Team\r\n              key={team._id}\r\n              team={team}\r\n              teamid={team._id}\r\n              user={user}\r\n              teamNumber={team.teamNumber}\r\n              removeTeam={() => removeTeam(team._id)}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTeams;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport userService from \"../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass EditPlayer extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      userImage: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    name: Joi.string().min(2).max(255).required(),\r\n    userImage: Joi.string().min(11).max(1024).uri().allow(\"\"),\r\n  };\r\n  async componentDidMount() {\r\n    const { data } = await userService.getUserDetails();\r\n\r\n    this.setState({ data: this.mapToViewModel(data) });\r\n  }\r\n\r\n  mapToViewModel(player) {\r\n    return {\r\n      _id: player._id,\r\n      name: player.name,\r\n      userImage: player.userImage,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n\r\n    await userService.editUserDetails(data);\r\n    toast(\"User is updated\");\r\n    this.props.history.replace(`/my-stats/${data._id}`);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.history.push(\"/my-teams\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Edit Player Form\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Edit your player details here</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"name\", \"Player Name\")}\r\n              {/* {this.renderInput(\"players\", \"Players\")} */}\r\n              {this.renderInput(\"userImage\", \"Player Image\")}\r\n              {this.renderButton(\"Update Player\")}\r\n              <button\r\n                className=\"btn-lg btn-secondary ms-4 \"\r\n                onClick={this.handleCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPlayer;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\n\r\nconst editTeam = () => {\r\n  return ( \r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Edit Games\"/>\r\n          <iframe title=\"edit games\" src=\"https://nadav.retool.com/apps/REST%20API%20Admin%20Panel\" width=\"100%\" height=\"800px\"></iframe>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default editTeam;\r\n\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function newH2h(game) {\r\n  return http.post(`${apiUrl}/h2h`, game);\r\n}\r\n\r\nexport function getByGameId(gameId) {\r\n  return http.get(`${apiUrl}/h2h/${gameId}`);\r\n}\r\n\r\nexport function updateH2h(gameId) {\r\n  return http.put(`${apiUrl}/h2h/updateh2h/${gameId}`);\r\n}\r\n\r\nexport function getPointsByPlayer(pId) {\r\n  return http.get(`${apiUrl}/h2h/byPlayer/${pId}`);\r\n}\r\n\r\nexport function getPointsByTeam(teamId) {\r\n  return http.get(`${apiUrl}/h2h/byTeam/${teamId}`);\r\n}\r\n\r\nexport function teamAllGames(teamId) {\r\n  return http.get(`${apiUrl}/h2h/teamAllGames/${teamId}`);\r\n}\r\n\r\nexport function addPlayersH2h(gameId, game) {\r\n  return http.put(`${apiUrl}/h2h/addPlayersH2h/${gameId}`, game);\r\n}\r\nexport default {\r\n  newH2h,\r\n  getByGameId,\r\n  updateH2h,\r\n  getPointsByPlayer,\r\n  getPointsByTeam,\r\n  teamAllGames,\r\n  addPlayersH2h,\r\n};\r\n","import React from \"react\";\r\nimport { apiImage } from \"../config.json\";\r\n\r\nconst Player = ({ player, selectPlayers, selected }) => {\r\n  return (\r\n    <div className=\"col-md-6 col-lg-2 col-3 \" id=\"players_select\">\r\n      <div className=\"card align-items-center playersCard\">\r\n        <div className=\"card-head d-flex justify-content-center\">\r\n          <img\r\n            className=\"m-2 playerImage\"\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n            src={`${apiImage}${player.image}`}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            selected.find((e) => player._id === e.id)\r\n              ? \"card-body selected d-flex flex-column p-0 mw-100\"\r\n              : \"card-body d-flex flex-column p-0 \"\r\n          }\r\n        >\r\n          <h5\r\n            className=\"card-title d-flex m-0 justify-content-center\"\r\n            id=\"selectTitle\"\r\n          >\r\n            {player.nickName}\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-sm btn-primary card-title d-flex p-0 \"\r\n            onClick={selectPlayers}\r\n          >\r\n            +Add/Remove player\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport teamService from \"../services/teamService\";\r\nimport gameService from \"../services/gameService\";\r\nimport userService from \"../services/userService\";\r\nimport h2hService from \"../services/h2hService\";\r\nimport Player from \"./player\";\r\nimport { apiImage } from \"../config.json\";\r\n\r\nconst SelectPlayers = (props) => {\r\n  const [data, setData] = useState([props.match.params.teamId]);\r\n  const [selected, setSelected] = useState([]);\r\n  const [started, setStarted] = useState(\"\");\r\n  const [me, setMe] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchPlayers = async () => {\r\n      if (data.length > 0) {\r\n        const players = await teamService.getTeam(data);\r\n        const game = await gameService.inProgress(props.match.params.teamId);\r\n        const getGameManager = await userService.getUserDetails();\r\n        me.id = getGameManager.data._id;\r\n        me.name = getGameManager.data.nickName;\r\n        setMe(me);\r\n        if (game.data.length > 0) {\r\n          setSelected(game.data[0].players);\r\n          setStarted(game.data[0]);\r\n        }\r\n\r\n        setData(players.data);\r\n      }\r\n    };\r\n    fetchPlayers();\r\n  }, [props.match.params.teamId, data]);\r\n\r\n  function selectPlayers(playerId, name, image) {\r\n    const push = new Audio(process.env.PUBLIC_URL + `sounds/push.mp3`);\r\n    push.play();\r\n    const player = {\r\n      id: playerId,\r\n      name: name,\r\n      image: image,\r\n      cashing: 0,\r\n      cashInHand: 0,\r\n      numOfCashing: 0,\r\n      profit: 0,\r\n    };\r\n    selected.find((e) => player.id === e.id)\r\n      ? setSelected(selected.filter((item) => item.id !== player.id))\r\n      : setSelected([...selected, player]);\r\n  }\r\n\r\n  async function shuffle() {\r\n    const shuffle = new Audio(process.env.PUBLIC_URL + \"sounds/Shuffle.mp3\");\r\n    shuffle.play();\r\n    if (!started) {\r\n      let game = {\r\n        isOpen: true,\r\n        players: selected,\r\n        team_name: data.name,\r\n        team_id: data._id,\r\n        game_manager: me,\r\n        cashing_details: [],\r\n      };\r\n      await gameService.newGame(game).then((res) => {\r\n        let newGame = { ...res.data };\r\n        newGame.gameId = newGame._id;\r\n        delete newGame._id;\r\n        h2hService.newH2h(newGame);\r\n        props.history.push(`/games/${res.data._id}`);\r\n      });\r\n    } else {\r\n      let game = {\r\n        players: selected,\r\n        team_name: started.team_name,\r\n        team_id: started.team_id,\r\n        gameId: started._id,\r\n        cashing_details: started.cashing_details,\r\n      };\r\n      await gameService.updateGame(started._id, game).then((res) => {\r\n        res.data.gameId = res.data._id;\r\n        // h2hService.newH2h(res.data);\r\n        h2hService.addPlayersH2h(started._id, game);\r\n        props.history.push(`/games/${res.data._id}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Start A New Game\" />\r\n      <h2 className=\"teamName\">{data.name}</h2>\r\n      <h3>Team Number:{data.teamNumber}</h3>\r\n      <img\r\n        src={`${apiImage}${data.teamImage}`}\r\n        alt={data.name}\r\n        width=\"120\"\r\n        height=\"120\"\r\n      ></img>\r\n      <h3 className=\"p-2 text-primary\">Select players for current game</h3>\r\n      <div className=\"row container\">\r\n        {data.players &&\r\n          data.players.map((player) => (\r\n            <Player\r\n              teamName={data.name}\r\n              selected={selected}\r\n              player={player}\r\n              key={player._id}\r\n              selectPlayers={() => {\r\n                selectPlayers(player._id, player.nickName, player.image);\r\n              }}\r\n            />\r\n          ))}\r\n      </div>\r\n      {selected.length > 1 && (\r\n        <button className=\"btn btn-primary btn-lg m-3\" onClick={shuffle}>\r\n          Continue to game\r\n        </button>\r\n      )}\r\n      {selected.length <= 1 && (\r\n        <p className=\"selectP\">*Please select at least 2 players</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectPlayers;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport teamService from \"../services/teamService\";\r\nimport userService from \"../services/userService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass JoinTeam extends Form {\r\n  state = {\r\n    data: { teamNumber: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    teamNumber: Joi.string().required().min(6).max(6).label(\"Team Number\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n\r\n    try {\r\n      const team = await teamService.getTeamByNumber(data.teamNumber);\r\n      //get user details from token\r\n      let user = await userService.getCurrentUser();\r\n      //get full user details\r\n      user = await userService.getUserDetails();\r\n      //add the team id to the user in db\r\n      user.data.teams.push(team.data._id);\r\n      await userService.editUserDetails(user.data);\r\n      delete user.data.password;\r\n      //add the user details to team in db\r\n      await team.data.players.push(user.data);\r\n      await teamService.editTeam(team.data);\r\n      this.props.history.push(\"/my-teams\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({\r\n          errors: { teamNumber: \"No team was found with this team number\" },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Join an existing team\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\" id=\"joinText\">\r\n            <p>\r\n              <strong>Please enter team number</strong> <br />\r\n              *Ask team members for the number\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-8\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"PUT\">\r\n              {this.renderInput(\"teamNumber\", \"Team Number\")}\r\n              <div className=\"d-flex justify-content-between\">\r\n                {this.renderButton(\"Join Team\")}\r\n                <Link\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary joinB\"\r\n                  to=\"/my-teams\"\r\n                >\r\n                  Not right now\r\n                </Link>\r\n              </div>\r\n            </form>\r\n            <p className=\"mt-2 join\">*To join a demo team, enter:976991</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JoinTeam;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"./../../config.json\";\r\n\r\nconst PlayerCard = ({ header, data, name, image, cardName, team, teamimage }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n             style={{\r\n              backgroundImage: `url(${\r\n                process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n              })`,\r\n            }}\r\n      >\r\n        <h5 className=\"card-title \">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/tables/${cardName}/${team}`}\r\n        header={header}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerCard;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\n\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nconst SuccessP = ({ header, data, name, image, team, table }) => {\r\n  return (\r\n\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n           style={{\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n            })`,\r\n          }}>\r\n        <h5 className=\"card-title \">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n     className=\"text-white btn btn-primary\"\r\n     id=\"cardFooter\"\r\n        to={`/tables/success/${team}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessP;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst CurrMonth = ({ header, data, name, image, cMonth, team, month }) => {\r\n  const date = new Date();\r\n  let currentMonth = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div\r\n        className=\"card \"\r\n        id=\"mainStats\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n          })`,\r\n        }}\r\n      >\r\n        <h5 className=\"card-title \">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body p-0\" id=\"statsCardBody\">\r\n          <div className=\"card-text pt-3\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n            <div className=\"d-flex justify-content-around\">\r\n              <span id=\"month\">{currentMonth ? currentMonth : \"\"}</span>\r\n\r\n              <span>{data ? data : 0}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/tables/monthlyStats/${team}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrMonth;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\n\r\nconst Profits = ({ header, data, name, image, team, table }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n           style={{\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n            })`,\r\n          }}>\r\n        <h5 className=\"card-title\">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n     className=\"text-white btn btn-primary\"\r\n     id=\"cardFooter\"\r\n        to={`/tables/profits/top-ten/${team}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight/>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profits;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport _ from \"lodash\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\n\r\nconst H2hGameEnd = ({ gameId, header }) => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [ended, setEnded] = useState(false);\r\n  useEffect(() => {\r\n    const lastH2h = async () => {\r\n      try {\r\n        let last = await h2hService.getByGameId(gameId);\r\n        last = _.flattenDeep(last.data[0].players);\r\n        last.sort((a, b) => b.points - a.points);\r\n        setPlayers(last);\r\n        setEnded(true);\r\n      } catch (error) {\r\n        // console.log(\"error1\");\r\n      }\r\n    };\r\n    lastH2h();\r\n  }, [gameId]);\r\n  let Rank = 1;\r\n  return (\r\n    <div>\r\n      <SpinnerInfinity\r\n        size={130}\r\n        thickness={151}\r\n        speed={70}\r\n        color=\"rgba(252, 252, 252, 1)\"\r\n        secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n        enabled={!ended}\r\n      />\r\n      {ended && (\r\n        <div className=\"contain\">\r\n          <PageHeader titleText={header} />\r\n          <div className=\"col-12\" id=\"card-top\">\r\n            <ol className=\"statsList\">\r\n              <li\r\n                id=\"lastGameHero\"\r\n                className=\"statsHero d-flex flex-column\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                  })`,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"stats d-flex w-100 justify-content-between\"\r\n                  id=\"lGame\"\r\n                >\r\n                  <p className=\"ms-5\">Player</p>\r\n                  <p className=\"me-3\">Points</p>\r\n                </div>\r\n              </li>\r\n              <React.Fragment>\r\n                {players.map((player) => (\r\n                  <li\r\n                    className=\"statsRow w-100 justify-content-between\"\r\n                    key={player.id}\r\n                  >\r\n                    <div className=\"rowPos\">{Rank++}</div>\r\n                    <div className=\"rowImage\">\r\n                      <img\r\n                        src={`${apiImage}${player.image}`}\r\n                        alt=\"player list row\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"rowName\" id=\"lGameName\">\r\n                      {player.name}\r\n                    </div>\r\n                    <div className=\"rowProfit\">{player.points}</div>\r\n                  </li>\r\n                ))}\r\n              </React.Fragment>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hGameEnd;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../services/gameService\";\r\nimport PageHeader from \"../components/common/pageHeader\";\r\nimport { apiImage } from \"../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport H2hGameEnd from \"./h2h/h2hGameEnd\";\r\n\r\nconst MainLastgame = ({ teamId }) => {\r\n  const [data, setData] = useState([]);\r\n  const [lastGame, setLastGame] = useState([]);\r\n  useEffect(() => {\r\n    const getLastGame = async () => {\r\n      let game = await gameService.lastGame(teamId);\r\n      game = game.data[0];\r\n      let last = game.players.sort((a, b) => b.profit - a.profit);\r\n      setData(last);\r\n      setLastGame(game);\r\n    };\r\n\r\n    getLastGame();\r\n  }, [teamId]);\r\n\r\n  let Rank = 1;\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Last Game\" />\r\n\r\n      {!data && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={!data ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {data && (\r\n        <div className=\"col-lg-4 col-12 pb-3\" id=\"card-top\">\r\n          <ol className=\"statsList\">\r\n            <li\r\n              id=\"lastGameHero\"\r\n              className=\"statsHero d-flex flex-column\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <p>\r\n                {new Date(lastGame.createdAt).toLocaleDateString(\"en-GB\") +\r\n                  \"  \" +\r\n                  new Date(lastGame.createdAt).toLocaleString(\"en-US\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                  }) +\r\n                  \" - \" +\r\n                  new Date(lastGame.updatedAt).toLocaleString(\"en-US\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                  })}\r\n              </p>\r\n              <div className=\"stats d-flex  w-100\" id=\"lGameMain\">\r\n                <p>Rank</p>\r\n                <p>Player</p>\r\n                <p>Name</p>\r\n                <p>Cashing</p>\r\n                <p>Profit</p>\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow\" key={player.id}>\r\n                  <div className=\"rowPos\">{Rank++}.</div>\r\n                  <div className=\"rowImagePerHour\">\r\n                    <img\r\n                      src={data.length > 0 ? `${apiImage}${player.image}` : \"\"}\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div id=\"lGamePlayer\">\r\n                    {data.length > 1 ? player.name : \"\"}\r\n                  </div>\r\n                  <div className=\"rowCashingLastGame\">\r\n                    {data.length > 1 ? player.cashing : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      player.profit > 0\r\n                        ? \"rowProfit text-success\"\r\n                        : \"rowProfit text-danger\"\r\n                    }\r\n                  >\r\n                    {player.profit}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ol>\r\n          <H2hGameEnd gameId={lastGame._id} header=\"Last H2H\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLastgame;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"./../../config.json\";\r\n\r\nconst H2hCard = ({ header, data, name, image, cardName, team, teamimage }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n           style={{\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n            })`,\r\n          }}>\r\n        <h5 className=\"card-title \">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/tables/h2h/${team}`}\r\n        header={header}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport _ from \"lodash\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst AllGames = ({ teamId }) => {\r\n  const [games, setGames] = useState(null);\r\n  const [gamesData, setGamesData] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [pages, setPages] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [perPage, setPerPage] = useState(3);\r\n  useEffect(() => {\r\n    const getGames = async () => {\r\n      const all = await gameService.allGamesByTeam(teamId);\r\n      setGamesData(all.data);\r\n      const allGames = all.data.map((d) => _.flattenDeep(d.players));\r\n      setGames(allGames);\r\n      setLoading(true);\r\n      try {\r\n        setPages(Math.floor(games.length / perPage));\r\n      } catch {\r\n        console.log(\"not yet logged\");\r\n      }\r\n    };\r\n\r\n    getGames();\r\n  }, [perPage, games ? games.length : \"\", teamId]);\r\n  let created = 0;\r\n  let items = [];\r\n  items = games ? games.slice(page * perPage, (page + 1) * perPage) : \"\";\r\n  let itemsDates = gamesData\r\n    ? gamesData.slice(page * perPage, (page + 1) * perPage)\r\n    : \"\";\r\n\r\n  const handlePageClick = (event) => {\r\n    let pageC = event.selected;\r\n    setPage(pageC);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"All Games\" />\r\n      {!games && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={true}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"row\">\r\n        {loading && (\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            pageCount={items.length % 3 === 0 ? pages + 1 : pages}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination text-white justify-content-center\"}\r\n            activeClassName={\"active\"}\r\n            pageClassName={\"page-item\"}\r\n            pageLinkClassName={\"page-link\"}\r\n            previousClassName={\"page-item\"}\r\n            previousLinkClassName={\"page-link\"}\r\n            nextClassName={\"page-item\"}\r\n            nextLinkClassName={\"page-link\"}\r\n          />\r\n        )}\r\n\r\n        {games &&\r\n          items.map((g) => (\r\n            <div\r\n              className=\"col-lg-4 col-12 \"\r\n              id=\"card-top\"\r\n              key={g[0].profit + g[0].image}\r\n            >\r\n              <ol className=\"statsList\">\r\n                <li\r\n                  id=\"lastGameHero\"\r\n                  className=\"statsHero d-flex flex-column\"\r\n                  style={{\r\n                    backgroundImage: `url(${\r\n                      process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                    })`,\r\n                  }}\r\n                >\r\n                  <p>\r\n                    {new Date(\r\n                      itemsDates[created++].createdAt\r\n                    ).toLocaleDateString(\"en-GB\") +\r\n                      \" \" +\r\n                      new Date(\r\n                        itemsDates[created - 1].createdAt\r\n                      ).toLocaleString(\"en-US\", {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                        hour12: false,\r\n                      }) +\r\n                      \" - \" +\r\n                      new Date(\r\n                        itemsDates[created - 1].updatedAt\r\n                      ).toLocaleString(\"en-US\", {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                        hour12: false,\r\n                      })}\r\n                  </p>\r\n                  <div className=\"stats d-flex w-100 \" id=\"lGameAllGames\">\r\n                    <p>Rank</p>\r\n                    <p>Player</p>\r\n                    <p>Name</p>\r\n                    <p>Cashing</p>\r\n                    <p>Profit</p>\r\n                  </div>\r\n                </li>\r\n\r\n                {g\r\n                  .sort((a, b) => b.profit - a.profit)\r\n                  .map((player) => (\r\n                    <li className=\"statsRowAllGames\" key={player.image}>\r\n                      <div className=\"rowPos\">{player.gameRank}.</div>\r\n                      <div className=\"rowImage\">\r\n                        <img\r\n                          src={`${apiImage}${player.image}`}\r\n                          alt=\"player list row\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"rowName\" id=\"lGameName\">\r\n                        {player.name}\r\n                      </div>\r\n                      <div className=\"rowCashingAll\">{player.cashing}</div>\r\n                      <div\r\n                        className={\r\n                          player.profit > 0\r\n                            ? \"rowProfit text-success\"\r\n                            : \"rowProfit text-danger\"\r\n                        }\r\n                      >\r\n                        {player.profit}\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n              </ol>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllGames;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\n\r\nconst Profits = ({ header, data, name, image, team, table,path }) => {\r\n  return (\r\n    <div className=\"cardDiv\">\r\n      <div className=\"card\" id=\"mainStats\"\r\n           style={{\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\r\n            })`,\r\n          }}>\r\n        <h5 className=\"card-title\">{name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              image\r\n                ? `${apiImage}${image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body\" id=\"statsCardBody\">\r\n          <p className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n\r\n            <span>{data ? data : 0}</span>\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Link\r\n     className=\"text-white btn btn-primary\"\r\n     id=\"cardFooter\"\r\n        to={path}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight/>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profits;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gameService from \"../services/gameService\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport PlayerCard from \"./topStats/playerCard\";\r\nimport SuccessP from \"./topStats/successp\";\r\nimport CurrMonth from \"./topStats/currMonth\";\r\nimport Profits from \"./topStats/profits\";\r\nimport { SpinnerDiamond } from \"spinners-react\";\r\nimport MainLastgame from \"./mainLastGame\";\r\nimport teamService from \"../services/teamService\";\r\nimport { apiImage } from \"../config.json\";\r\nimport h2hService from \"../services/h2hService\";\r\nimport H2hCard from \"./h2h/h2hCard\";\r\nimport AllGames from \"./games/allGames\";\r\nimport { IoIosTrophy } from \"react-icons/io\";\r\nimport StatsPerHour from \"./topStats/statsPerHour\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdDateRange } from \"react-icons/md\";\r\nimport * as dayjs from \"dayjs\";\r\n\r\nexport default function MainTable(props) {\r\n  //get the data for the table\r\n  const [data, setData] = useState(\"\");\r\n  const [avgprofit, setAvgprofit] = useState([]);\r\n  const [totalgames, setTotalgames] = useState([]);\r\n  const [avgcashing, setAvgcashing] = useState([]);\r\n  const [success, setSuccess] = useState([]);\r\n  const [gamesprofit, setGamesprofit] = useState([]);\r\n  const [h2h, setH2h] = useState([]);\r\n  const [monthleader, setMonthleader] = useState([]);\r\n  const [profits, setProfits] = useState([]);\r\n  const [teamImage, setTeamImage] = useState(\"\");\r\n  const [totalCash, setTotalCash] = useState({});\r\n  const [totalGames, setTotalGames] = useState(\"\");\r\n  const [statsPerHour, setstatsPerHour] = useState([]);\r\n  const teamId = props.match.params.teamId;\r\n  const [teams, setTeams] = useState([]);\r\n  const [lastGame, setLastGame] = useState([]);\r\n  var relativeTime = require(\"dayjs/plugin/relativeTime\");\r\n\r\n  useEffect(() => {\r\n    const getLastGame = async () => {\r\n      let game = await gameService.lastGame(teamId);\r\n      game = game.data[0];\r\n      setLastGame(game);\r\n    };\r\n\r\n    getLastGame();\r\n  }, [teamId]);\r\n\r\n  //fetch data from DB\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.table(teamId);\r\n      table = table.data;\r\n\r\n      table.sort((a, b) => b.totalProfit - a.totalProfit);\r\n      setData(table);\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImage(teamPic.data);\r\n\r\n      let totalCash = await gameService.totalCash(teamId);\r\n      setTotalCash(totalCash.data);\r\n\r\n      let totalGames = await gameService.totalGames(teamId);\r\n      setTotalGames(totalGames.data);\r\n\r\n      let h2h = await h2hService.getPointsByTeam(teamId);\r\n      if (h2h.data[0]._id.name === \"Nispach\") {\r\n        h2h.data.shift();\r\n      }\r\n      setH2h(h2h.data);\r\n\r\n      let totoalg = [...table];\r\n      const totalG = await totoalg.sort((a, b) => b.numOfGames - a.numOfGames);\r\n      setTotalgames(totalG);\r\n\r\n      let avgp = [...table];\r\n      const avgP = await avgp.sort((a, b) => b.avgProfit - a.avgProfit);\r\n      setAvgprofit(avgP);\r\n\r\n      let gamep = [...table];\r\n      const gameP = await gamep.sort(\r\n        (a, b) => b.gamesWithProfit - a.gamesWithProfit\r\n      );\r\n      setGamesprofit(gameP);\r\n\r\n      let successPc = [...table];\r\n      const successP = await successPc.sort(\r\n        (a, b) => b.successPercentage - a.successPercentage\r\n      );\r\n      setSuccess(successP);\r\n      let avgc = [...table];\r\n      const avgC = await avgc.sort((a, b) => a.avgCashing - b.avgCashing);\r\n      setAvgcashing(avgC);\r\n    };\r\n    getTable();\r\n    return () => {\r\n      let isCancelled = true;\r\n    };\r\n  }, [teamId]);\r\n\r\n  useEffect(() => {\r\n    const dataByMonths = async () => {\r\n      let thisMonth = new Date().getMonth();\r\n      let results = await gameService.monthsData(\r\n        props.match.params.teamId,\r\n        thisMonth + 1\r\n      );\r\n      results = results.data;\r\n      if (results.length > 0) {\r\n        const currMonth = results.filter(\r\n          (e) => e._id.monthPlayed !== thisMonth\r\n        );\r\n        const currMonthLeader = await currMonth.sort(\r\n          (a, b) => b.totalProfit - a.totalProfit\r\n        );\r\n\r\n        setMonthleader(currMonthLeader);\r\n      } else {\r\n        const currMonth = results.filter(\r\n          (e) => e._id.monthPlayed !== thisMonth - 1\r\n        );\r\n        const currMonthLeader = await currMonth.sort(\r\n          (a, b) => b.totalProfit - a.totalProfit\r\n        );\r\n        setMonthleader(currMonthLeader);\r\n      }\r\n    };\r\n    dataByMonths();\r\n  }, [props.match.params.teamId]);\r\n\r\n  useEffect(() => {\r\n    const profits = async () => {\r\n      let results = await gameService.profits(props.match.params.teamId);\r\n      results = results.data;\r\n      setProfits(results);\r\n    };\r\n    profits();\r\n  }, [props.match.params.teamId]);\r\n\r\n  useEffect(() => {\r\n    const statsPerHour = async () => {\r\n      const dataPerHour = await gameService.statsPerHour(\r\n        props.match.params.teamId\r\n      );\r\n      setstatsPerHour(dataPerHour.data);\r\n    };\r\n    statsPerHour();\r\n  }, [props.match.params.teamId]);\r\n\r\n  //get team players for avatars\r\n  useEffect(() => {\r\n    const fetchTeams = async () => {\r\n      const { data } = await teamService.getMyTeam();\r\n\r\n      setTeams(data[0].players);\r\n    };\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  dayjs.extend(relativeTime);\r\n  let daysFromGame = dayjs(lastGame.createdAt).fromNow();\r\n\r\n  return (\r\n    <div className=\"container\" id=\"dashboard\">\r\n      <PageHeader\r\n        className=\"mb-0\"\r\n        titleText={new Date().getFullYear() + \" Top Stats\"}\r\n      />\r\n      {data.length < 1 && (\r\n        <div className=\"spinner mt-5\">\r\n          <SpinnerDiamond\r\n            size={130}\r\n            thickness={151}\r\n            speed={81}\r\n            color=\"rgba(108, 20, 180, 1)\"\r\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\r\n            enabled={data.length < 1 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {data.length > 1 && (\r\n        <React.Fragment>\r\n          <div>\r\n            <motion.img\r\n              style={{\r\n                width: 150,\r\n                height: 150,\r\n                borderRadius: 30,\r\n                backgroundColor: \"#fff\",\r\n              }}\r\n              animate={{ rotate: 360 }}\r\n              transition={{\r\n                type: \"spring\",\r\n                duration: 5,\r\n                bounce: 0.6,\r\n              }}\r\n              src={`${apiImage}${teamImage.teamImage}`}\r\n              alt=\"team\"\r\n            />\r\n            <p className=\"ms-2 text-white mb-2 mt-2 display-6\">\r\n              {teamImage.name}\r\n            </p>\r\n            <div className=\"container playersList mb-2\">\r\n              {teams.map((player) => (\r\n                <motion.div\r\n                  className=\"\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ delay: 1.5, duration: 5 }}\r\n                >\r\n                  <Link to={`/players-stats/${player._id}`}>\r\n                    <img src={`${apiImage}${player.image}`} alt=\"player\" />\r\n                  </Link>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <motion.div\r\n            initial={{ x: \"-100vw\" }}\r\n            animate={{ x: 0 }}\r\n            transition={{\r\n              delay: 2,\r\n              type: \"spring\",\r\n              duration: 2,\r\n              bounce: 0.6,\r\n            }}\r\n            className=\"totalCash d-flex flex-column mb-2 ps-1\"\r\n          >\r\n            <p className=\"mb-0\">\r\n              Total Cash Played:\r\n              <strong>\r\n                <span className=\"ps-1\">\r\n                  {totalCash[0]\r\n                    ? totalCash[0].totalCashing.toLocaleString()\r\n                    : null}\r\n                  <i className=\"fas fa-money-bill-alt ps-1\"></i>\r\n                </span>\r\n              </strong>\r\n            </p>\r\n            <p className=\"mb-0\">\r\n              Total Hours Played:\r\n              <strong>\r\n                <span className=\"ps-1\">\r\n                  {totalCash[0] ? totalCash[0].totalHours.toFixed(2) : null}\r\n                  <i className=\"fas fa-hourglass-half ps-1 \"></i>\r\n                </span>\r\n              </strong>\r\n            </p>\r\n            <p className=\"mb-0\">\r\n              Total Games Played:\r\n              <strong>\r\n                <span className=\"ps-1\">\r\n                  {totalGames[0] ? totalGames[0].TotalGames : null}\r\n                  <IoIosTrophy className=\"ms-1 mb-1\" />\r\n                </span>\r\n              </strong>\r\n            </p>\r\n            <p className=\"mb-0\">\r\n              Last Game Played:\r\n              <strong>\r\n                <span className=\"ps-1\">\r\n                  {totalGames[0] ? daysFromGame : \"\"}\r\n                  <MdDateRange className=\"ms-1 \" />\r\n                </span>\r\n              </strong>\r\n            </p>\r\n          </motion.div>\r\n          <div\r\n            className=\"alert alert-info fade show w-75 py-1 alert-dismissible\"\r\n            role=\"alert\"\r\n          >\r\n            new update 21/5/22- <br></br>The month's card show stats by each\r\n            month\r\n          </div>\r\n          <motion.div\r\n            id=\"dashboardDisplay\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{\r\n              y: [\"300px\", \"0px\"],\r\n              delay: 2.2,\r\n              opacity: 1,\r\n            }}\r\n            transition={{ duration: 2 }}\r\n          >\r\n            <PlayerCard\r\n              header=\"Total Profit\"\r\n              data={data[0].totalProfit}\r\n              name={data[0]._id.name}\r\n              image={data[0]._id.image}\r\n              cardName=\"totalProfit\"\r\n              team={teamId}\r\n              table={data}\r\n            />\r\n            {avgprofit.length > 1 && (\r\n              <PlayerCard\r\n                header=\"Average Profit\"\r\n                data={avgprofit[0].avgProfit}\r\n                name={avgprofit[0]._id.name}\r\n                image={avgprofit[0]._id.image}\r\n                cardName=\"avgProfit\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n\r\n            {totalgames.length > 1 && (\r\n              <PlayerCard\r\n                header=\"Total Games\"\r\n                data={totalgames[0].numOfGames}\r\n                name={totalgames[0]._id.name}\r\n                image={totalgames[0]._id.image}\r\n                cardName=\"numOfGames\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {gamesprofit.length > 1 && (\r\n              <PlayerCard\r\n                header=\"Games With Profit\"\r\n                data={gamesprofit[0].gamesWithProfit}\r\n                name={gamesprofit[0]._id.name}\r\n                image={gamesprofit[0]._id.image}\r\n                cardName=\"gamesWithProfit\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {success.length > 1 && (\r\n              <SuccessP\r\n                header=\"Success %\"\r\n                data={success[0].successPercentage}\r\n                name={success[0]._id.name}\r\n                image={success[0]._id.image}\r\n                cardName=\"successPercentage\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {avgcashing.length > 1 && (\r\n              <PlayerCard\r\n                header=\"Average Cashing\"\r\n                data={avgcashing[0].avgCashing}\r\n                name={avgcashing[0]._id.name}\r\n                image={avgcashing[0]._id.image}\r\n                cardName=\"avgCashing\"\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {statsPerHour.length > 1 && (\r\n              <StatsPerHour\r\n                header=\"Profit Per Hour\"\r\n                name={statsPerHour.length > 0 ? statsPerHour[0]._id.name : \"\"}\r\n                image={statsPerHour.length > 0 ? statsPerHour[0]._id.image : \"\"}\r\n                data={\r\n                  statsPerHour.length > 0 ? statsPerHour[0].profitPerHour : \"\"\r\n                }\r\n                team={teamId}\r\n                path={`/stats-per-hour/${props.match.params.teamId}`}\r\n              />\r\n            )}\r\n            <Profits\r\n              header=\"Top 10 Profits\"\r\n              name={profits.length > 0 ? profits[0].players.name : \"\"}\r\n              image={profits.length > 0 ? profits[0].players.image : \"\"}\r\n              data={profits.length > 0 ? profits[0].players.profit : \"\"}\r\n              team={teamId}\r\n            />\r\n            {monthleader.length > 0 && (\r\n              <CurrMonth\r\n                header=\"Stats By Month's\"\r\n                data={monthleader[0].totalProfit}\r\n                name={monthleader[0]._id.name}\r\n                image={monthleader[0]._id.image}\r\n                cMonth={monthleader[0].lastGame}\r\n                team={teamId}\r\n              />\r\n            )}\r\n            {monthleader.length === 0 && (\r\n              <p className=\"text-danger display-10\">\r\n                {new Date().toLocaleString(\"en-us\", { month: \"long\" })} Stats-No\r\n                games this month yet\r\n              </p>\r\n            )}\r\n            {h2h.length > 0 && (\r\n              <H2hCard\r\n                header=\"H2H Games\"\r\n                data={h2h[0].avgPoints.toFixed(2)}\r\n                name={h2h[0]._id.name}\r\n                image={h2h[0]._id.image}\r\n                team={teamId}\r\n              />\r\n            )}\r\n          </motion.div>\r\n          <MainLastgame teamId={teamId} />\r\n          <AllGames teamId={teamId} />\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nconst Demo = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Game Demo\" />\r\n      <div className=\"screenShots col-lg-6 col-12\">\r\n        <h3 className=\"text-primary\">Screen Shots</h3>\r\n        <Carousel>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={process.env.PUBLIC_URL + \"demo/dashboard.JPG\"}\r\n              alt=\"First slide\"\r\n            />\r\n            <Carousel.Caption>\r\n              {/* <h3>First slide label</h3>\r\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p> */}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={process.env.PUBLIC_URL + \"demo/dash2.JPG\"}\r\n              alt=\"Second slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              {/* <h3>Second slide label</h3>\r\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> */}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={process.env.PUBLIC_URL + \"demo/dash3.JPG\"}\r\n              alt=\"Third slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              {/* <h3>Third slide label</h3>\r\n              <p>\r\n                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n              </p> */}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={process.env.PUBLIC_URL + \"demo/dash4.JPG\"}\r\n              alt=\"Third slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              {/* <h3>Third slide label</h3>\r\n              <p>\r\n                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n              </p> */}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n      <div className=\"row demoText\">\r\n        <h3>Basic instructions for setting up a game:</h3>\r\n        <ul>\r\n          <li>First sign-up or sign-in to set up a user</li>\r\n          <li>Head over to \"My-Teams\" located at the top navbar</li>\r\n          <li>\r\n            *If you want to check out a demo team, select \"Join an existing\r\n            team\" and follow instuctions\r\n          </li>\r\n\r\n          {/* <img\r\n            src={process.env.PUBLIC_URL + `demo/myTeams.JPG`}\r\n            alt=\"demo img\"\r\n            className=\"demo-img\"\r\n          /> */}\r\n          {/* <video src={process.env.PUBLIC_URL + \"demo/demo1.mp4\"}></video> */}\r\n          {/* <div className=\"video col-lg-6 col-12\">\r\n         <video width=\"100%\" controls className=\"demoVideo \">\r\n            <source src={process.env.PUBLIC_URL + \"demo/demo1.mp4\"} />\r\n          </video>\r\n         </div> */}\r\n\r\n          <li>\r\n            In this page you can:\r\n            <ul>\r\n              <li>Join an existing team</li>\r\n              <li>Start a new team</li>\r\n              <li>Check out your team statistics</li>\r\n              <li>Start a new game</li>\r\n              <li>Edit or delete a team</li>\r\n            </ul>\r\n          </li>\r\n          <li>Table & statistics</li>\r\n          {/* <div className=\"video col-lg-6 col-12\">\r\n          <video width=\"100%\" controls className=\"demoVideo\">\r\n            <source src={process.env.PUBLIC_URL + \"demo/demo2.mp4\"} />\r\n          </video>\r\n          </div> */}\r\n          <li>Start a new game:</li>\r\n          <ul>\r\n            <li>Select the players that will play in the game</li>\r\n            <li>*Note that you need to select at least 2 players</li>\r\n          </ul>\r\n\r\n          <li>\r\n            Start your game, compete with your amigos for the chance to be poker\r\n            champions\r\n          </li>\r\n          <li>\r\n            Each time a player cashes in, press the $ icon to add another 50$ to\r\n            his cashing\r\n          </li>\r\n          <li>\r\n            At the end of the match , count each players cash and input the\r\n            ammount to the \"cash in hand\" field.\r\n          </li>\r\n\r\n          <li>\r\n            To finish the game press \"Update Results\" & you will be transferd to\r\n            the leading boards of the latest game\r\n          </li>\r\n          <li>Have fun & ALL IN!!!!!!!!!!!!</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <PageHeader titleText=\"About\" />\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/icons/about.png\"}\r\n          alt=\"abput icon\"\r\n          className=\"aboutIcon\"\r\n        />\r\n        <h4 className=\"mt-4\">\r\n          My name is Nadav Galili, I developed Poker-Underground after several\r\n          years of <br />\r\n          playing Poker with my friends.\r\n        </h4>\r\n        <h4 className=\"mt-4\">\r\n          One of the pleasures of the game is to keep track of your game\r\n          results.\r\n          <br /> <br />\r\n          That’s how I came up with the idea for this app...\r\n        </h4>\r\n        <h4 className=\"mt-4\">\r\n          No more writing game results on papers or EXCEL sheets, all you need\r\n          is in this app!\r\n        </h4>\r\n        <h4 className=\"mt-4\">\r\n          Further features are yet to come soon.. Enjoy & ALL IN!!!!\r\n        </h4>\r\n        <h3>\r\n          <br />\r\n          Get in touch:\r\n          <a href=\"mailto:nadavg1000@gmail.com\" className=\"ms-2\">\r\n            {\" \"}\r\n            nadavg1000@gmail.com\r\n          </a>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nconst TotalPersonal = ({ details }) => {\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [pages, setPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const getGames = () => {\r\n      setPages(Math.floor(details.length / perPage));\r\n    };\r\n    getGames();\r\n  }, [details.length, perPage]);\r\n  let items = [];\r\n  items = details ? details.slice(page * perPage, (page + 1) * perPage) : \"\";\r\n\r\n  const handlePageClick = (event) => {\r\n    let pageC = event.selected;\r\n    setPage(pageC);\r\n  };\r\n\r\n  return (\r\n    <div className=\"allPersonal mt-2 col-lg-4 col-11\">\r\n      <PageHeader titleText=\"All Games\"/>\r\n      <ReactPaginate\r\n        previousLabel={\"prev\"}\r\n        nextLabel={\"next\"}\r\n        pageCount={items.length%10===0?pages+1:pages}\r\n        onPageChange={handlePageClick}\r\n        containerClassName={\"pagination text-white justify-content-center\"}\r\n        activeClassName={\"active\"}\r\n        pageClassName={\"page-item\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        previousClassName={\"page-item\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n      />\r\n      <div className=\"col-12 mt-2\">\r\n        <div id=\"card-top\">\r\n          <ol className=\"statsList mb-0\">\r\n            <li\r\n              id=\"gameLi\"\r\n              className=\"statsHero d-flex\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div\r\n                className=\"gameH2h d-flex w-100 justify-content-between\"\r\n                id=\"personalheader\"\r\n              >\r\n                <div className=\"headerDetails ms-2\">Date</div>\r\n                <div className=\"headerDetails\">Team Name</div>\r\n                <div className=\"headerDetails\">Cashing</div>\r\n                <div className=\"headerDetails\">Num Of Cashing</div>\r\n                <div className=\"headerDetails\">Game Rank</div>\r\n                <div className=\"headerDetails\">Profit</div>\r\n              </div>\r\n            </li>\r\n            {items.map((d) => (\r\n              <li\r\n                className=\"statsRow w-100 d-flex justify-content-between\"\r\n                id=\"personalDetails\"\r\n                key={new Date(d.createdAt)}\r\n              >\r\n                <div className=\"rowPlayerDetails ms-1\">\r\n                  {new Date(d.createdAt).toLocaleDateString(\"en-GB\")}\r\n                </div>\r\n                <div className=\"rowPlayerDetails\">{d.team_name}</div>\r\n                <div className=\"rowPlayerDetails\">{d.players.cashing}</div>\r\n                <div className=\"rowPlayerDetails\">{d.players.numOfCashing}</div>\r\n                <div className=\"rowPlayerDetails\">{d.players.gameRank}</div>\r\n                <div\r\n                  className={\r\n                    d.players.profit > 0\r\n                      ? \"rowPlayersDetails text-success\"\r\n                      : \"rowPlayersDetails text-danger\"\r\n                  }\r\n                >\r\n                  {d.players.profit}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalPersonal;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport userService from \"../../services/userService\";\r\nimport gameService from \"../../services/gameService\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { SpinnerCircular } from \"spinners-react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport _ from \"lodash\";\r\nimport TotalPersonal from \"./totalPersonal\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\n\r\nconst MyStats = () => {\r\n  const [me, setMe] = useState({});\r\n  const [stats, setStats] = useState({});\r\n  const [month, setMonth] = useState([]);\r\n  const [points, setPoints] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [chartDates, setChartDates] = useState([]);\r\n  const [chartCashing, setChartCashing] = useState([]);\r\n  let currentMonth = new Date();\r\n  let currentMonthNumber = currentMonth.getMonth() + 1;\r\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      if (me.teams) {\r\n        let table = await gameService.monthsData(me.teams[0]);\r\n        table = table.data;\r\n        let currentMonth = [...table];\r\n        currentMonth = currentMonth.filter(\r\n          (month) => month._id.monthPlayed === currentMonthNumber\r\n        );\r\n        currentMonth = currentMonth.find((e) => e._id.player_id === me._id);\r\n        setMonth(currentMonth);\r\n        let detailed = await gameService.personalGames(me._id);\r\n        setDetails(detailed.data);\r\n\r\n        let myDetailed = await gameService.personalGames(me._id);\r\n\r\n        let chartDetails = [];\r\n        let chartDates = [];\r\n        let chartCash = [];\r\n        try {\r\n          await myDetailed.data.forEach((e) =>\r\n            chartDetails.push(e.players.profit)\r\n          );\r\n          setChartData(chartDetails);\r\n\r\n          await myDetailed.data.forEach((e) =>\r\n            chartCash.push(e.players.cashing)\r\n          );\r\n          setChartCashing(chartCash);\r\n\r\n          await myDetailed.data.forEach((e) =>\r\n            chartDates.push(\r\n              new Date(e.createdAt).toLocaleDateString(\"en-GB\").substr(0, 5)\r\n            )\r\n          );\r\n          setChartDates(chartDates);\r\n        } catch {\r\n          console.log(\"errr\");\r\n        }\r\n      }\r\n    };\r\n\r\n    getTable();\r\n  }, [setMonth, currentMonthNumber, me.teams, me._id]);\r\n\r\n  useEffect(() => {\r\n    const getMydata = async () => {\r\n      let myData = await userService.getUserDetails();\r\n      delete myData.data.password;\r\n      setMe(myData.data);\r\n      let myStats = await gameService.personal(me._id);\r\n\r\n      setStats(myStats.data[0]);\r\n    };\r\n    getMydata();\r\n  }, [setMe, me._id]);\r\n\r\n  useEffect(() => {\r\n    const points = async () => {\r\n      if (me._id) {\r\n        let myPoints = await h2hService.getPointsByPlayer(me._id);\r\n        setPoints(myPoints.data[0]);\r\n      }\r\n    };\r\n    points();\r\n  }, [me._id]);\r\n\r\n  const data = {\r\n    labels: chartDates,\r\n    datasets: [\r\n      {\r\n        label: \"Profit\",\r\n        data: chartData,\r\n        fill: false,\r\n        backgroundColor: \"#6c14b4\",\r\n        borderColor: \"#6c14b4\",\r\n      },\r\n      {\r\n        label: \"Cashing\",\r\n        data: chartCashing,\r\n        fill: false,\r\n        backgroundColor: \"#2752ea\",\r\n        borderColor: \"#2752ea\",\r\n      },\r\n    ],\r\n  };\r\n  let delayed;\r\n  const options = {\r\n    options: {\r\n      animation: {\r\n        onComplete: () => {\r\n          delayed = true;\r\n        },\r\n        delay: (context) => {\r\n          let delay = 0;\r\n          if (\r\n            context.type === \"data\" &&\r\n            context.mode === \"default\" &&\r\n            !delayed\r\n          ) {\r\n            delay = context.dataIndex * 400 + context.datasetIndex * 200;\r\n          }\r\n          return delay;\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          type: \"linear\",\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"container playerStats pb-4\">\r\n      <PageHeader titleText=\"Player Statistics\" />\r\n      {_.isEmpty(stats) && (\r\n        <div className=\"spinner\">\r\n          <SpinnerCircular\r\n            size={130}\r\n            thickness={151}\r\n            speed={81}\r\n            color=\"rgba(108, 20, 180, 1)\"\r\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\r\n            // enabled={true}\r\n            enabled={_.isEmpty(stats) ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {!_.isEmpty(stats) && (\r\n        <div className=\"\">\r\n          <div className=\"playerInfo bg-white col-11 col-lg-4\">\r\n            <span className=\"text-primary ms-3\">\r\n              {new Date().toLocaleDateString(\"en-GB\")}\r\n            </span>\r\n            <div\r\n              className=\"playerBg d-flex justify-content-around bg-primary\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"pDetails\">\r\n                <p>\r\n                  {me.firstName} {me.lastName}\r\n                </p>\r\n                <p>{me.nickName}</p>\r\n                <Link\r\n                  className=\"text-white text-decoration-none\"\r\n                  to={`/my-stats/edit_player/${me._id}`}\r\n                >\r\n                  <AiFillEdit color=\"white\" className=\"ms-1\" />\r\n                  Edit Player\r\n                </Link>\r\n              </div>\r\n              <div className=\"pImage\">\r\n                <img src={`${apiImage}${me.image}`} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStats d-flex justify-content-between mt-3\">\r\n              <div className=\"personalStatP\">\r\n                <p>Total Profit</p>\r\n                <p>{stats.totalProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Profit</p>\r\n                <p>{stats.avgProfit ? stats.avgProfit.toFixed(2) : 0}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Total Games</p>\r\n                <p>{stats.numOfGames}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Games W/ Profit</p>\r\n                <p>{stats.gamesWithProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Success %</p>\r\n                <p>{stats.successPercentage}%</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStatsRow2 d-flex justify-content-between\">\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Cashing</p>\r\n                <p>{stats.avgCashing.toFixed(2)}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Max Profit</p>\r\n                <p>{stats.maxProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Max Loss</p>\r\n                <p>{stats.minProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>{currentMonth}-Total Profit</p>\r\n                <p>{month ? month.totalProfit : \"No games this month\"}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>H2H Points</p>\r\n                <p>{points.totalPoints}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStats d-flex justify-content-between\">\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Game Rank</p>\r\n                <p>{stats.avgGameRank ? stats.avgGameRank.toFixed(2) : 0}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Last Game</p>\r\n                <p>{new Date(stats.lastGame).toLocaleDateString(\"en-GB\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"header\">\r\n            <h1 className=\"title  mt-2\">Personal Chart</h1>\r\n          </div>\r\n          <div className=\"col-lg-4 col-11\">\r\n            <Line data={data} options={options} />\r\n          </div>\r\n          <TotalPersonal details={details} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyStats;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { VscTriangleDown } from \"react-icons/vsc\";\r\nimport { VscTriangleUp } from \"react-icons/vsc\";\r\nimport { AiOutlineMinus } from \"react-icons/ai\";\r\n\r\nconst CardTable = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [previousPlayerRank, setPreviousPlayerRank] = useState([]);\r\n  const [headerTitle, setHeaderTitle] = useState(\"\");\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [dataChartDetails, setdataChartDetails] = useState({});\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n  const [heroPreviousRank, setHeroPreviousRank] = useState([]);\r\n  const teamId = props.match.params.teamId;\r\n  const cardName = props.match.params.cardName;\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.cardsData(teamId, cardName);\r\n      table = table.data;\r\n\r\n      if (cardName === \"totalProfit\") {\r\n        let previousRank = await gameService.previousRank(teamId);\r\n        setPreviousPlayerRank(previousRank.data);\r\n        try {\r\n          const previousHero = previousPlayerRank.find((player) => {\r\n            return player._id.player_id === hero._id.player_id;\r\n          });\r\n          setHeroPreviousRank(previousHero);\r\n        } catch (err) {\r\n          setHeroPreviousRank({ previousTableRank: 1 });\r\n          console.log(\"E\", err);\r\n        }\r\n      }\r\n\r\n      //merge objects to get previous rank\r\n      var merged = _.merge(\r\n        _.keyBy(table, \"_id.player_id\"),\r\n        _.keyBy(previousPlayerRank, \"_id.player_id\")\r\n      );\r\n      var values = _.values(merged);\r\n      setData(values);\r\n\r\n      let accu = [];\r\n      const barChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: `${headerTitle} By Player`,\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          barChart.labels.push(player._id.name);\r\n          barChart.datasets[0].data.push(player.cardTitle);\r\n        });\r\n        setbarChartDetails(barChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      const dataChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          dataChart.labels.push(player._id.name);\r\n          accu.push(player.cardTitle);\r\n        });\r\n        let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\r\n        let percentageSum = [];\r\n        accu.forEach((percent) => {\r\n          percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\r\n        });\r\n        dataChart.datasets[0].data = percentageSum;\r\n        setdataChartDetails(dataChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      let myHero = table.shift();\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n\r\n      switch (cardName) {\r\n        case \"avgProfit\":\r\n          setHeaderTitle(\"Average Profit\");\r\n          break;\r\n        case \"numOfGames\":\r\n          setHeaderTitle(\"Total Games\");\r\n          break;\r\n        case \"avgCashing\":\r\n          setHeaderTitle(\"Average  Cashing\");\r\n          break;\r\n        case \"gamesWithProfit\":\r\n          setHeaderTitle(\"Games W/ Profit\");\r\n          break;\r\n        default:\r\n          setHeaderTitle(\"Total Profit\");\r\n      }\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n    getTable();\r\n  }, [setData, teamId, cardName, headerTitle]);\r\n  let rank = 2;\r\n  ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n  return (\r\n    <div className=\"container pb-4\">\r\n      <PageHeader titleText={headerTitle} />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {data.length === 0 && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {data.length > 0 && hero._id && (\r\n        <div className=\"col-lg-5 col-12\" id=\"cardTop\">\r\n          <ol className=\"statsList\">\r\n            <li\r\n              className=\"statsHero d-flex w-100\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"statsInfo flex-fill\">\r\n                <div className=\"pos\">\r\n                  {headerTitle === \"Total Profit\" ? hero.currentTableRank : 1}.\r\n                  <span className=\"previousPosition ps-1\">\r\n                    {hero.previousTableRank - 1 > 0 ? <VscTriangleUp /> : \"\"}\r\n                  </span>\r\n                  <span className=\"previousPosition ps-1\">\r\n                    {hero.previousTableRank - 1 > 0\r\n                      ? hero.previousTableRank - 1\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  {data.length > 0 ? hero._id.name : \"\"}\r\n                </Link>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  {data.length > 0 ? hero.cardTitle : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"heroImage\">\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  <img\r\n                    src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow\" key={player._id.name}>\r\n                  <div className=\"rowPos ps-1\">\r\n                    {headerTitle === \"Total Profit\" && player.currentTableRank}\r\n                    {headerTitle === \"Total Profit\" && (\r\n                      <span id=\"arrows\">\r\n                        {player.previousTableRank - player.currentTableRank >\r\n                        0 ? (\r\n                          <VscTriangleUp />\r\n                        ) : player.previousTableRank - player.currentTableRank <\r\n                          0 ? (\r\n                          <VscTriangleDown className=\"text-danger\" />\r\n                        ) : (\r\n                          <AiOutlineMinus className=\"text-warning\" />\r\n                        )}\r\n                      </span>\r\n                    )}\r\n                    {headerTitle === \"Total Profit\" && (\r\n                      <span\r\n                        className={`previousPosition ${\r\n                          player.previousTableRank - player.currentTableRank < 0\r\n                            ? \"text-danger\"\r\n                            : player.previousTableRank -\r\n                                player.currentTableRank >\r\n                              0\r\n                            ? \"text-success\"\r\n                            : \"text-warning\"\r\n                        }`}\r\n                      >\r\n                        {player.previousTableRank - player.currentTableRank !==\r\n                        0\r\n                          ? player.previousTableRank - player.currentTableRank\r\n                          : 0}\r\n                      </span>\r\n                    )}\r\n                    {headerTitle !== \"Total Profit\" && rank++}\r\n                  </div>\r\n                  <Link\r\n                    className=\"rowImage\"\r\n                    to={`/players-stats/${player._id.player_id}`}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\r\n                      }\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </Link>\r\n                  <div className=\"rowName\">\r\n                    {data.length > 0 ? player._id.name : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      player.cardTitle > 0\r\n                        ? \"rowProfit text-success\"\r\n                        : \"rowProfit text-danger\"\r\n                    }\r\n                  >\r\n                    {data.length > 0 ? player.cardTitle : \"\"}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ol>\r\n          {headerTitle !== \"Average Profit\" && headerTitle !== \"Total Profit\" && (\r\n            <React.Fragment>\r\n              <h4 className=\"text-white justify-content-center d-flex\">\r\n                {headerTitle} In %\r\n              </h4>\r\n              <Doughnut data={dataChartDetails} className=\"mb-3 pb-3\" />\r\n            </React.Fragment>\r\n          )}\r\n          <Bar data={barChartDetails} className=\"mb-3\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst SuccessCard = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n  const teamId = props.match.params.teamId;\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.successp(teamId);\r\n      table = table.data;\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n\r\n      const barChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: `Success %  By Player`,\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          barChart.labels.push(player._id.name);\r\n          barChart.datasets[0].data.push(player.successPercentage);\r\n        });\r\n        setbarChartDetails(barChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      let myHero = table.shift();\r\n\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n\r\n    getTable();\r\n  }, [setData, teamId]);\r\n\r\n  let rank = 2;\r\n\r\n  return (\r\n    <div className=\"container pb-4\">\r\n      <PageHeader titleText=\"Success %\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {data.length === 0 && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {data.length > 0 && (\r\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n          <ul className=\"statsList \">\r\n            <li\r\n              className=\"statsHero d-flex w-100\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"statsInfo flex-fill\">\r\n                <div className=\"pos\">1.</div>\r\n                <a href=\"#/\" id=\"heroName\">\r\n                  {data.length > 0 ? hero._id.name : \"\"}\r\n                </a>\r\n\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  {data.length > 0 ? hero.successPercentage + \" %\" : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"heroImage \">\r\n                <img\r\n                  src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow d-flex\" key={player._id.name}>\r\n                  <div className=\"rowPos\">{rank++}.</div>\r\n                  <div className=\"rowImage\">\r\n                    <img\r\n                      src={\r\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\r\n                      }\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"rowName\">\r\n                    {data.length > 0 ? player._id.name : \"\"}\r\n                  </div>\r\n                  <div className=\"rowProfitSuccess\">\r\n                    {data.length > 0 ? player.successPercentage + \" %\" : \"\"}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ul>\r\n          <Bar data={barChartDetails} className=\"mb-3 pb-3\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport teamService from \"../../services/teamService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\n\r\nconst CurrMonthCard = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n\r\n  let chosenMonth = props.match.params.currentMonth;\r\n  const monthNumber = (mon) => {\r\n    return new Date(Date.parse(mon + \" 1, 2012\")).getMonth() + 1;\r\n  };\r\n  const teamId = props.match.params.teamId;\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.monthsData(\r\n        teamId,\r\n        monthNumber(chosenMonth)\r\n      );\r\n      table = table.data;\r\n      const barChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: `Profit By Player`,\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          barChart.labels.push(player._id.name);\r\n          barChart.datasets[0].data.push(player.totalProfit);\r\n        });\r\n\r\n        setbarChartDetails(barChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n\r\n    getTable();\r\n  }, [setData, teamId]);\r\n\r\n  let rank = 2;\r\n\r\n  return (\r\n    <div className=\"container pb-3\">\r\n      <PageHeader titleText={`${chosenMonth} Profit`} />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {data.length === 0 && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {data.length > 0 && hero._id && (\r\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n          <ol className=\"statsList \">\r\n            <li\r\n              className=\"statsHeroPerHour d-flex w-100\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"statsInfo flex-fill\" id=\"perHourHeroSide\">\r\n                <div className=\"pos\">1.</div>\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  {data.length > 0 ? hero._id.name : \"\"}\r\n                </Link>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <div className=\"heroPerHour\">Games Played:</div>\r\n                  <div className=\"heroPerHour \">{hero.numOfGames}</div>\r\n                </div>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <p className=\"heroPerHour m-0\">Avg Profit:</p>\r\n                  <p className=\"heroPerHour m-0\">\r\n                    {\" \"}\r\n                    {data.length > 0 ? hero.avgProfit : \"\"}\r\n                  </p>\r\n                </div>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <p className=\"heroPerHour m-0\">Total Profit:</p>\r\n                  <p className=\"heroPerHour m-0\">\r\n                    {\" \"}\r\n                    {data.length > 0 ? hero.totalProfit : \"\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"heroImagePerHour\">\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  <img\r\n                    src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n              </div>\r\n            </li>\r\n            <li className=\"statsHeaderPerHour d-flex w-100 justify-content-between\">\r\n              <div>Rank</div>\r\n              <div>Image</div>\r\n              <div>Player</div>\r\n              <div>Games Played</div>\r\n              <div>Avg Profit</div>\r\n              <div>Total Profit</div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow d-flex\" key={player._id.name}>\r\n                  <div className=\"rowPos month\">{rank++}.</div>\r\n                  <div className=\"rowImage month\">\r\n                    <img\r\n                      src={\r\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\r\n                      }\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"rowName month p-0\">\r\n                    {data.length > 0 ? player._id.name : \"\"}\r\n                  </div>\r\n                  <div className=\"gamePlayed p-0\">\r\n                    {data.length > 0 ? player.numOfGames : \"\"}\r\n                  </div>\r\n                  <div className=\"gamePlayed p-0\">\r\n                    {data.length > 0 ? player.avgProfit.toFixed(2) : \"\"}\r\n                  </div>\r\n                  <div className=\"rowProfit month\">\r\n                    {data.length > 0 ? player.totalProfit : \"\"}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ol>\r\n          {barChartDetails.datasets && (\r\n            <Bar data={barChartDetails} className=\"mb-3\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrMonthCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nconst ProfitsCard = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [dataChartDetails, setdataChartDetails] = useState({});\r\n\r\n  const teamId = props.match.params.teamId;\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.profits(teamId);\r\n      table = table.data;\r\n\r\n      let aggregatedProfits = await gameService.agg_profits(teamId);\r\n      aggregatedProfits = aggregatedProfits.data;\r\n\r\n      let accu = [];\r\n      const dataChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await aggregatedProfits.forEach((player) => {\r\n          dataChart.labels.push(player._id.name);\r\n          accu.push(player.totalProfit);\r\n        });\r\n        let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\r\n        let percentageSum = [];\r\n        accu.forEach((percent) => {\r\n          percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\r\n        });\r\n        dataChart.datasets[0].data = percentageSum;\r\n        setdataChartDetails(dataChart);\r\n      } catch (error) {\r\n        console.log(error, \"err1\");\r\n      }\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n\r\n      const handleDates = (list, prop) => {\r\n        return list.map((item) => {\r\n          const obj = Object.assign({}, item);\r\n          obj[prop] = new Date(obj[prop]).toLocaleDateString();\r\n          return obj;\r\n        });\r\n      };\r\n      table = handleDates(table, \"createdAt\");\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n\r\n    getTable();\r\n  }, [teamId]);\r\n\r\n  let rank = 2;\r\n  ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n  return (\r\n    <div className=\"container  pb-4\">\r\n      <PageHeader titleText=\"Top 10 Profits\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n        <ul className=\"statsList \">\r\n          <li\r\n            className=\"statsHero d-flex w-100\"\r\n            style={{\r\n              backgroundImage: `url(${\r\n                process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n              })`,\r\n            }}\r\n          >\r\n            <div className=\"statsInfo flex-fill\">\r\n              <div className=\"pos\">1.</div>\r\n              <a href=\"#/\" id=\"heroName\">\r\n                {data.length > 0 ? hero.players.name : \"\"}\r\n              </a>\r\n              <div className=\"heroDate ps-1\">\r\n                {data.length > 0 ? hero.createdAt : \"\"}\r\n              </div>\r\n              <div id=\"amount\" className=\"flex-fill\">\r\n                {data.length > 0 ? hero.players.profit : \"\"}\r\n              </div>\r\n            </div>\r\n            <div className=\"heroImage \">\r\n              <img\r\n                src={data.length > 0 ? `${apiImage}${hero.players.image}` : \"\"}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </li>\r\n          <React.Fragment>\r\n            {data.map((player) => (\r\n              <li\r\n                className=\"statsRow d-flex\"\r\n                key={player.createdAt + player.players.profit}\r\n              >\r\n                <div className=\"rowPosTop\">{rank++}.</div>\r\n                <div className=\"rowImageTop\">\r\n                  <img\r\n                    src={\r\n                      data.length > 0\r\n                        ? `${apiImage}${player.players.image}`\r\n                        : \"\"\r\n                    }\r\n                    alt=\"player list row\"\r\n                  />\r\n                </div>\r\n                <div className=\"rowNameTop\">\r\n                  {data.length > 0 ? player.players.name : \"\"}\r\n                </div>\r\n                <div className=\"rowDate\">\r\n                  {data.length > 0 ? player.createdAt : \"\"}\r\n                </div>\r\n                <div className=\"rowProfitTop\">\r\n                  {data.length > 0 ? player.players.profit : \"\"}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </React.Fragment>\r\n        </ul>\r\n        <h7 className=\"text-white justify-content-center d-flex\">\r\n          Players Profit In % From Top 10 Profits\r\n        </h7>\r\n        {dataChartDetails.hasOwnProperty(\"labels\") ? (\r\n          <Doughnut data={dataChartDetails} className=\"mb-3 pb-3\" />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfitsCard;\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport * as Yup from \"yup\";\r\nimport http from \"../../services/httpService\";\r\nimport { apiUrl } from \"../../config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  nickName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  image: \"\",\r\n};\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string().required(\"Required\"),\r\n  lastName: Yup.string().required(\"Required\"),\r\n  nickName: Yup.string().required(\"Required\"),\r\n  image: Yup.string(),\r\n  email: Yup.string().email(\"Invaild email format\").required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(6, \"Password must be min 6 chars\")\r\n    .required(\"Required\"),\r\n});\r\n\r\n\r\nconst SignUp = (props) => {\r\n  const handleLogin = async googleData => {\r\n    console.log(googleData);\r\n    setFields({...fields,\r\n    firstName: googleData.profileObj.givenName,\r\n    lastName: googleData.profileObj.familyName,\r\n    nickName: \"\",\r\n    email: googleData.profileObj.email,\r\n    password: Date.now(),\r\n    fakeId: Date.now()});\r\n    setUseGoogle(true);\r\n    setToken(googleData.tokenId)\r\n  }\r\n\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    onSubmitProps.setSubmitting(false);\r\n    let data = new FormData();\r\n    data.append(\"firstName\", values.firstName);\r\n    data.append(\"lastName\", values.lastName);\r\n    data.append(\"nickName\", values.nickName);\r\n    data.append(\"email\", values.email);\r\n    data.append(\"password\", values.password);\r\n    if (values.image) {\r\n      data.append(\"image\", values.image);\r\n    }\r\n\r\n    try {\r\n      if (!values.image) delete values.image;\r\n      await http.post(`${apiUrl}/users`, data);\r\n      useGoogle ? \r\n        await userService.loginGoogle(values.email,token) :\r\n        await userService.login(values.email, values.password) \r\n      window.location = \"/\";\r\n      toast(\"A new acoount is opened\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        setErrors({ email: \"This email is taken\" });\r\n        console.error(ex);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [token,setToken] = useState(\"\");\r\n  const [errors, setErrors] = useState({ email: \"\", image: \"\" });\r\n  const [useGoogle, setUseGoogle] = useState(false);\r\n  const [fields, setFields] = useState(initialValues);\r\n  useEffect(() => {console.log(fields)})\r\n  if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Sign Up\" />\r\n      <GoogleLogin\r\n        clientId='310842465793-hdu8fm8luvho3qds0ce4chg9c3696d4d.apps.googleusercontent.com'\r\n        onSuccess={handleLogin}\r\n        buttonText=\"Sign UP with Google\"\r\n      />\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={fields}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        validateOnMount\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <div className=\"row mt-4\">\r\n              <div className=\"col-10 col-lg-4\">\r\n                <Form>\r\n                  <div className=\"form-control d-flex flex-column bg-primary\">\r\n                    <label htmlFor=\"First Name\">First Name</label>\r\n                    <Field type=\"text\" id=\"firstName\" name=\"firstName\" />\r\n                    <ErrorMessage\r\n                      name=\"firstName\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\r\n                    <label htmlFor=\"Last Name\">Last Name</label>\r\n                    <Field type=\"text\" id=\"lastName\" name=\"lastName\" />\r\n                    <ErrorMessage\r\n                      name=\"lastName\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\r\n                    <label htmlFor=\"Nick Name\">Nick Name</label>\r\n                    <Field type=\"text\" id=\"nickName\" name=\"nickName\" />\r\n                    <ErrorMessage\r\n                      name=\"nickName\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <Field type=\"email\" id=\"email\" name=\"email\" />\r\n                    <span className=\"error\">{errors.email}</span>\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      component=\"div\"\r\n                      className=\"error\"\r\n                    />\r\n                  </div>\r\n                  {(useGoogle) ? <div></div> :\r\n                    <div className=\"form-control d-flex flex-column    bg-primary mb-3\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <Field type=\"password\" id=\"password\" name=\"password\" />\r\n                      <ErrorMessage\r\n                        name=\"password\"\r\n                        component=\"div\"\r\n                        className=\"error\"\r\n                      />\r\n                    </div>\r\n                  }\r\n                  <div className=\"form-control d-flex flex-column bg-primary mb-3\">\r\n                    <label htmlFor=\"image\">Image</label>\r\n                    <input\r\n                      className=\"row mb-4 inputFile\"\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      onChange={(event) => {\r\n                        formik.setFieldValue(\"image\", event.target.files[0]);\r\n                      }}\r\n                    ></input>\r\n                    <span className=\"error\">{errors.image}</span>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={!formik.isValid || formik.isSubmitting}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst H2hGame = ({ gameId }) => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [game, setGame] = useState({});\r\n\r\n  useEffect(() => {\r\n    const h2h = async () => {\r\n      try {\r\n        let playersInGame = await h2hService.getByGameId(gameId);\r\n        playersInGame = await playersInGame.data[0].players;\r\n        setPlayers(playersInGame);\r\n      } catch (error) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    h2h();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const game = async () => {\r\n      try {\r\n        let gameForH2h = await gameService.gameById(gameId);\r\n        setGame(gameForH2h.data);\r\n      } catch (error) {\r\n        console.log(\"Error\");\r\n      }\r\n    };\r\n    game();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pb-1\">\r\n      <PageHeader titleText=\"Head 2 Head\" />\r\n      <div className=\"col-lg-8 col-12\" id=\"cardTop\">\r\n        <ol className=\"statsList \">\r\n          <li\r\n            id=\"gameLi\"\r\n            className=\"statsHero d-flex\"\r\n            style={{\r\n              backgroundImage: `url(${\r\n                process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n              })`,\r\n            }}\r\n          >\r\n            <div className=\"gameH2h d-flex w-100 justify-content-evenly\">\r\n              <div className=\"player1\">Player 1</div>\r\n              <div className=\"player2\">Player 2</div>\r\n            </div>\r\n          </li>\r\n          {players.length > 0 &&\r\n            players.map((p) => (\r\n              <div\r\n                className=\"statsRow w-100 justify-content-evenly\"\r\n                key={p[0].id}\r\n              >\r\n                <div className=\"rowPlayer newGame\">\r\n                  <img src={`${apiImage}${p[0].image}`} alt=\"\" />\r\n                  <p class=\"playerNameOnGame m-0 text-primary\">{p[0].name}</p>\r\n                </div>\r\n                <p className=\"d-flex align-items-center\">\r\n                  <strong>Vs</strong>\r\n                </p>\r\n                <div className=\"rowPlayer newGame\">\r\n                  <img src={`${apiImage}${p[1].image}`} alt=\"\" />\r\n                  <p class=\"playerNameOnGame m-0 text-primary\">{p[1].name}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hGame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport userService from \"../../services/userService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport H2hGame from \"../h2h/h2hGame\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\nimport CashingDetails from \"./cashingDetails\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NewGame = (props) => {\r\n  const [data, setData] = useState({});\r\n  const [id, setId] = useState(\"\");\r\n  const [me, setMe] = useState({});\r\n  const [manager, setManager] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const players = async () => {\r\n      const getGameManager = await userService.getUserDetails();\r\n      me.id = getGameManager.data._id;\r\n      me.name = getGameManager.data.nickName;\r\n      setMe(me);\r\n\r\n      try {\r\n        let playersInGame = await gameService.gameById(\r\n          props.match.params.gameId\r\n        );\r\n        setData(playersInGame.data);\r\n        setId(playersInGame.data._id);\r\n      } catch (e) {\r\n        console.log(e, \"EE\");\r\n      }\r\n    };\r\n\r\n    players();\r\n  }, [props.match.params.gameId]);\r\n\r\n  useEffect(() => {\r\n    const manager = data.game_manager;\r\n    setManager(manager);\r\n  }, [data.game_manager]);\r\n\r\n  const addCashing = (playerId) => {\r\n    Swal.fire({\r\n      title: \"sure you want to cash in?\",\r\n      text: \"\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let game = { ...data };\r\n        game.gameId = props.match.params.gameId;\r\n        if (game.gameId) {\r\n          game.isOpen = true;\r\n          let player = data.players.find((e) => playerId === e.id);\r\n          player.cashing += 50;\r\n          player.numOfCashing += 1;\r\n          delete game._id;\r\n          delete game.__v;\r\n          let cashingDetails = {\r\n            playerId: player.id,\r\n            playerName: player.name,\r\n            playerCashing: 50,\r\n            time: new Date(),\r\n          };\r\n          if (game.cashing_details) {\r\n            game.cashing_details.push(cashingDetails);\r\n          } else {\r\n            game.cashing_details = [];\r\n            game.cashing_details.push(cashingDetails);\r\n          }\r\n          setData(game);\r\n\r\n          gameService.updateGame(game.gameId, game);\r\n          const chips = new Audio(process.env.PUBLIC_URL + `sounds/chips.mp3`);\r\n          chips.play();\r\n          toast.success(`💸 💸Added 50 to ${player.name}`, {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const undoCashing = (playerId) => {\r\n    let player = data.players.find((e) => playerId === e.id);\r\n    if (player.cashing > 0) {\r\n      player.cashing -= 50;\r\n      player.numOfCashing -= 1;\r\n      let game = { ...data };\r\n      game.gameId = props.match.params.gameId;\r\n      delete game._id;\r\n      delete game.__v;\r\n      //remove the player's cashing from cashing details\r\n      const indexOfLastPlayerCashing = game.cashing_details\r\n        .map((el) => el.playerId)\r\n        .lastIndexOf(playerId);\r\n      game.cashing_details.splice(indexOfLastPlayerCashing, 1);\r\n\r\n      setData(game);\r\n      const cancel = new Audio(process.env.PUBLIC_URL + `sounds/cancel.mp3`);\r\n      cancel.play();\r\n      gameService.updateGame(game.gameId, game);\r\n    }\r\n  };\r\n\r\n  const handleChange = (playerId, e) => {\r\n    let play = { ...data };\r\n    let player = play.players.find((e) => playerId === e.id);\r\n    player.cashInHand = e.target.value;\r\n    player.profit = player.cashInHand - player.cashing;\r\n    let game = play;\r\n    setData(game);\r\n  };\r\n\r\n  const updateGame = () => {\r\n    Swal.fire({\r\n      title: \"sure you want to end game?\",\r\n      text: \"you won't be able to cancel\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let game = { ...data };\r\n        game.gameId = props.match.params.gameId;\r\n        delete game._id;\r\n        game.isOpen = false;\r\n        game.players.sort((a, b) => b.profit - a.profit);\r\n        let gameRank = 1;\r\n        game.players.map((p) => (p.gameRank = gameRank++));\r\n        setData(game);\r\n        gameService.updateGame(game.gameId, game).then((res) => {\r\n          h2hService.updateH2h(game.gameId);\r\n          setData(res.data);\r\n        });\r\n        props.history.replace(`/last-game/${data.team_id}`);\r\n      }\r\n    });\r\n  };\r\n\r\n  const takeControl = async () => {\r\n    Swal.fire({\r\n      title: \"Take control of game?\",\r\n      text: \"\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        setManager(me);\r\n        if (manager)\r\n          toast.success(`🤟 ${me.name} is now manager`, {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n      }\r\n    });\r\n    await gameService.updateManager(id, me);\r\n  };\r\n\r\n  if (!id) {\r\n    return <div className=\"text-primary\">No Games</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Game No.\" />\r\n        <p className=\"text-danger\">{id}</p>\r\n        <p className=\"text-primary\">\r\n          Started At:{\" \"}\r\n          {`${new Date(data.createdAt).toLocaleDateString(\"en-GB\")}\r\n        ${new Date(data.createdAt).toLocaleString(\"en-US\", {\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n          hour12: false,\r\n        })}`}\r\n        </p>\r\n        <p className=\"m-0 mb-1 p-0 text-primary\">\r\n          Game Manager:<span>{manager ? manager.name : \"\"}</span>\r\n        </p>\r\n        <div\r\n          className=\"alert alert-info fade show w-75 py-1 alert-dismissible\"\r\n          role=\"alert\"\r\n        >\r\n          <h6 class=\"alert-heading\">New Update 18/5/22:</h6>\r\n          new feature:add players to the game after he game started.\r\n          <br></br>Head 2 Head will also update automatically.\r\n        </div>\r\n        {data.length < 1 && (\r\n          <div className=\"spinner pt-2\">\r\n            <SpinnerInfinity\r\n              size={130}\r\n              thickness={151}\r\n              speed={70}\r\n              color=\"rgba(252, 252, 252, 1)\"\r\n              secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n              enabled={data.length === 0 ? true : false}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {data.players && manager.id === me.id && (\r\n          <div className=\"col-lg-8 col-12\" id=\"newGameTop\">\r\n            <Link\r\n              className=\"button-72 mb-2 px-\"\r\n              to={`/new-game/${data.team_id}`}\r\n            >\r\n              Add/Remove Players\r\n            </Link>\r\n            <ol className=\"statsList\">\r\n              <li\r\n                id=\"gameLi\"\r\n                className=\"statsHero d-flex\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                  })`,\r\n                }}\r\n              >\r\n                <div className=\"gameHeaders d-flex justify-content-evenly\">\r\n                  <div className=\"P1\">Player</div>\r\n                  <div className=\"add1\">Add 50</div>\r\n                  <div className=\"Cashing1\">Cashing</div>\r\n                  <div className=\"Hand1\">Cash In Hand</div>\r\n                  <div className=\"Profit1\">Profit</div>\r\n                  <div className=\"\">Cancel </div>\r\n                </div>\r\n              </li>\r\n              <React.Fragment>\r\n                {data.players.map((player) => (\r\n                  <li\r\n                    className=\"statsRows w-100 d-flex justify-content-evenly\"\r\n                    key={player.id}\r\n                  >\r\n                    <div className=\"rowPlayer newGame\">\r\n                      <img src={`${apiImage}${player.image}`} alt=\"player\" />\r\n                      <p class=\"playerNameOnGame m-0 text-primary\">\r\n                        {player.name}\r\n                      </p>\r\n                    </div>\r\n                    <i\r\n                      className=\"fas fa-money-bill-wave\"\r\n                      onClick={() => addCashing(player.id)}\r\n                    >\r\n                      Add 50$\r\n                    </i>\r\n\r\n                    <div className=\"rowCash\">{player.cashing}</div>\r\n                    <div className=\"rowCashInHand\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"cashInHand\"\r\n                        onChange={(e) => handleChange(player.id, e)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"playerProfit \">{player.profit}</div>\r\n                    <i\r\n                      className=\"fas fa-minus-circle\"\r\n                      onClick={() => undoCashing(player.id)}\r\n                    >\r\n                      Cancel\r\n                    </i>\r\n                  </li>\r\n                ))}\r\n              </React.Fragment>\r\n              <li className=\"statsRows w-100 d-flex justify-content-evenly\">\r\n                <div className=\"rowPlayer text-primary\"></div>\r\n                <div className=\"fas fa-money-bill-wave text-primary\">Total</div>\r\n                <div className=\"rowCash text-primary\">\r\n                  {data.players.reduce((a, b) => {\r\n                    return a + b.cashing;\r\n                  }, 0)}\r\n                </div>\r\n                <div className=\"rowCashInHand\"></div>\r\n                <div className=\"playerProfit text-primary\">\r\n                  {data.players.reduce((a, b) => {\r\n                    return a + b.profit;\r\n                  }, 0)}\r\n                </div>\r\n                <div className=\"fas fa-minus-circle text-white\">Cancel</div>\r\n              </li>\r\n              <div className=\"buttonsGame d-flex justify-content-between\">\r\n                <div\r\n                  className=\"btn btn-primary update m-2\"\r\n                  onClick={() => {\r\n                    updateGame();\r\n                  }}\r\n                >\r\n                  Update Game\r\n                </div>\r\n                <div className=\"btn btn-danger update m-2\">Reset Game</div>\r\n              </div>\r\n            </ol>\r\n          </div>\r\n        )}\r\n        {data.players && manager.id !== me.id && (\r\n          <button\r\n            className=\"button-72\"\r\n            onClick={() => {\r\n              takeControl();\r\n            }}\r\n          >\r\n            Take control of game\r\n          </button>\r\n        )}\r\n\r\n        <H2hGame gameId={data._id} className=\"mb-2\" />\r\n        <CashingDetails gameId={id} updated={data} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NewGame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../services/gameService\";\r\nimport PageHeader from \"../components/common/pageHeader\";\r\nimport H2hGameEnd from \"./h2h/h2hGameEnd\";\r\nimport { apiImage } from \"../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GameEnd = (props) => {\r\n  const teamId = props.match.params.teamId;\r\n  const [data, setData] = useState([]);\r\n  const [lastGame, setLastGame] = useState([]);\r\n  useEffect(() => {\r\n    const getLastGame = async () => {\r\n      let game = await gameService.lastGame(props.match.params.teamId);\r\n      game = game.data[0];\r\n      game.players.sort((a, b) => b.profit - a.profit);\r\n      setData(game.players);\r\n      setLastGame(game);\r\n    };\r\n\r\n    getLastGame();\r\n  }, [setData, props.match.params.teamId]);\r\n  let Rank = 1;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Last Game\" />\r\n\r\n      {data.length === 0 && lastGame._id && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {data.length > 0 && (\r\n        <div className=\"col-lg-4 col-10\" id=\"card-top\">\r\n          <ol className=\"statsList\">\r\n            <li\r\n              id=\"lastGameHero\"\r\n              className=\"statsHero d-flex flex-column\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <p>\r\n                {new Date(lastGame.createdAt).toLocaleDateString(\"en-GB\") +\r\n                  \"  \" +\r\n                  new Date(lastGame.createdAt).toLocaleString(\"en-US\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                  }) +\r\n                  \" - \" +\r\n                  new Date(lastGame.updatedAt).toLocaleString(\"en-US\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                  })}\r\n              </p>\r\n              <div\r\n                className=\"stats d-flex w-100 justify-content-between\"\r\n                id=\"lGame\"\r\n              >\r\n                <p>Player</p>\r\n                <p>Name</p>\r\n                <p>Cashing</p>\r\n                <p>Profit</p>\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow\" key={player.id}>\r\n                  <div className=\"rowPosLast\">{Rank++}.</div>\r\n                  <div className=\"rowImage\">\r\n                    <img\r\n                      src={data.length > 0 ? `${apiImage}${player.image}` : \"\"}\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"rowName\" id=\"lGameName\">\r\n                    {data.length > 1 ? player.name : \"\"}\r\n                  </div>\r\n                  <div className=\"rowCashing\">\r\n                    {data.length > 1 ? player.cashing : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      player.profit > 0\r\n                        ? \"rowProfit text-success\"\r\n                        : \"rowProfit text-danger\"\r\n                    }\r\n                  >\r\n                    {player.profit}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ol>\r\n          <H2hGameEnd gameId={lastGame._id} header=\"Head 2 Head\" />\r\n          <Link className=\"btn btn-primary mb-3\" to={`/main-table/${teamId}`}>\r\n            Team Tables & Statistics\r\n            <i className=\"ps-2 fas fa-angle-double-right\"></i>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameEnd;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport _ from \"lodash\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst H2hGameCard = ({ team }) => {\r\n  const [games, setGames] = useState();\r\n  const [gamesData, setGamesData] = useState();\r\n  const [perPage, setPerPage] = useState(3);\r\n  const [page, setPage] = useState(0);\r\n  const [pages, setPages] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const lastH2h = async () => {\r\n      try {\r\n        let aGames = await h2hService.teamAllGames(team);\r\n        setGamesData(aGames.data);\r\n        let allGames = aGames.data.map((d) => _.flatten(d.players));\r\n        setGames(allGames);\r\n        setLoading(true);\r\n        setPages(Math.floor(games.length / perPage));\r\n      } catch (error) {\r\n        // console.log(\"error1\");\r\n      }\r\n    };\r\n    lastH2h();\r\n  }, [team, perPage, games ? games.length : \"\"]);\r\n\r\n  let created = 0;\r\n  let items = [];\r\n  items = gamesData\r\n    ? gamesData.slice(page * perPage, (page + 1) * perPage)\r\n    : \"\";\r\n\r\n  const handlePageClick = (event) => {\r\n    let pageC = event.selected;\r\n    setPage(pageC);\r\n  };\r\n  return (\r\n    <div>\r\n      {!games && (\r\n        <SpinnerInfinity\r\n          size={130}\r\n          thickness={151}\r\n          speed={70}\r\n          color=\"rgba(252, 252, 252, 1)\"\r\n          secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n          enabled={true}\r\n        />\r\n      )}\r\n      <div className=\"contain\">\r\n        <PageHeader titleText=\"All Games\" />\r\n        <div className=\"row\">\r\n          {loading && (\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              pageCount={items.length % 3 === 0 ? pages + 1 : pages}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\r\n                \"pagination text-white justify-content-center\"\r\n              }\r\n              activeClassName={\"active\"}\r\n              pageClassName={\"page-item\"}\r\n              pageLinkClassName={\"page-link\"}\r\n              previousClassName={\"page-item\"}\r\n              previousLinkClassName={\"page-link\"}\r\n              nextClassName={\"page-item\"}\r\n              nextLinkClassName={\"page-link\"}\r\n              marginPagesDisplayed={\"3\"}\r\n              // renderOnZeroPageCount={null}\r\n            />\r\n          )}\r\n          {gamesData &&\r\n            items.map((g) => (\r\n              <div className=\"col-12 col-lg-4 pb-4\" id=\"card-top\">\r\n                <ol className=\"statsList\">\r\n                  <li\r\n                    id=\"lastGameHero\"\r\n                    className=\"statsHero d-flex flex-column\"\r\n                    style={{\r\n                      backgroundImage: `url(${\r\n                        process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                      })`,\r\n                    }}\r\n                  >\r\n                    <span>\r\n                      {new Date(items[created++].createdAt).toLocaleDateString(\r\n                        \"en-GB\"\r\n                      )}\r\n                    </span>\r\n                    <div className=\"stats d-flex w-100 \" id=\"lGameP2P\">\r\n                      <p>Player 1</p>\r\n                      <p>profit</p>\r\n                      <p>points</p>\r\n                      <p>points</p>\r\n                      <p>profit</p>\r\n                      <p>Player 2</p>\r\n                    </div>\r\n                  </li>\r\n                  {g.players.map((game) => {\r\n                    return (\r\n                      <li\r\n                        className=\"statsRow w-100\"\r\n                        key={game.name + Date.now()}\r\n                      >\r\n                        <div className=\"rowImage\">\r\n                          <img\r\n                            src={`${apiImage}${game[0].image}`}\r\n                            alt=\"player list row\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"rowProfit \">{game[0].profit}</div>\r\n                        <div className=\"rowProfit\">{game[0].points}</div>\r\n                        <span className=\"mt-3 pt-1\">VS</span>\r\n                        <div className=\"rowProfit\">{game[1].points}</div>\r\n                        <div className=\"rowProfit \">{game[1].profit}</div>\r\n                        <div className=\"rowImage d-flex justify-content-center\">\r\n                          <img\r\n                            src={`${apiImage}${game[1].image}`}\r\n                            alt=\"player list row\"\r\n                          />\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ol>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hGameCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport H2hGameCard from \"./h2hGameCard\";\r\n\r\nconst H2hTable = (props) => {\r\n  const [data, setData] = useState();\r\n  const [hero, setHero] = useState();\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n\r\n  const teamId = props.match.params.teamId;\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await h2hService.getPointsByTeam(teamId);\r\n      table = table.data.filter((player) => player._id.name !== \"Nispach\");\r\n\r\n      setData(table);\r\n      console.log(table);\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n    };\r\n\r\n    getTable();\r\n  }, [setData, teamId]);\r\n\r\n  let rank = 2;\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"H2H Table\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {!data && (\r\n        <SpinnerInfinity\r\n          size={130}\r\n          thickness={151}\r\n          speed={70}\r\n          color=\"rgba(252, 252, 252, 1)\"\r\n          secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n          enabled={!data ? true : false}\r\n          // enabled={true}\r\n        />\r\n      )}\r\n      {data && (\r\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n          <ul className=\"statsList\">\r\n            <li\r\n              className=\"statsHeroPerHour d-flex w-100 \"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"h2hInfo d-flex w-100 justify-content-between\">\r\n                <div className=\"statsInfo\">\r\n                  <div className=\"pos\">1.</div>\r\n                  <a href=\"#/\" id=\"heroName\">\r\n                    {hero ? hero._id.name : \"\"}\r\n                  </a>\r\n                  <div className=\"heroDate ps-1\">\r\n                    Average Points:\r\n                    <span className=\"ms-2 avgP\">\r\n                      {hero ? hero.avgPoints.toFixed(2) : \"\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"heroDate ps-1\">\r\n                    Games Played:\r\n                    <span className=\"ms-2 avgP\">\r\n                      {hero ? hero.numOfGames : \"\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"heroDate ps-1\">\r\n                    Winning:\r\n                    <span className=\"ms-2 avgP\">\r\n                      {hero ? hero.successPercentage : \"\"}%\r\n                    </span>\r\n                  </div>\r\n                  <div id=\"amount\" className=\"\">\r\n                    Total Points:\r\n                    <span className=\"ms-2\">{hero ? hero.totalPoints : \"\"}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"heroImage \">\r\n                  <img\r\n                    src={hero ? `${apiImage}${hero._id.image}` : \"\"}\r\n                    alt=\"hero\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li id=\"h2hLi\">\r\n              <div className=\"h2hDetailsRow  d-flex \">\r\n                <p>Rank</p>\r\n                <p>Image</p>\r\n                <p>Player</p>\r\n                <p>Avg Points</p>\r\n                <p>Games played</p>\r\n                <p>Winning</p>\r\n                <p>Points</p>\r\n              </div>\r\n            </li>\r\n            <React.Fragment>\r\n              {data.map((player) => (\r\n                <li className=\"statsRow d-flex\" key={player._id.name}>\r\n                  <div className=\"rowPosTop\" id=\"rowPosTop\">\r\n                    {rank++}.\r\n                  </div>\r\n                  <div className=\"rowImageH2h\">\r\n                    <img\r\n                      src={`${apiImage}${player._id.image}`}\r\n                      alt=\"player list row\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"rowNameH2h\">{player._id.name}</div>\r\n                  <div className=\"rowH2hAvg\">{player.avgPoints.toFixed(2)}</div>\r\n                  <div className=\"rowH2hG\">{player.numOfGames}</div>\r\n                  <div className=\"rowSuccessTop\">\r\n                    {player.successPercentage}%\r\n                  </div>\r\n                  <div className=\"rowPointsTop\">{player.totalPoints}</div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <H2hGameCard team={teamId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default H2hTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport * as Yup from \"yup\";\r\n// import http from \"../../services/httpService\";\r\n// import { apiUrl } from \"../../config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../../services/userService\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport teamService from \"../../services/teamService\";\r\n\r\nconst initialValues = {\r\n  teamName: \"\",\r\n  teamImage: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  teamName: Yup.string()\r\n    .min(2, \"name must be min 2 chars\")\r\n    .required(\"required\"),\r\n  teamImage: Yup.string(),\r\n});\r\nconst TeamSignUp = (props) => {\r\n  const [errors, setErrors] = useState({ image: \"\" });\r\n  const [teamDetails, setTeamDetails] = useState({\r\n    name: \"\",\r\n    players: [],\r\n    teamImage: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const player = async () => {\r\n      let user = await userService.getUserDetails();\r\n      delete user.data.password;\r\n      let details = { ...teamDetails };\r\n      details.players.push(user.data);\r\n      setTeamDetails(details);\r\n    };\r\n    player();\r\n  }, []);\r\n  const onSubmit = async (values, onSubmitProps) => {\r\n    onSubmitProps.setSubmitting(false);\r\n\r\n    let data = new FormData();\r\n    data.append(\"name\", values.teamName);\r\n    if (values.image) {\r\n      data.append(\"image\", values.image);\r\n    }\r\n    data.players = teamDetails.players;\r\n    await teamService.createTeam(data);\r\n    \r\n    toast(\"A new Team is opened\");\r\n    props.history.replace(\"/my-teams\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader titleText=\"Team Registration Form\" />\r\n      <p className=\"start\">Start a new team</p>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6 col-12\">\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            validateOnMount\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <div className=\"row mt-4\">\r\n                  <div className=\"col-10 col-lg-4\">\r\n                    <Form>\r\n                      <div className=\"form-control d-flex flex-column bg-primary\">\r\n                        <label htmlFor=\"Team Name\">Team Name</label>\r\n                        <Field type=\"text\" id=\"teamName\" name=\"teamName\" />\r\n                        <ErrorMessage\r\n                          name=\"teamName\"\r\n                          component=\"div\"\r\n                          className=\"error\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-control d-flex flex-column bg-primary mb-3\">\r\n                        <label htmlFor=\"image\">Image</label>\r\n                        <input\r\n                          className=\"row mb-4 inputFile\"\r\n                          type=\"file\"\r\n                          name=\"image\"\r\n                          onChange={(event) => {\r\n                            formik.setFieldValue(\r\n                              \"image\",\r\n                              event.target.files[0]\r\n                            );\r\n                          }}\r\n                        ></input>\r\n                        <span className=\"error\">{errors.image}</span>\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={!formik.isValid || formik.isSubmitting}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                      <Link\r\n                        className=\"btn btn-info ms-3\"\r\n                        type=\"button\"\r\n                        to=\"/my-teams\"\r\n                      >\r\n                        Do it later\r\n                      </Link>\r\n                    </Form>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamSignUp;\r\n","import React from 'react';\r\nimport PageHeader from \"../common/pageHeader\"\r\n\r\nconst EditGames = (props) => {\r\n   let  iframeUrl=`https://nadav.retool.com/embedded/public/b9a1f778-e9c9-44f9-9309-37862ad3a349#teamId=${props.match.params.teamId}`;\r\n   \r\n    return ( \r\n        <div className=\"container pb-3\">\r\n            <PageHeader titleText=\"Edit Games\"/>\r\n            <p className='text-white'>In this section you can edit, update and delete games and games details.</p>\r\n            <ul className='text-white'>\r\n                <li>Only team managers can edit games.</li>\r\n                <li>when you edit or delete a game, this will not effects details on the relevant Head to Head game (who \r\n                    will not be updated automatically).\r\n                    This will be fixed soon.\r\n                </li>\r\n            </ul>\r\n            <iframe  title=\"edit game\"src= {iframeUrl} width=\"100%\" height=\"800px\"></iframe>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default EditGames;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport userService from \"../../services/userService\";\r\nimport gameService from \"../../services/gameService\";\r\nimport h2hService from \"../../services/h2hService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { SpinnerCircular } from \"spinners-react\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport _ from \"lodash\";\r\nimport TotalPersonal from \"./totalPersonal\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst PlayerStats = (props) => {\r\n  const [me, setMe] = useState({});\r\n  const [stats, setStats] = useState({});\r\n  const [month, setMonth] = useState([]);\r\n  const [points, setPoints] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [chartDates, setChartDates] = useState([]);\r\n  const [chartCashing, setChartCashing] = useState([]);\r\n  let currentMonth = new Date();\r\n  let currentMonthNumber = currentMonth.getMonth() + 1;\r\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      if (me.teams) {\r\n        let table = await gameService.monthsData(me.teams[0]);\r\n        table = table.data;\r\n        let currentMonth = [...table];\r\n        currentMonth = currentMonth.filter(\r\n          (month) => month._id.monthPlayed === currentMonthNumber\r\n        );\r\n        currentMonth = currentMonth.find((e) => e._id.player_id === me._id);\r\n        setMonth(currentMonth);\r\n        let detailed = await gameService.personalGames(me._id);\r\n        setDetails(detailed.data);\r\n\r\n        let myDetailed = await gameService.personalGames(me._id);\r\n\r\n        let chartDetails = [];\r\n        let chartDates = [];\r\n        let chartCash = [];\r\n        try {\r\n          await myDetailed.data.forEach((e) =>\r\n            chartDetails.push(e.players.profit)\r\n          );\r\n          setChartData(chartDetails);\r\n\r\n          await myDetailed.data.forEach((e) =>\r\n            chartCash.push(e.players.cashing)\r\n          );\r\n          setChartCashing(chartCash);\r\n\r\n          await myDetailed.data.forEach((e) =>\r\n            chartDates.push(\r\n              new Date(e.createdAt).toLocaleDateString(\"en-GB\").substr(0, 5)\r\n            )\r\n          );\r\n          setChartDates(chartDates);\r\n        } catch {\r\n          console.log(\"errr\");\r\n        }\r\n      }\r\n    };\r\n\r\n    getTable();\r\n  }, [setMonth, currentMonthNumber, me.teams, me._id]);\r\n\r\n  useEffect(() => {\r\n    const getMydata = async () => {\r\n      let myData = await userService.getPlayerDetails(props.match.params.id);\r\n      delete myData.data.password;\r\n      setMe(myData.data);\r\n      let myStats = await gameService.personal(myData.data._id);\r\n      setStats(myStats.data[0]);\r\n    };\r\n    getMydata();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const points = async () => {\r\n      if (me._id) {\r\n        let myPoints = await h2hService.getPointsByPlayer(me._id);\r\n        setPoints(myPoints.data[0]);\r\n      }\r\n    };\r\n    points();\r\n  }, [me._id]);\r\n\r\n  const data = {\r\n    labels: chartDates,\r\n    datasets: [\r\n      {\r\n        label: \"Profit\",\r\n        data: chartData,\r\n        fill: false,\r\n        backgroundColor: \"#6c14b4\",\r\n        borderColor: \"#6c14b4\",\r\n      },\r\n      {\r\n        label: \"Cashing\",\r\n        data: chartCashing,\r\n        fill: false,\r\n        backgroundColor: \"#2752ea\",\r\n        borderColor: \"#2752ea\",\r\n      },\r\n    ],\r\n  };\r\n  let delayed;\r\n  const options = {\r\n    options: {\r\n      animation: {\r\n        onComplete: () => {\r\n          delayed = true;\r\n        },\r\n        delay: (context) => {\r\n          let delay = 0;\r\n          if (\r\n            context.type === \"data\" &&\r\n            context.mode === \"default\" &&\r\n            !delayed\r\n          ) {\r\n            delay = context.dataIndex * 400 + context.datasetIndex * 200;\r\n          }\r\n          return delay;\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          type: \"linear\",\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"container playerStats pb-4\">\r\n      <PageHeader titleText=\"Player Statistics\" />\r\n      {_.isEmpty(stats) && (\r\n        <div className=\"spinner\">\r\n          <SpinnerCircular\r\n            size={130}\r\n            thickness={151}\r\n            speed={81}\r\n            color=\"rgba(108, 20, 180, 1)\"\r\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\r\n            // enabled={true}\r\n            enabled={_.isEmpty(stats) ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {!_.isEmpty(stats) && (\r\n        <div className=\"\">\r\n          <div className=\"playerInfo bg-white col-11 col-lg-4\">\r\n            <span className=\"text-primary ms-3\">\r\n              {new Date().toLocaleDateString(\"en-GB\")}\r\n            </span>\r\n            <div\r\n              className=\"playerBg d-flex justify-content-around\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"pDetails\">\r\n                <p>\r\n                  {me.firstName} {me.lastName}\r\n                </p>\r\n                <p className=\"text-white\">{me.nickName}</p>\r\n              </div>\r\n              <div className=\"pImage\">\r\n                <img src={`${apiImage}${me.image}`} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStats d-flex justify-content-between mt-3\">\r\n              <div className=\"personalStatP\">\r\n                <p>Total Profit</p>\r\n                <p>{stats.totalProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Profit</p>\r\n                <p>{stats.avgProfit ? stats.avgProfit.toFixed(2) : 0}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Total Games</p>\r\n                <p>{stats.numOfGames}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Games W/ Profit</p>\r\n                <p>{stats.gamesWithProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Success %</p>\r\n                <p>{stats.successPercentage}%</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStatsRow2 d-flex justify-content-between\">\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Cashing</p>\r\n                <p>{stats.avgCashing.toFixed(2)}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Max Profit</p>\r\n                <p>{stats.maxProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Max Loss</p>\r\n                <p>{stats.minProfit}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>{currentMonth}-Total Profit</p>\r\n                <p>{month ? month.totalProfit : \"No games this month\"}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>H2H Points</p>\r\n                <p>{points.totalPoints}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailedStats d-flex justify-content-between\">\r\n              <div className=\"personalStatP\">\r\n                <p>Avg Game Rank</p>\r\n                <p>{stats.avgGameRank ? stats.avgGameRank.toFixed(2) : 0}</p>\r\n              </div>\r\n              <div className=\"personalStatP\">\r\n                <p>Last Game</p>\r\n                <p>{new Date(stats.lastGame).toLocaleDateString(\"en-GB\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"header\">\r\n            <h1 className=\"title  mt-2\">Personal Chart</h1>\r\n          </div>\r\n          <div className=\"col-lg-4 col-11\">\r\n            <Line data={data} options={options} />\r\n          </div>\r\n          <TotalPersonal details={details} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerStats;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService, { statsPerHour } from \"../../services/gameService\";\r\nimport teamService from \"../../services/teamService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport { SpinnerInfinity } from \"spinners-react\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StatsPerHourCard = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [headerTitle, setHeaderTitle] = useState(\"\");\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [dataChartDetails, setdataChartDetails] = useState({});\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n  const [statsHour, setStatsHour] = useState([]);\r\n  const teamId = props.match.params.teamId;\r\n  const cardName = props.match.params.cardName;\r\n\r\n  useEffect(() => {\r\n    const getStats = async () => {\r\n      let table = await gameService.statsPerHour(teamId);\r\n      table = table.data;\r\n      setStatsHour(table);\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n      console.log(\"s\", hero);\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n      // console.log(teamImg);\r\n      // console.log('1',table);\r\n    };\r\n\r\n    getStats();\r\n  }, [teamId]);\r\n\r\n  // useEffect(() => {\r\n  //   const getTable = async () => {\r\n  //     let table = await gameService.cardsData(teamId, cardName);\r\n  //     table = table.data;\r\n\r\n  //     let accu = [];\r\n  //     const barChart = {\r\n  //       labels: [],\r\n  //       datasets: [\r\n  //         {\r\n  //           label: `${headerTitle} By Player`,\r\n  //           data: [],\r\n  //           backgroundColor: [\r\n  //             \"rgba(255, 99, 132, 0.5)\",\r\n  //             \"rgba(54, 162, 235, 0.5)\",\r\n  //             \"rgba(255, 206, 86, 0.5)\",\r\n  //             \"rgba(75, 192, 192, 0.5)\",\r\n  //             \"rgba(153, 102, 255, 0.5)\",\r\n  //             \"rgba(255, 159, 64, 0.5)\",\r\n  //             \"rgba(39, 186, 46, 0.5)\",\r\n  //             \"rgba(8, 20, 107, 0.5)\",\r\n  //             \"rgba(8, 20, 107, 0.5)\",\r\n  //           ],\r\n  //           borderColor: [\r\n  //             \"rgba(255, 99, 132, 1)\",\r\n  //             \"rgba(54, 162, 235, 1)\",\r\n  //             \"rgba(255, 206, 86, 1)\",\r\n  //             \"rgba(75, 192, 192, 1)\",\r\n  //             \"rgba(153, 102, 255, 1)\",\r\n  //             \"rgba(255, 159, 64, 1)\",\r\n  //             \"rgba(39, 186, 46,1)\",\r\n  //             \"rgba(8, 20, 107, 1)\",\r\n  //             \"rgba(8, 20, 107, 1)\",\r\n  //           ],\r\n  //           borderWidth: 1,\r\n  //         },\r\n  //       ],\r\n  //     };\r\n  //     try {\r\n  //       await table.forEach((player) => {\r\n  //         barChart.labels.push(player._id.name);\r\n  //         barChart.datasets[0].data.push(player.cardTitle);\r\n  //       });\r\n  //       setbarChartDetails(barChart);\r\n  //     } catch {\r\n  //       console.log(\"err1\");\r\n  //     }\r\n\r\n  //     const dataChart = {\r\n  //       labels: [],\r\n  //       datasets: [\r\n  //         {\r\n  //           data: [],\r\n  //           backgroundColor: [\r\n  //             \"rgba(255, 99, 132, 0.5)\",\r\n  //             \"rgba(54, 162, 235, 0.5)\",\r\n  //             \"rgba(255, 206, 86, 0.5)\",\r\n  //             \"rgba(75, 192, 192, 0.5)\",\r\n  //             \"rgba(153, 102, 255, 0.5)\",\r\n  //             \"rgba(255, 159, 64, 0.5)\",\r\n  //             \"rgba(39, 186, 46, 0.5)\",\r\n  //             \"rgba(8, 20, 107, 0.5)\",\r\n  //             \"rgba(8, 20, 107, 0.5)\",\r\n  //           ],\r\n  //           borderColor: [\r\n  //             \"rgba(255, 99, 132, 1)\",\r\n  //             \"rgba(54, 162, 235, 1)\",\r\n  //             \"rgba(255, 206, 86, 1)\",\r\n  //             \"rgba(75, 192, 192, 1)\",\r\n  //             \"rgba(153, 102, 255, 1)\",\r\n  //             \"rgba(255, 159, 64, 1)\",\r\n  //             \"rgba(39, 186, 46,1)\",\r\n  //             \"rgba(8, 20, 107, 1)\",\r\n  //             \"rgba(8, 20, 107, 1)\",\r\n  //           ],\r\n  //           borderWidth: 1,\r\n  //         },\r\n  //       ],\r\n  //     };\r\n  //     try {\r\n  //       await table.forEach((player) => {\r\n  //         dataChart.labels.push(player._id.name);\r\n  //         accu.push(player.cardTitle);\r\n  //       });\r\n  //       let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\r\n  //       let percentageSum = [];\r\n  //       accu.forEach((percent) => {\r\n  //         percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\r\n  //       });\r\n  //       dataChart.datasets[0].data = percentageSum;\r\n  //       setdataChartDetails(dataChart);\r\n  //     } catch {\r\n  //       console.log(\"err1\");\r\n  //     }\r\n\r\n  //     }\r\n  //     setData(table);\r\n  //   };\r\n\r\n  //   getTable();\r\n  // }, [setData, teamId, cardName, headerTitle]);\r\n\r\n  let rank = 2;\r\n  // ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n  return (\r\n    <div className=\"container pb-2\">\r\n      <PageHeader titleText=\"Stats Per Hour\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"team\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      {statsHour.length === 0 && (\r\n        <div className=\"spinner pt-2\">\r\n          <SpinnerInfinity\r\n            size={130}\r\n            thickness={151}\r\n            speed={70}\r\n            color=\"rgba(252, 252, 252, 1)\"\r\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\r\n            enabled={data.length === 0 ? true : false}\r\n          />\r\n        </div>\r\n      )}\r\n      {statsHour.length > 0 && hero._id && (\r\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\r\n          <ol className=\"statsList\">\r\n            <li\r\n              className=\"statsHeroPerHour d-flex w-100\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\r\n                })`,\r\n              }}\r\n            >\r\n              <div className=\"statsInfo flex-fill\" id=\"perHourHeroSide\">\r\n                <div className=\"pos\">1.</div>\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  {statsHour.length > 0 ? hero._id.name : \"\"}\r\n                </Link>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <div className=\"heroPerHour\">Hours Played:</div>\r\n                  <div className=\"heroPerHour \">{hero.hoursPlayed}</div>\r\n                </div>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <p className=\"heroPerHour m-0\">Profit Per Hour:</p>\r\n                  <p className=\"heroPerHour m-0\">\r\n                    {\" \"}\r\n                    {statsHour.length > 0 ? hero.profitPerHour : \"\"}\r\n                  </p>\r\n                </div>\r\n                <div id=\"amount\" className=\"flex-fill\">\r\n                  <p className=\"heroPerHour m-0\">Cashing Per Hour:</p>\r\n                  <p className=\"heroPerHour m-0\">\r\n                    {\" \"}\r\n                    {statsHour.length > 0 ? hero.cashingPerHour : \"\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"heroImagePerHour\">\r\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\r\n                  <img\r\n                    src={\r\n                      statsHour.length > 0 ? `${apiImage}${hero._id.image}` : \"\"\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n              </div>\r\n            </li>\r\n\r\n            <li className=\"statsHeaderPerHour d-flex w-100 justify-content-between\">\r\n              <div>Rank</div>\r\n              <div>Image</div>\r\n              <div>Player</div>\r\n              <div>Hours Played</div>\r\n              <div>Profit Per Hour</div>\r\n              <div>Cashing Per Hour</div>\r\n            </li>\r\n            {statsHour.map((player) => (\r\n              <li className=\"statsRow\">\r\n                <div className=\"rowPosPerHour\">{rank++}.</div>\r\n                <Link\r\n                  className=\"rowImagePerHour\"\r\n                  to={`/players-stats/${player._id.player_id}`}\r\n                >\r\n                  <img\r\n                    src={\r\n                      statsHour.length > 0\r\n                        ? `${apiImage}${player._id.image}`\r\n                        : \"\"\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n                <div className=\"rowNamePerHour\">\r\n                  {statsHour.length > 0 ? player._id.name : \"\"}\r\n                </div>\r\n                <div className=\"rowHours\">\r\n                  {statsHour.length > 0 ? player.hoursPlayed : \"\"}\r\n                </div>\r\n                <div\r\n                  className={\r\n                    player.profitPerHour > 0\r\n                      ? \"rowProfitPerHour text-success\"\r\n                      : \"rowProfitPerHour text-danger\"\r\n                  }\r\n                >\r\n                  {statsHour.length > 0 ? player.profitPerHour : \"\"}\r\n                </div>\r\n                <div className=\"rowProfitPerHour\">\r\n                  {statsHour.length > 0 ? player.cashingPerHour : \"\"}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsPerHourCard;\r\n","import React from \"react\";\r\nimport { GiCardAceHearts } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiImage } from \"../../config.json\";\r\n\r\nconst CurrMonth = ({ header, name, team, month }) => {\r\n  const year = new Date().getFullYear();\r\n  const date = new Date(month.month);\r\n\r\n  let currentMonth = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  let players = month.players;\r\n  let imageUrl = apiImage + \"images/diamond-sunset.svg\";\r\n  const compare = (a, b) => {\r\n    if (a.totalProfit < b.totalProfit) return 1;\r\n    if (a.totalProfit > b.totalProfit) return -1;\r\n    return 0;\r\n  };\r\n  players.sort(compare);\r\n  return (\r\n    <div className=\"cardDiv month\">\r\n      <div\r\n        className=\"card \"\r\n        id=\"mainStats\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            process.env.PUBLIC_URL + \"/icons/diamond-month.svg\"\r\n          })`,\r\n        }}\r\n      >\r\n        <h5 className=\"card-title text-white\">{players[0]._id.name}</h5>\r\n        <div className=\"img-card\">\r\n          <img\r\n            src={\r\n              players[0]._id.image\r\n                ? `${apiImage}${players[0]._id.image}`\r\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n            }\r\n            className=\"card-img-top \"\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <div className=\"card-img-overlay\"></div>\r\n        <div className=\"card-body p-0\" id=\"statsCardBody\">\r\n          <div className=\"card-text\" id=\"statsCardText\">\r\n            <span>{header}</span>\r\n            <br />\r\n            <div className=\"d-flex justify-content-around\">\r\n              <span id=\"month\">{currentMonth ? currentMonth : \"\"}</span>\r\n              <span>{players ? players[0].totalProfit : 0}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"text-white btn btn-primary\"\r\n        id=\"cardFooter\"\r\n        to={`/tables/monthlyStats/${year}/${currentMonth}/${team._id}`}\r\n      >\r\n        See full table\r\n        <GiCardAceHearts />\r\n        <AiOutlineDoubleRight />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrMonth;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gameService from \"../../services/gameService\";\r\nimport { apiImage } from \"../../config.json\";\r\nimport teamService from \"../../services/teamService\";\r\nimport PageHeader from \"../common/pageHeader\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport NewMonthCard from \"./newMonthCard\";\r\nimport _ from \"lodash\";\r\n\r\nconst MonthlyStats = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [hero, setHero] = useState([]);\r\n  const [teamImg, setTeamImg] = useState(\"\");\r\n  const [barChartDetails, setbarChartDetails] = useState({});\r\n  const [monthlyStats, setMonthlyStats] = useState([]);\r\n  const [dataByMonth, setDataByMonth] = useState([]);\r\n  let currentMonth = new Date();\r\n  let currentMonthNumber = currentMonth.getMonth() + 1;\r\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\r\n\r\n  const teamId = props.match.params.teamId;\r\n\r\n  useEffect(() => {\r\n    const getTable = async () => {\r\n      let table = await gameService.monthsData(teamId);\r\n      table = table.data;\r\n      const monthlyStatsGroup = await gameService.monthlyStats(\r\n        props.match.params.teamId\r\n      );\r\n      setMonthlyStats(monthlyStatsGroup.data);\r\n\r\n      let dataBySeperateMonth = _.chain(monthlyStats)\r\n        //https://stackoverflow.com/questions/23600897/using-lodash-groupby-how-to-add-your-own-keys-for-grouped-output\r\n        // Group the elements of Array based on `monthPlayed` property\r\n        .groupBy(\"_id.monthPlayed\")\r\n        // `key` is group's name (monthPlayed), `value` is the array of objects\r\n        .map((value, key) => ({ month: key, players: value }))\r\n        .value();\r\n      setDataByMonth(dataBySeperateMonth);\r\n      const barChart = {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: `Profit By Player`,\r\n            data: [],\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.5)\",\r\n              \"rgba(54, 162, 235, 0.5)\",\r\n              \"rgba(255, 206, 86, 0.5)\",\r\n              \"rgba(75, 192, 192, 0.5)\",\r\n              \"rgba(153, 102, 255, 0.5)\",\r\n              \"rgba(255, 159, 64, 0.5)\",\r\n              \"rgba(39, 186, 46, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n              \"rgba(8, 20, 107, 0.5)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(39, 186, 46,1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n              \"rgba(8, 20, 107, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      try {\r\n        await table.forEach((player) => {\r\n          barChart.labels.push(player._id.name);\r\n          barChart.datasets[0].data.push(player.totalProfit);\r\n        });\r\n\r\n        setbarChartDetails(barChart);\r\n      } catch {\r\n        console.log(\"err1\");\r\n      }\r\n\r\n      let teamPic = await teamService.getTeam(teamId);\r\n      setTeamImg(teamPic.data);\r\n\r\n      table = table.filter(\r\n        (month) => month._id.monthPlayed === currentMonthNumber\r\n      );\r\n      let myHero = table.shift();\r\n      setHero(myHero);\r\n      setData(table);\r\n    };\r\n\r\n    getTable();\r\n  }, [setData, teamId, currentMonthNumber, monthlyStats.length]);\r\n\r\n  return (\r\n    <div className=\"container pb-3\">\r\n      <PageHeader titleText=\"Total Profit By Months\" />\r\n      <div className=\"teamImg d-flex flex-row mb-2\">\r\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\r\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\r\n      </div>\r\n      <div className=\"byMonth text-primary row \">\r\n        {dataByMonth.length > 0 &&\r\n          dataByMonth.map((month) => (\r\n            <div className=\"col-6\">\r\n              <NewMonthCard month={month} team={teamImg} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyStats;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../src/css/main.css\";\r\nimport Footer from \"./components/footer\";\r\nimport Home from \"./components/home\";\r\nimport SideNavbar from \"./components/sideNavbar\";\r\nimport Signin from \"./components/signin\";\r\nimport Logout from \"./components/logout\";\r\nimport EditUser from \"./components/forms/editUser\";\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport userService from \"./services/userService\";\r\nimport ProtectedRoute from \"./components/common/protectedRoutes\";\r\nimport MyTeams from \"./components/myTeams\";\r\nimport EditPlayer from \"./components/editPlayer\";\r\nimport EditTeam from \"./components/editTeam\";\r\nimport SelectPlayers from \"./components/selectPlayers\";\r\nimport JoinTeam from \"./components/joinTeam\";\r\nimport MainTable from \"./components/mainTable\";\r\nimport Demo from \"./components/demo\";\r\nimport About from \"./components/about\";\r\nimport MyStats from \"./components/personalStats/myStats\";\r\nimport CardTable from \"./components/topStats/cardTable\";\r\nimport SuccessCard from \"./components/topStats/successCard\";\r\nimport CurrMonthCard from \"./components/topStats/currMonthCard\";\r\nimport ProfitsCard from \"./components/topStats/profitsCard\";\r\nimport SignUp from \"./components/forms/signUp\";\r\nimport NewGame from \"./components/games/newGame\";\r\nimport GameEnd from \"./components/gameEnd\";\r\nimport H2hTable from \"./components/h2h/h2hTable\";\r\nimport TeamSignUp from \"./components/forms/teamSignUp\";\r\nimport EditGames from \"./components/games/editGames\";\r\nimport PlayerStats from \"./components/personalStats/playerStats\";\r\nimport StatsPerHourCard from \"./components/topStats/statsPerHourCard\";\r\nimport MonthlyStats from \"./components/topStats/monthlyStats\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nReactGA.initialize(\"G-MPD41JDBPV\");\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({});\r\n  const [details, setDetails] = useState({});\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const me = await userService.getCurrentUser();\r\n      setUser(me);\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const me = await userService.getUserDetails();\r\n      setDetails(me.data);\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  // console.log(details);\r\n  const style = {\r\n    minHeight: 780,\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <header>\r\n        <SideNavbar\r\n          user={user}\r\n          details={details}\r\n          pageWrapId={\"page-wrap\"}\r\n          outerContainerId={\"App\"}\r\n        />\r\n      </header>\r\n      <main style={style} className=\"main\">\r\n        <HashRouter user={user}>\r\n          <Switch>\r\n            <ProtectedRoute path=\"/my-stats/edit/:id\" component={EditPlayer} />\r\n            <ProtectedRoute\r\n              path=\"/my-stats/edit_player/:id\"\r\n              component={EditUser}\r\n              user={user}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/my-stats/:id\"\r\n              component={MyStats}\r\n              user={user}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              path=\"/my-teams/edit/:teamId\"\r\n              component={EditTeam}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/my-teams\"\r\n              component={MyTeams}\r\n              user={user}\r\n              d={details}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/create-team\"\r\n              user={user}\r\n              component={TeamSignUp}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/new-game/:teamId\"\r\n              component={SelectPlayers}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/join-team\"\r\n              component={JoinTeam}\r\n              user={user}\r\n            />\r\n            <ProtectedRoute path=\"/edit-games/:teamId\" component={EditGames} />\r\n\r\n            <ProtectedRoute path=\"/games/:gameId\" component={NewGame} />\r\n            <ProtectedRoute path=\"/last-game/:teamId\" component={GameEnd} />\r\n            <ProtectedRoute path=\"/tables/h2h/:teamId\" component={H2hTable} />\r\n            <ProtectedRoute path=\"/main-table/:teamId\" component={MainTable} />\r\n            <ProtectedRoute\r\n              path=\"/tables/success/:teamId\"\r\n              component={SuccessCard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/tables/monthlyStats/:year/:currentMonth/:teamId\"\r\n              component={CurrMonthCard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/tables/monthlyStats/:teamId\"\r\n              component={MonthlyStats}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/tables/profits/top-ten/:teamId\"\r\n              component={ProfitsCard}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/tables/:cardName/:teamId\"\r\n              component={CardTable}\r\n            />\r\n            <ProtectedRoute path=\"/players-stats/:id\" component={PlayerStats} />\r\n            <ProtectedRoute\r\n              path=\"/stats-per-hour/:teamId\"\r\n              component={StatsPerHourCard}\r\n            />\r\n\r\n            <Route path=\"/demo\" component={Demo} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/signin\" component={Signin} />\r\n            <Route path=\"/signup\" component={SignUp} user={user} />\r\n            {/* <Route path=\"/sign-up\" component={SignUp} user={user} /> */}\r\n\r\n            <Route exact path=\"/\" component={Home} user={user} d={details} />\r\n          </Switch>\r\n        </HashRouter>\r\n      </main>\r\n\r\n      <footer>\r\n        <Footer />\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/main.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"jquery/dist/jquery\";\r\nimport \"popper.js/dist/popper\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nreportWebVitals();\r\n"],"sourceRoot":""}