{"version":3,"sources":["components/footer.jsx","components/common/pageHeader.jsx","components/home.jsx","components/sideNavbar.jsx","services/httpService.js","services/gameService.js","components/newMainTable/clockSpinner.jsx","components/newMainTable/byMonthsDashboard.jsx","components/common/input.jsx","components/common/form.jsx","services/userService.js","components/signin.jsx","components/logout.jsx","components/forms/editUser.jsx","components/common/protectedRoutes.jsx","services/teamService.js","components/games/cashingDetails.jsx","components/team.jsx","components/myTeams.jsx","components/editPlayer.jsx","components/editTeam.jsx","services/h2hService.js","components/player.jsx","components/selectPlayers.jsx","components/joinTeam.jsx","services/sideBetsService.js","components/topStats/playerCard.jsx","components/topStats/successp.jsx","components/topStats/currMonth.jsx","components/topStats/profits.jsx","components/h2h/h2hGameEnd.jsx","components/mainLastGame.jsx","components/h2h/h2hCard.jsx","components/games/allGames.jsx","components/topStats/statsPerHour.jsx","components/sidebets/sidebetsCard.jsx","components/mainTable.jsx","components/demo.jsx","components/about.jsx","components/personalStats/totalPersonal.jsx","components/personalStats/myStats.jsx","components/topStats/cardTable.jsx","components/topStats/successCard.jsx","components/topStats/currMonthCard.jsx","components/topStats/profitsCard.jsx","components/forms/signUp.jsx","components/h2h/h2hGame.jsx","components/games/newGame.jsx","components/newMainTable/newStatsCard/newStatsCard.jsx","components/gameEnd.jsx","components/h2h/h2hGameCard.jsx","components/h2h/h2hTable.jsx","components/forms/teamSignUp.jsx","components/games/editGames.jsx","components/personalStats/playerStats.jsx","components/topStats/statsPerHourCard.jsx","components/topStats/newMonthCard.jsx","components/topStats/monthlyStats.jsx","components/sidebets/sideBetsVsCardPlayer.jsx","components/sidebets/sideBetsVsCard.jsx","components/sidebets/sidebetsMain.jsx","components/sidebets/MasterPlayer.jsx","components/sidebets/choosePlayer.jsx","components/sidebets/selectedPlayer.jsx","components/sidebets/NewSideBet.jsx","services/scheduleGameService.js","components/newMainTable/singleGame.jsx","components/newMainTable/allGamesList.jsx","components/newMainTable/bigCard.jsx","components/newMainTable/playersImages.jsx","components/newMainTable/smallCard.jsx","components/newMainTable/sideBetsCard.jsx","components/newMainTable/totalStatsForTeam.jsx","components/newMainTable/seasonPick.jsx","components/newMainTable/smallMonthsCard.jsx","components/newMainTable/newMainTable.jsx","components/scheduleGame/ScheduledGameForm.jsx","components/scheduleGame/ScheduledGame.jsx","components/scheduleGame/JoinScheduledGame.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","_jsxs","className","id","children","_jsx","src","alt","Date","getFullYear","href","PageHeader","_ref","titleText","Home","Link","to","concat","apiImage","SideNavBar","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","menuOpen","_createClass","key","value","this","setState","isOpen","_this2","Menu","onStateChange","handleStateChange","onClick","closeMenu","NavLink","AiOutlineInfoCircle","GiPokerHand","user","HiOutlineUserGroup","_id","ImStatsBars","React","Fragment","VscSignIn","FiUserPlus","Avatar","details","image","name","nickName","FiLogOut","Component","axios","defaults","headers","common","localStorage","getItem","interceptors","response","use","error","status","toast","Promise","reject","get","post","put","patch","delete","lastGame","teamId","http","apiUrl","table","personal","uId","monthsData","month","cardsData","cardName","successp","profits","newGame","game","gameById","gameId","updateGame","inProgress","totalCash","personalGames","allGamesByTeam","totalGames","agg_profits","statsPerHour","updateManager","manager","fetchCashingDetails","previousRank","monthlyStats","monthlyByPlayer","sideBets","getTotalStatsForTeam","dates","arguments","length","undefined","startDate","endDate","getCardStats","stats","getAllMonthsByMonth","getAllGamesByTeam","pagination","page","GetSeasonYears","getStatsByMonth","ClockSpinner","SpinnerDotted","size","thickness","speed","color","ByMonthsDashboard","match","params","seasonDates","URLSearchParams","window","location","pathname","console","log","_useState","useState","_useState2","_slicedToArray","monthsStats","setMonthsStats","getMonthName","monthNumber","date","setMonth","toLocaleString","useEffect","_getAllMonthsStats","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$gameService$ge","allGamesByMonth","wrap","_context","prev","next","gameService","sent","data","stop","apply","getAllMonthsStats","map","players","totalProfit","roundedAvgCashing","AiOutlineArrowRight","Input","label","rest","_objectWithoutProperties","htmlFor","_objectSpread","Form","_Component","_len","args","Array","_key","errors","validate","Joi","schema","abortEarly","_step","_iterator","_createForOfIteratorHelper","s","n","done","item","path","message","err","e","f","validateProperty","obj","_defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","currentTarget","errorMessage","disabled","type","_this$state","onChange","tokenKey","_login","email","password","_yield$http$post","setItem","token","_loginGoogle","_callee2","_yield$http$post2","_context2","login","_x","_x2","loginGoogle","_x3","_x4","getCurrentUser","jwt","jwtDecode","ex","logout","removeItem","getJwt","getUserDetails","editUserDetails","editUserForUpdate","getPlayerDetails","Signin","_Form","string","required","min","handleLogin","googleData","userService","profileObj","tokenId","t0","_this$state$data","Redirect","GoogleLogin","clientId","onSuccess","onSubmit","autoComplete","method","renderInput","renderButton","Logout","validationSchema","Yup","EditUser","me","setMe","getUser","meData","values","onSubmitProps","setSubmitting","FormData","append","setErrors","savedValues","_useState3","_useState4","Formik","enableReinitialize","initialValues","validateOnMount","formik","Field","ErrorMessage","component","event","setFieldValue","target","files","isValid","isSubmitting","ProtectedRoute","render","currentUser","Route","from","createTeam","team","getMyTeam","getTeam","editTeam","deleteTeam","getTeamByNumber","teamNumber","removePlayerFromTeam","playerId","getTeamForSideBets","userId","newGetTeam","CashingDetails","updated","cashing","setCashing","fetchDetails","getCashingDetails","cashing_details","cash","playerName","playerCashing","time","hour","minute","second","hour12","Team","removeTeam","teamid","livePlayers","setLivePlayers","liveGame","setliveGame","_useState5","_useState6","buttons","setButtons","captain","filter","user_id","sort","a","b","getLiveGame","_ref3","_callee3","_context3","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","_ref4","result","isConfirmed","teamService","reload","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","teamImage","width","height","data-toggle","data-placement","takecontrol","style","backgroundImage","createdAt","toLocaleDateString","player","MdDateRange","IoMdStats","AiFillEdit","GiCardKingClubs","MyTeams","teams","setTeams","setUser","_yield$teamService$ge","fetchTeams","chosenTeam","myTeams","EditPlayer","userImage","max","uri","allow","history","replace","handleCancel","push","_componentDidMount","_yield$userService$ge","mapToViewModel","newH2h","getByGameId","updateH2h","getPointsByPlayer","pId","getPointsByTeam","teamAllGames","addPlayersH2h","Player","selectPlayers","selected","find","SelectPlayers","setData","setSelected","started","setStarted","_useState7","_useState8","_shuffle","_game","Audio","play","team_name","team_id","game_manager","res","h2hService","getGameManager","fetchPlayers","teamName","cashInHand","numOfCashing","profit","_toConsumableArray","JoinTeam","createSideBet","sideBet","getSidebetsForMainTable","gotOfferedSidebet","acceptSideBet","sideBetId","dismissSideBet","getAllApprovedSideBets","getExtraDetais","sideBetMasterPlayerId","sideBetsSlavePlayerId","sideBetStartDate","sideBetEndDate","getAllDismissedSideBets","PlayerCard","header","teamimage","GiCardAceHearts","AiOutlineDoubleRight","SuccessP","CurrMonth","cMonth","currentMonth","Profits","H2hGameEnd","setPlayers","ended","setEnded","last","_","flattenDeep","points","lastH2h","Rank","SpinnerInfinity","secondaryColor","enabled","MainLastgame","setLastGame","getLastGame","updatedAt","H2hCard","AllGames","games","setGames","gamesData","setGamesData","setPage","pages","setPages","_useState9","_useState10","loading","setLoading","_useState11","_useState12","perPage","all","allGames","d","Math","floor","_unused","getGames","created","items","slice","itemsDates","ReactPaginate","previousLabel","nextLabel","pageCount","onPageChange","pageC","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","g","gameRank","SideBetsCard","AiFillDollarCircle","MainTable","avgprofit","setAvgprofit","totalgames","setTotalgames","avgcashing","setAvgcashing","setSuccess","gamesprofit","setGamesprofit","_useState13","_useState14","h2h","setH2h","_useState15","_useState16","monthleader","setMonthleader","_useState17","_useState18","setProfits","_useState19","_useState20","setTeamImage","_useState21","_useState22","setTotalCash","_useState23","_useState24","setTotalGames","_useState25","_useState26","setstatsPerHour","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","setSideBets","relativeTime","require","teamPic","totoalg","totalG","avgp","avgP","gamep","gameP","successPc","successP","avgc","avgC","shift","numOfGames","avgProfit","gamesWithProfit","successPercentage","avgCashing","getTable","thisMonth","results","currMonth","currMonthLeader","_currMonth","_currMonthLeader","getMonth","monthPlayed","dataByMonths","_callee4","_context4","_ref5","_callee5","dataPerHour","_context5","_ref6","_callee6","sideBetsData","gotOfferedSideBet","_context6","sideBetsService","masterPlayer","sideBetSum","cancelButtonText","isDismissed","dayjs","daysFromGame","fromNow","SpinnerDiamond","motion","img","borderRadius","backgroundColor","animate","rotate","transition","duration","bounce","div","initial","opacity","delay","x","role","data-bs-dismiss","aria-label","aria-hidden","bet","slavePlayer","totalCashing","totalHours","toFixed","TotalGames","IoIosTrophy","y","StatsPerHour","profitPerHour","avgPoints","Demo","Carousel","Item","Caption","About","TotalPersonal","MyStats","setStats","setPoints","setDetails","chartData","setChartData","chartDates","setChartDates","chartCashing","setChartCashing","currentMonthNumber","_currentMonth","detailed","myDetailed","chartDetails","_chartDates","chartCash","player_id","forEach","substr","myData","myStats","getMydata","myPoints","delayed","labels","datasets","fill","borderColor","options","animation","onComplete","context","mode","dataIndex","datasetIndex","scales","beginAtZero","isEmpty","SpinnerCircular","firstName","lastName","maxProfit","minProfit","totalPoints","avgGameRank","Line","CardTable","hero","setHero","previousPlayerRank","setPreviousPlayerRank","headerTitle","setHeaderTitle","teamImg","setTeamImg","dataChartDetails","setdataChartDetails","barChartDetails","setbarChartDetails","setHeroPreviousRank","previousHero","merged","accu","barChart","dataChart","sum","percentageSum","myHero","previousTableRank","merge","keyBy","borderWidth","cardTitle","reduce","partial_sum","percent","t1","t2","abrupt","rank","ChartJS","register","ArcElement","Tooltip","Legend","currentTableRank","VscTriangleUp","VscTriangleDown","AiOutlineMinus","Doughnut","Bar","SuccessCard","CurrMonthCard","chosenMonth","mon","parse","ProfitsCard","aggregatedProfits","list","prop","Object","assign","handleDates","hasOwnProperty","SignUp","setFields","fields","givenName","familyName","now","fakeId","setUseGoogle","setToken","useGoogle","buttonText","H2hGame","setGame","playersInGame","gameForH2h","p","NewGame","setId","setManager","ac","AbortController","abort","takeControl","finishedGame","playerImage","imageUrl","imageWidth","imageHeight","imageAlt","showDenyButton","denyButtonColor","denyButtonText","__v","cashingDetails","isDenied","cashedOut","parseInt","cashOutTime","playerCashedOut","cashOutPlayer","indexOfLastPlayerCashing","el","lastIndexOf","playersLastCashing","splice","undoCashing","edit","editCashing","NewStatsCard","cardData","setCardData","cardHeader","setCardHeader","leaderData","setLeaderData","headerDetails","setHeaderDetails","setDates","_getCardData","query","dataParam","leaderParam","headerData","cardStats","search","split","JSON","getCardData","start","card","index","GameEnd","H2hGameCard","aGames","flatten","marginPagesDisplayed","H2hTable","TeamSignUp","teamDetails","setTeamDetails","EditGames","iframeUrl","PlayerStats","StatsPerHourCard","statsHour","setStatsHour","getStats","hoursPlayed","cashingPerHour","year","MonthlyStats","setMonthlyStats","dataByMonth","setDataByMonth","chartProfitsByPlayer","setChartProfitsByPlayer","monthlyStatsGroup","dataBySeperateMonth","chain","groupBy","chartProfits","random","toString","NewMonthCard","maintainAspectRatio","responsive","plugins","legend","display","SideBetsVsCardPlayer","sideBetDetail","leader","SideBetsVsCard","sideBetDetails","setSideBetDetails","extraDetails","getSideBetsExtraData","SidebetsMain","approvedSideBets","setApprovedSideBets","dismissedSideBets","setDismissedSideBets","getSideBets","isArray","_Fragment","dissmissDate","MasterPlayer","ChoosePlayer","selectPlayer","SelectedPlayer","choosen","setSideBetSum","setStartDate","setEndDate","setMasterPlayer","getMasterPlayer","placeholder","getSideBetSum","getStartDate","getEndDate","sideBetSumAmount","NaN","Number","isInteger","moment","approvedBySlavePlayer","validateSideBet","NewSideBet","setTeam","selectedPlayer","setSelectedPlayer","sideBetTeamId","setSideBetTeamId","teamForSideBet","saveNewScheduledGame","gameData","getLatestScheduleGame","getScheduledGameById","updateScheduledGame","updateHost","gamId","hostId","SingleGame","_game$scheduledGameDe","_game$scheduledGameDe2","_game$scheduledGameDe3","_game$game_manager","_game$scheduledGameDe4","host","scheduledGameDetails","startTime","endTime","AllGamesList","setAllGames","_getAllGames","getAllGames","BigCard","playersData","setCardStats","_getCardStats","stringify","PlayersImages","SmallCard","_ref$extraHeader","extraHeader","_getApprovedSideBets","_yield$sideBetsServic","getApprovedSideBets","TotalStatsForTeam","totalStats","totalHoursPlayed","lastGamePlayed","SeasonPick","updateSeasonDates","seasons","setSeasons","seasonPick","setSeasonPick","_getSeasons","_yield$gameService$Ge","getSeasons","season","SmallMonthsCard","monthName","roundedAvgProfit","NewMainTable","_latestScheduledGame$","setTotalStats","setSeasonDates","latestScheduledGame","setLatestScheduledGame","_getTeam","_yield$teamService$ne","_getTotalStatsForTeam","_yield$gameServices$g","gameServices","_yield$scheduleGameSe","scheduleGame","scheduleGameService","getLatestScheduledGame","border","SchedulaGameForm","fetchUser","guest","answer","guest1","gameDate","guests","guestId","guestAnswer","FormGroup","FormLabel","toISOString","as","Button","SchedulaGame","_props$match","_props$match$params","_game$host","_game$host2","_game$host3","_game$host4","_game$host5","_game$guests","_game$guests2","setHost","document","querySelector","classList","add","chosenHost","remove","day","JoinScheduledGame","gameid","setGuest","fetchGame","_yield$scheduleGameSe2","variant","ReactGA","initialize","pageview","App","ToastContainer","SideNavbar","pageWrapId","outerContainerId","HashRouter","Switch","EditTeam","sidebetsMain","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"wOAqEeA,EAnEA,WACb,OACEC,eAAA,OACEC,UAAU,6DACVC,GAAG,SAAQC,SAAA,CAEXC,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAA,OAAKC,IAA8B,eAAgBC,IAAI,WAEzDN,eAAA,OAAKC,UAAU,cAAaE,SAAA,CAC1BH,eAAA,KAAGC,UAAU,QAAOE,SAAA,CAAC,kDAC+B,KACjD,IAAII,MAAOC,iBAEdJ,cAAA,KAAGK,KAAK,+BAA8BN,SAAC,4BAGzCC,cAAA,OAAKH,UAAU,gBAAeE,SAE5BH,eAAA,MAAIC,UAAU,0CAAyCE,SAAA,CACrDC,cAAA,MAAAD,SACEC,cAAA,KAAGK,KAAK,wCAAuCN,SAC7CC,cAAA,OACEC,IAAI,2DACJC,IAAI,iBAIVF,cAAA,MAAAD,SACEC,cAAA,KAAGK,KAAK,kCAAiCN,SACvCC,cAAA,OACEC,IAAI,0DACJC,IAAI,gBAIVF,cAAA,MAAAD,SACEC,cAAA,KAAGK,KAAK,4CAA2CN,SACjDC,cAAA,OACEC,IAAI,2DACJC,IAAI,iBAIVF,cAAA,MAAAD,SACEC,cAAA,KAAGK,KAAK,kCAAiCN,SACvCC,cAAA,OACEC,IAAI,qDACJC,IAAI,eAKVF,cAAA,MAAAD,SACEC,cAAA,KAAGK,KAAK,8BAA6BN,SACnCC,cAAA,OACEC,IAAI,wDACJC,IAAI,uB,OC/CLI,EAVI,SAAHC,GAAuB,IAAjBC,EAASD,EAATC,UACpB,OACER,cAAA,OAAKH,UAAU,MAAKE,SAClBC,cAAA,OAAKH,UAAU,mBAAkBE,SAC/BC,cAAA,MAAIH,UAAU,gBAAeE,SAAES,S,OCwDxBC,EA1DF,WACX,OACET,cAAA,WAAAD,SACEH,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CAACE,UAAU,mBACtBZ,eAAA,OAAKC,UAAU,WAAUE,SAAA,CACvBH,eAAA,OAAKC,UAAU,2BAA2BC,GAAG,WAAUC,SAAA,CACrDC,cAAA,KAAGH,UAAU,OAAME,SAAC,4FAIpBC,cAAA,KAAGH,UAAU,OAAME,SAAC,mHAIpBC,cAAA,KAAGH,UAAU,OAAME,SAAC,iIAKpBH,eAAA,KAAAG,SAAA,CAAG,mBACeC,cAAA,SAChBA,cAACU,IAAI,CAACC,GAAG,UAAUb,GAAG,SAAQC,SAAC,qCAIjCC,cAAA,KAAAD,SAAG,uBACHC,cAAA,KAAAD,SACEC,cAACU,IAAI,CAACC,GAAG,YAAYb,GAAG,OAAMC,SAAC,oDAKnCH,eAAA,OAAKC,UAAU,kBAAkBC,GAAG,UAASC,SAAA,CAC3CC,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,IAAQ,2BAA2BX,IAAI,YAEtDF,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IAAI,yFACJC,IAAI,8B,mGC6FLY,EA5HC,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACd,SAAAA,EAAYK,GAAQ,IAADC,EAIf,OAJeC,YAAA,KAAAP,IACjBM,EAAAH,EAAAK,KAAA,KAAMH,IACDI,MAAQ,CACXC,UAAU,GACVJ,EAoHH,OAhHDK,YAAAX,EAAA,EAAAY,IAAA,oBAAAC,MACA,SAAkBJ,GAChBK,KAAKC,SAAS,CAAEL,SAAUD,EAAMO,WAGlC,CAAAJ,IAAA,YAAAC,MACA,WACEC,KAAKC,SAAS,CAAEL,UAAU,MAK5B,CAAAE,IAAA,aAAAC,MACA,WACEC,KAAKC,UAAS,SAACN,GAAK,MAAM,CAAEC,UAAWD,EAAMC,eAC9C,CAAAE,IAAA,SAAAC,MAED,WAAU,IAADI,EAAA,KACP,OACE/B,cAAA,OAAAD,SACEH,eAACoC,QAAI,CACHF,OAAQF,KAAKL,MAAMC,SACnBS,cAAe,SAACV,GAAK,OAAKQ,EAAKG,kBAAkBX,IAAOxB,SAAA,CAExDC,cAACU,IAAI,CACHb,UAAU,eACVc,GAAG,KACHwB,QAAS,kBAAMJ,EAAKK,aAAYrC,SAEhCC,cAAA,OAAKC,IAA2B,eAAmBC,IAAI,WAEzDN,eAACyC,IAAO,CACNxC,UAAU,yBACVc,GAAG,SACHwB,QAAS,kBAAMJ,EAAKK,aAAYrC,SAAA,CAEhCC,cAACsC,IAAmB,CAACzC,UAAU,cAC/BG,cAAA,KAAGH,UAAU,MAAKE,SAAC,aAErBH,eAACc,IAAI,CACHyB,QAAS,kBAAMJ,EAAKK,aACpBvC,UAAU,kBACVc,GAAG,QAAOZ,SAAA,CAEVC,cAACuC,IAAW,CAAC1C,UAAU,cACvBG,cAAA,KAAGH,UAAU,MAAKE,SAAC,iBAEpB6B,KAAKT,MAAMqB,MACV5C,eAACyC,IAAO,CACNxC,UAAU,2BACVsC,QAAS,kBAAMJ,EAAKK,aACpBzB,GAAG,YAAWZ,SAAA,CAEdC,cAACyC,IAAkB,CAAC5C,UAAU,cAC9BG,cAAA,KAAGH,UAAU,MAAKE,SAAC,gBAItB6B,KAAKT,MAAMqB,MACV5C,eAACyC,IAAO,CACNxC,UAAU,2BACVsC,QAAS,kBAAMJ,EAAKK,aACpBzB,GAAE,aAAAC,OAAegB,KAAKT,MAAMqB,KAAKE,KAAM3C,SAAA,CAEvCC,cAAC2C,IAAW,CAAC9C,UAAU,cACvBG,cAAA,KAAGH,UAAU,MAAKE,SAAC,uBAGrB6B,KAAKT,MAAMqB,MACX5C,eAACgD,IAAMC,SAAQ,CAAA9C,SAAA,CACbH,eAACyC,IAAO,CACNxC,UAAU,2BACVc,GAAG,UACHwB,QAAS,kBAAMJ,EAAKK,aAAYrC,SAAA,CAEhCC,cAAC8C,IAAS,CAACjD,UAAU,cACrBG,cAAA,KAAGH,UAAU,MAAKE,SAAC,eAErBH,eAACyC,IAAO,CACNxC,UAAU,2BACVc,GAAG,UACHwB,QAAS,kBAAMJ,EAAKK,aAAYrC,SAAA,CAEhCC,cAAC+C,IAAU,CAAClD,UAAU,cACtBG,cAAA,KAAGH,UAAU,MAAKE,SAAC,kBAIxB6B,KAAKT,MAAMqB,MACV5C,eAACgD,IAAMC,SAAQ,CAAA9C,SAAA,CACbH,eAAA,OAAKC,UAAU,4CAA2CE,SAAA,CACxDC,cAACgD,IAAM,CACL/C,IAAG,GAAAW,OAAKC,KAAQD,OAAGgB,KAAKT,MAAM8B,QAAQC,OACtChD,IAAK0B,KAAKT,MAAM8B,QAAQE,OAE1BnD,cAAA,KAAGH,UAAU,oBAAmBE,SAC7B6B,KAAKT,MAAM8B,QAAQG,cAGxBxD,eAACyC,IAAO,CACNxC,UAAU,gCACVc,GAAG,UACHwB,QAAS,kBAAMJ,EAAKK,aAAYrC,SAAA,CAEhCC,cAACqD,IAAQ,CAACxD,UAAU,cACpBG,cAAA,KAAGH,UAAU,MAAKE,SAAC,2BAOhCe,EAzHa,CAAS8B,IAAMU,W,yBCN/BC,IAAMC,SAASC,QAAQC,OAAO,gBAHrBC,aAAaC,QAAQ,SAK9BL,IAAMM,aAAaC,SAASC,IAAI,MAAM,SAACC,GAIrC,OAHsBA,EAAMF,UAAYE,EAAMF,SAASG,QAAU,KAE9CC,IAAMF,MAAM,kCACxBG,QAAQC,OAAOJ,MAGT,OACbK,IAAKd,IAAMc,IACXC,KAAMf,IAAMe,KACZC,IAAKhB,IAAMgB,IACXC,MAAOjB,IAAMiB,MACbC,OAAQlB,IAAMkB,QC4JD,OACbC,SA/KK,SAAkBC,GACvB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,qBAAAjE,OAAoB+D,KA+K7CG,MA5KK,SAAeH,GACpB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,iBAAAjE,OAAgB+D,KA4KzCI,SAzKK,SAAkBC,GACvB,OAAOJ,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,oBAAAjE,OAAmBoE,KAyK5CC,WAlKK,SAAoBN,EAAQO,GACjC,OAAON,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,oBAAAjE,OAAmBsE,EAAK,KAAAtE,OAAI+D,KAkKrDQ,UAzJK,SAAmBR,EAAQS,GAChC,OAAOR,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,WAAAjE,OAAUwE,EAAQ,KAAAxE,OAAI+D,KAyJ/CU,SA7JK,SAAkBV,GACvB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,qBAAAjE,OAAoB+D,KA6J7CW,QAvJK,SAAiBX,GACtB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,2BAAAjE,OAA0B+D,KAuJnDY,QAhJK,SAAiBC,GACtB,OAAOZ,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,UAAUW,IAgJpCC,SA7IK,SAAkBC,GACvB,OAAOd,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,WAAAjE,OAAU8E,KA6InCC,WA1IK,SAAoBD,EAAQF,GACjC,OAAOZ,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,WAAAjE,OAAU8E,GAAUF,IA0I7CI,WAxIK,SAAoBjB,GACzB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,gBAAAjE,OAAe+D,KAwIxCkB,UArIK,SAAmBlB,GACxB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,sBAAAjE,OAAqB+D,KAqI9CmB,cA/KK,SAAuBd,GAC5B,OAAOJ,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,yBAAAjE,OAAwBoE,KA+KjDe,eAnIK,SAAwBpB,GAC7B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,0BAAAjE,OAAyB+D,KAmIlDqB,WAhIK,SAAoBrB,GACzB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,sBAAAjE,OAAqB+D,KAgI9CsB,YA5JK,SAAqBtB,GAC1B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,+BAAAjE,OAA8B+D,KA4JvDuB,aA3KK,SAAsBvB,GAC3B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,wBAAAjE,OAAuB+D,KA2KhDwB,cA/HK,SAAuBrG,EAAIsG,GAChC,OAAOxB,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,yBAAAjE,OAAwBd,GAAMsG,IA+HvDC,oBA5HK,SAA6BX,GAClC,OAAOd,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,0BAAAjE,OAAyB8E,KA4HlDY,aAzHK,SAAsB3B,GAC3B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,wBAAAjE,OAAuB+D,KAyHhD4B,aAtHK,SAAsB5B,GAC3B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,wBAAAjE,OAAuB+D,KAsHhD6B,gBAnHK,SAAyB7B,GAC9B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,2BAAAjE,OAA0B+D,KAmHnD8B,SAhHK,SAAkB9B,GACvB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,yBAAAjE,OAAwB+D,KAgHjD+B,qBA1GK,SACL/B,GAEC,IADDgC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEG,UAAW,KAAMC,QAAS,MAEpC,OAAOpC,EAAKP,IAAI,GAADzD,OACViE,IAAM,0CAAAjE,OAAyC+D,EAAM,eAAA/D,OAAc+F,EAAMI,UAAS,aAAAnG,OAAY+F,EAAMK,WAsGzGC,aAlGK,SACLtC,EACAuC,GAGC,IAFDhC,EAAK0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACRD,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEG,UAAW,KAAMC,QAAS,MAEpC,MAAc,iBAAVE,EACKtC,EAAKP,IAAI,GAADzD,OACViE,IAAM,qCAAAjE,OAAoC+D,EAAM,eAAA/D,OAAc+F,EAAMI,UAAS,aAAAnG,OAAY+F,EAAMK,UAGxF,kBAAVE,EACKtC,EAAKP,IAAI,GAADzD,OACViE,IAAM,sCAAAjE,OAAqC+D,EAAM,eAAA/D,OAAc+F,EAAMI,UAAS,aAAAnG,OAAY+F,EAAMK,UAGzF,cAAVE,EACKtC,EAAKP,IAAI,GAADzD,OACViE,IAAM,gCAAAjE,OAA+B+D,EAAM,eAAA/D,OAAc+F,EAAMI,UAAS,aAAAnG,OAAY+F,EAAMK,UAInF,mBAAVE,EACKtC,EAAKP,IAAI,GAADzD,OACViE,IAAM,uCAAAjE,OAAsC+D,EAAM,eAAA/D,OAAc+F,EAAMI,UAAS,aAAAnG,OAAY+F,EAAMK,UAI1F,oBAAVE,EACKtC,EAAKP,IAAI,GAADzD,OACViE,IAAM,wCAAAjE,OAAuC+D,EAAM,eAAA/D,OAAc+F,EAAMI,UAAS,aAAAnG,OAAY+F,EAAMK,UAG3F,oBAAVE,EACKtC,EAAKP,IAAI,GAADzD,OACViE,IAAM,wCAAAjE,OAAuC+D,EAAM,eAAA/D,OAAc+F,EAAMI,UAAS,aAAAnG,OAAY+F,EAAMK,UAG3F,sBAAVE,EACKtC,EAAKP,IAAI,GAADzD,OACViE,IAAM,0CAAAjE,OAAyC+D,EAAM,KAAA/D,OAAIsE,SAFhE,GA6DAiC,oBA7CK,SAA6BxC,GAClC,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,4CAAAjE,OAA2C+D,KA6CpEyC,kBA1CK,SACLzC,EACA0C,EACAC,GAEC,IADDX,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEG,UAAW,KAAMC,QAAS,MAEpC,OAAOpC,EAAKP,IAAI,GAADzD,OACViE,IAAM,0CAAAjE,OAAyC+D,EAAM,gBAAA/D,OAAeyG,EAAU,UAAAzG,OAAS0G,EAAI,eAAA1G,OAAc+F,EAAMI,UAAS,aAAAnG,OAAY+F,EAAMK,WAoC/IO,eAhCK,SAAwB5C,GAC7B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,sCAAAjE,OAAqC+D,KAgC9D6C,gBAzDK,SACL7C,GAEC,IADDgC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEG,UAAW,KAAMC,QAAS,MAEpC,OAAOpC,EAAKP,IAAI,GAADzD,OACViE,IAAM,wCAAAjE,OAAuC+D,EAAM,eAAA/D,OAAmB,OAAL+F,QAAK,IAALA,OAAK,EAALA,EAAOI,UAAS,aAAAnG,OAAiB,OAAL+F,QAAK,IAALA,OAAK,EAALA,EAAOK,Y,SC/I5FS,EARM,WACjB,OACIzH,cAAA,OAAKH,UAAU,eAAcE,SACzBC,cAAC0H,IAAa,CAACC,KAAM,GAAIC,UAAW,IAAKC,MAAO,IAAKC,MAAM,4BC6HxDC,EA3HW,SAAC5G,GACvB,IAAMwD,EAASxD,EAAM6G,MAAMC,OAAOtD,OAG5BuD,EADS,IAAIC,gBAAgBC,OAAOC,SAASC,UACxBjE,IAAI,eAC/BkE,QAAQC,IAAI,kFAAyEN,GACrF,IAAAO,EAAsCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,EAAe,SAACC,GAClB,IAAMC,EAAO,IAAI9I,KAGjB,OAFA8I,EAAKC,SAASF,EAAc,GAErBC,EAAKE,eAAe,QAAS,CAAEjE,MAAO,UAYjD,OATAkE,qBAAU,WAC0B,SAAAC,IAI/B,OAJ+BA,EAAAC,YAAAC,IAAAC,MAAhC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC4CC,EAAYxC,gBAAgB7C,EAAQuD,GAAa,KAAD,EAAAwB,EAAAG,EAAAI,KAA1EN,EAAeD,EAArBQ,KACR3B,QAAQC,IAAI,sFAA6EmB,GACzFb,EAAea,GAAiB,wBAAAE,EAAAM,UAAAV,QACnCW,MAAA,KAAAxD,YALY,WACmByC,EAAAe,MAAC,KAADxD,WAKhCyD,KACD,IAGCzK,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC3BC,cAACM,EAAU,CAACE,UAAU,oBACrBqI,EAAYhC,OAAS,GAClB7G,cAAA,OAAKH,UAAU,MAAKE,SACf8I,EAAYyB,KAAI,SAACpF,GAAK,OACnBlF,cAAA,OAAKH,UAAU,aAAYE,SACvBH,eAAA,OAAKC,UAAU,qBAAoBE,SAAA,CAC/BC,cAAA,KAAGH,UAAU,yCAAwCE,SAAEgJ,EAAa7D,EAAMxC,OAC1E1C,cAAA,OAAKH,UAAU,oBAAmBE,SAC9BH,eAAA,OAAKC,UAAU,QAAOE,SAAA,CAClBC,cAAA,OAAKH,UAAU,2BAA0BE,SACrCC,cAAA,OACIC,IAAG,GAAAW,OAAKC,KAAQD,OAAGsE,EAAMqF,QAAQ,GAAGrH,OACpChD,IAAI,SACJL,UAAU,WAGlBD,eAAA,OAAKC,UAAU,yDAAwDE,SAAA,CACnEH,eAAA,KAAGC,UAAU,aAAYE,SAAA,CAAC,KAAGmF,EAAMqF,QAAQ,GAAGpH,QAC9CvD,eAAA,KAAGC,UAAU,eAAcE,SAAA,CAAC,iBACVC,cAAA,QAAAD,SAAOmF,EAAMqF,QAAQ,GAAGC,iBAE1C5K,eAAA,KAAGC,UAAU,GAAEE,SAAA,CAAC,gBAAcmF,EAAMqF,QAAQ,GAAGvE,cAC/CpG,eAAA,KAAGC,UAAU,GAAEE,SAAA,CAAC,gBAAcmF,EAAMqF,QAAQ,GAAGE,6BAI3DzK,cAAA,KAAGH,UAAU,qBAAoBE,SAC7BH,eAACc,IAAI,CACDb,UAAU,gBACVc,GAAE,8BAAAC,OAAgC+D,EAAM,YAAA/D,OACpCsE,EAAMxC,IAAG,uCAAA9B,OACyBmI,EAClC7D,EAAMxC,KACT,wHAAuH3C,SAAA,CAC3H,mBACmBC,cAAC0K,IAAmB,uB,iDCxD7DC,EAVD,SAAHpK,GAAyC,IAAnC4C,EAAI5C,EAAJ4C,KAAMyH,EAAKrK,EAALqK,MAAO5G,EAAKzD,EAALyD,MAAU6G,EAAIC,YAAAvK,EAAA,0BAC1C,OACEX,eAAA,OAAKC,UAAU,cAAaE,SAAA,CAC1BC,cAAA,SAAO+K,QAAS5H,EAAKpD,SAAE6K,IACvB5K,cAAA,QAAAgL,wBAAA,GAAWH,GAAI,IAAE1H,KAAMA,EAAMrD,GAAIqD,EAAMtD,UAAU,kBAChDmE,GAAShE,cAAA,QAAMH,UAAU,cAAaE,SAAEiE,QCkEhCiH,EArEL,SAAAC,GAAAlK,YAAAiK,EAAAC,GAAA,IAAAjK,EAAAC,YAAA+J,GAAA,SAAAA,IAAA,IAAA7J,EAAAC,YAAA,KAAA4J,GAAA,QAAAE,EAAAvE,UAAAC,OAAAuE,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA1E,UAAA0E,GA2CN,OA3CMlK,EAAAH,EAAAK,KAAA8I,MAAAnJ,EAAA,OAAAL,OAAAwK,KACR7J,MAAQ,CACN2I,KAAM,GACNqB,OAAQ,IACTnK,EAEDoK,SAAW,WACT,IACQxH,EAAUyH,IAAID,SAASpK,EAAKG,MAAM2I,KAAM9I,EAAKsK,OADrC,CAAEC,YAAY,IACtB3H,MACR,IAAKA,EAAO,OAAO,KAEnB,IAC8B4H,EADxBL,EAAS,GAAGM,EAAAC,YACD9H,EAAMf,SAAO,IAA9B,IAAA4I,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAA,KAASC,EAAIN,EAAAjK,MAAmB4J,EAAOW,EAAKC,KAAK,IAAMD,EAAKE,SAAQ,MAAAC,GAAAR,EAAAS,EAAAD,GAAA,QAAAR,EAAAU,IACpE,OAAOhB,GACRnK,EAEDoL,iBAAmB,SAAAjM,GAAsB,IAAnB4C,EAAI5C,EAAJ4C,KAAMxB,EAAKpB,EAALoB,MACpB8K,EAAGC,YAAA,GAAMvJ,EAAOxB,GAChB+J,EAAMgB,YAAA,GAAMvJ,EAAO/B,EAAKsK,OAAOvI,IAC7Ba,EAAUyH,IAAID,SAASiB,EAAKf,GAA5B1H,MACR,OAAOA,EAAQA,EAAMf,QAAQ,GAAGmJ,QAAU,MAC3ChL,EAEDuL,aAAe,SAACL,GACdA,EAAEM,iBAEF,IAAMrB,EAASnK,EAAKoK,WACpBpK,EAAKS,SAAS,CAAE0J,OAAQA,GAAU,KAC9BA,GAEJnK,EAAKyL,YACNzL,EAED0L,aAAe,SAAAC,GAA+B,IAAbC,EAAKD,EAApBE,cACV1B,EAAMP,YAAA,GAAQ5J,EAAKG,MAAMgK,QACzB2B,EAAe9L,EAAKoL,iBAAiBQ,GACvCE,EAAc3B,EAAOyB,EAAM7J,MAAQ+J,SAC3B3B,EAAOyB,EAAM7J,MAEzB,IAAM+G,EAAIc,YAAA,GAAQ5J,EAAKG,MAAM2I,MAC7BA,EAAK8C,EAAM7J,MAAQ6J,EAAMrL,MAEzBP,EAAKS,SAAS,CAAEqI,OAAMqB,YACvBnK,EAuBA,OAvBAK,YAAAwJ,EAAA,EAAAvJ,IAAA,eAAAC,MAED,SAAaiJ,GACX,OACE5K,cAAA,UAAQmN,SAAUvL,KAAK4J,WAAY3L,UAAU,kBAAiBE,SAC3D6K,MAGN,CAAAlJ,IAAA,cAAAC,MAED,SAAYwB,EAAMyH,GAAuB,IAAhBwC,EAAIxG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAC9ByG,EAAyBzL,KAAKL,MAAtB2I,EAAImD,EAAJnD,KAAMqB,EAAM8B,EAAN9B,OAEd,OACEvL,cAAC2K,EAAK,CACJyC,KAAMA,EACNjK,KAAMA,EACNxB,MAAOuI,EAAK/G,GACZyH,MAAOA,EACP0C,SAAU1L,KAAKkL,aACf9I,MAAOuH,EAAOpI,SAGnB8H,EAlEO,CAAS3H,a,SCAbiK,EAAW,QA0ChB,SAAAC,IAAA,OAAAA,EAAAlE,YAAAC,IAAAC,MAHM,SAAAC,EAAqBgE,EAAOC,GAAQ,IAAAC,EAAAzD,EAAA,OAAAX,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClBnF,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,SAAS,CAAE4I,QAAOC,aAAY,KAAD,EAAAC,EAAA9D,EAAAI,KAA/DC,EAAIyD,EAAJzD,KACRvG,aAAaiK,QAAQL,EAAUrD,EAAK2D,OAAO,wBAAAhE,EAAAM,UAAAV,QAC5CW,MAAA,KAAAxD,WAKA,SAAAkH,IAAA,OAAAA,EAAAxE,YAAAC,IAAAC,MAHM,SAAAuE,EAA2BN,EAAOI,GAAK,IAAAG,EAAA9D,EAAA,OAAAX,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACrBnF,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,gBAAgB,CAAE4I,QAAOI,UAAS,KAAD,EAAAG,EAAAC,EAAAhE,KAAnEC,EAAI8D,EAAJ9D,KACRvG,aAAaiK,QAAQL,EAAUrD,EAAK2D,OAAO,wBAAAI,EAAA9D,UAAA4D,QAC5C3D,MAAA,KAAAxD,WAEc,OACbsH,MAXK,SAAoBC,EAAAC,GAAA,OAAAZ,EAAApD,MAAC,KAADxD,YAYzByH,YAPK,SAA0BC,EAAAC,GAAA,OAAAT,EAAA1D,MAAC,KAADxD,YAQ/B4H,eA1CK,WACL,IACE,IAAMC,EAAM9K,aAAaC,QAAQ2J,GACjC,OAAOmB,YAAUD,GACjB,MAAOE,GACP,OAAO,OAsCTC,OA/CK,WACLjL,aAAakL,WAAWtB,IA+CxBuB,OApDK,WACL,OAAOnL,aAAaC,QAAQ2J,IAoD5BwB,eApCK,WACL,OAAOnK,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,eAoCzBmK,gBA5BK,SAAyBxM,GAC9B,IAAMwC,EAAMxC,EAAKE,IAEjB,OAAOkC,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,WAAAjE,OAAUoE,GAAOxC,IA0B1CyM,kBAvBK,SAA2BzM,EAAM0H,GAEtC,OADA3B,QAAQC,IAAI,MAAOhG,EAAKE,KACjBkC,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,qBAAAjE,OAAoB4B,EAAKE,KAAOwH,IAsBzDgF,iBAlCK,SAA0BlK,GAC/B,OAAOJ,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,wBAAAjE,OAAuBoE,M,gBC6DnCmK,EAlFH,SAAAC,GAAApO,YAAAmO,EAAAC,GAAA,IAAAnO,EAAAC,YAAAiO,GAAA,SAAAA,IAAA,IAAA/N,EAAAC,YAAA,KAAA8N,GAAA,QAAAhE,EAAAvE,UAAAC,OAAAuE,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA1E,UAAA0E,GA0CT,OA1CSlK,EAAAH,EAAAK,KAAA8I,MAAAnJ,EAAA,OAAAL,OAAAwK,KACV7J,MAAQ,CACN2I,KAAM,CAAEuD,MAAO,GAAIC,SAAU,IAC7BnC,OAAQ,IACTnK,EAEDsK,OAAS,CACP+B,MAAOhC,IAAI4D,SAASC,WAAW7B,QAAQ7C,MAAM,SAC7C8C,SAAUjC,IAAI4D,SAASC,WAAWC,IAAI,GAAG3E,MAAM,aAChDxJ,EAEDoO,YAAW,eAAAjP,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,EAAOgG,GAAU,OAAAlG,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAErB2F,EAAYrB,YAChBoB,EAAWE,WAAWlC,MACtBgC,EAAWG,SACX,KAAD,EAEDxH,OAAOC,SAAW,IAAIwB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAgG,GAAAhG,EAAA,SAElBA,EAAAgG,GAAG/L,UAAmC,MAAvB+F,EAAAgG,GAAG/L,SAASG,QAC7B7C,EAAKS,SAAS,CAAE0J,OAAQ,CAAEkC,MAAO5D,EAAAgG,GAAG/L,SAASoG,QAC9C,wBAAAL,EAAAM,UAAAV,EAAA,kBAEJ,gBAAA0E,GAAA,OAAA5N,EAAA6J,MAAA,KAAAxD,YAbU,GAaVxF,EAEDyL,SAAQvD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAA+B,EAAArC,EAAAC,EAAA,OAAAnE,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OACc,OADd+F,EACmB1O,EAAKG,MAAM2I,KAA/BuD,EAAKqC,EAALrC,MAAOC,EAAQoC,EAARpC,SAAQO,EAAAnE,KAAA,EAAAmE,EAAAlE,KAAA,EAEf2F,EAAYxB,MAAMT,EAAOC,GAAU,KAAD,EAGxCtF,OAAOC,SAAW,IAIlB4F,EAAAlE,KAAA,gBAAAkE,EAAAnE,KAAA,EAAAmE,EAAA4B,GAAA5B,EAAA,SAEIA,EAAA4B,GAAG/L,UAAmC,MAAvBmK,EAAA4B,GAAG/L,SAASG,QAC7B7C,EAAKS,SAAS,CAAE0J,OAAQ,CAAEkC,MAAOQ,EAAA4B,GAAG/L,SAASoG,QAC9C,yBAAA+D,EAAA9D,UAAA4D,EAAA,kBAEJ3M,EAqCA,OArCAK,YAAA0N,EAAA,EAAAzN,IAAA,SAAAC,MAED,WACE,OAAI+N,EAAYlB,iBAAyBxO,cAAC+P,IAAQ,CAACpP,GAAG,MAGpDf,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,YACtBR,cAAA,OAAKH,UAAU,MAAKE,SAClBC,cAAA,OAAKH,UAAU,SAAQE,SACrBC,cAAA,KAAGH,UAAU,eAAcE,SAAC,gDAKhCC,cAACgQ,cAAW,CACVC,SAAS,2EACTC,UAAWtO,KAAK4N,cAElBxP,cAAA,OAAKH,UAAU,MAAKE,SAClBH,eAAA,OAAKC,UAAU,WAAUE,SAAA,CACvBH,eAAA,QAAMuQ,SAAUvO,KAAK+K,aAAcyD,aAAa,MAAMC,OAAO,OAAMtQ,SAAA,CAChE6B,KAAK0O,YAAY,QAAS,QAAS,SACnC1O,KAAK0O,YAAY,WAAY,WAAY,YACzC1O,KAAK2O,aAAa,cAErB3Q,eAAA,KAAGC,UAAU,eAAcE,SAAA,CAAC,+BAE1BC,cAAA,SAAM,sBAENA,cAAA,SAAM,iCAOjBmP,EA/ES,CAASlE,GCMNuF,GAXH,SAAAtF,GAAAlK,YAAAwP,EAAAtF,GAAA,IAAAjK,EAAAC,YAAAsP,GAAA,SAAAA,IAAA,OAAAnP,YAAA,KAAAmP,GAAAvP,EAAAmJ,MAAA,KAAAxD,WAQT,OARSnF,YAAA+O,EAAA,EAAA9O,IAAA,oBAAAC,MACV,WACE+N,EAAYd,SACZxG,OAAOC,SAAW,MACnB,CAAA3G,IAAA,SAAAC,MAED,WACE,OAAO,SACR6O,EARS,CAASlN,a,kBCMfmN,GAAmBC,KAAW,CAClCtN,SAAUsN,OAAapB,SAAS,YAChCpM,MAAOwN,SAiHMC,GA9GE,WACf,IAAAlI,EAAoBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzBmI,EAAEjI,EAAA,GAAEkI,EAAKlI,EAAA,GAChBS,qBAAU,YACI,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAqH,EAAA,OAAAvH,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACO2F,EAAYX,iBAAiB,KAAD,EAChD+B,GADIA,EAAOjH,EAAAI,MACOC,KAClB2G,EAAMC,GAAS,wBAAAjH,EAAAM,UAAAV,OAChB,kBAJW,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAKZmK,KACC,IAEH,IAAMZ,EAAQ,eAAApD,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,EAAOiD,EAAQC,GAAa,IAAA/G,EAAA,OAAAX,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OAQ1C,OAPDkH,EAAcC,eAAc,IACxBhH,EAAO,IAAIiH,UACVC,OAAO,MAAOJ,EAAOtO,KAC1BwH,EAAKkH,OAAO,WAAYJ,EAAO5N,UAE3B4N,EAAO9N,OACTgH,EAAKkH,OAAO,QAASJ,EAAO9N,OAC7B+K,EAAAnE,KAAA,EAAAmE,EAAAlE,KAAA,EAGO2F,EAAYT,kBAAkB+B,EAAQ9G,GAAM,KAAD,EACjD9B,OAAOC,SAAQ,cAAAzH,OAAiBoQ,EAAOtO,KACvCwB,YAAM,8BAA8B+J,EAAAlE,KAAA,iBAAAkE,EAAAnE,KAAA,GAAAmE,EAAA4B,GAAA5B,EAAA,SAEhCA,EAAA4B,GAAG/L,UAAmC,MAAvBmK,EAAA4B,GAAG/L,SAASG,SAC7BoN,EAAU,CAAE5D,MAAO,yBACnBlF,QAAQvE,MAAKiK,EAAA4B,KACd,yBAAA5B,EAAA9D,UAAA4D,EAAA,mBAEJ,gBApBaI,EAAAC,GAAA,OAAArB,EAAA3C,MAAA,KAAAxD,YAAA,GAsBR0K,EAAc,CAClBlO,SAAUwN,EAAGxN,SACbF,MAAO0N,EAAG1N,MACVR,IAAKkO,EAAGlO,KAGV6O,EAA4B7I,mBAAS,CAAEtF,SAAU,GAAIF,MAAO,KAAKsO,EAAA5I,YAAA2I,EAAA,GAA1DhG,EAAMiG,EAAA,GAAEH,EAASG,EAAA,GAExB,OACE5R,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,cACtBR,cAACyR,KAAM,CACLC,oBAAkB,EAClBC,cAAeL,EACfb,iBAAkBA,GAClBN,SAAUA,EACVyB,iBAAe,EAAA7R,SAEd,SAAC8R,GACA,OACE7R,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,eAACqL,KAAI,CAAAlL,SAAA,CACHH,eAAA,OAAKC,UAAU,8CAA6CE,SAAA,CAC1DC,cAAA,SAAO+K,QAAQ,YAAWhL,SAAC,cAC3BC,cAAC8R,KAAK,CAAC1E,KAAK,OAAOtN,GAAG,WAAWqD,KAAK,aACtCnD,cAAC+R,KAAY,CACX5O,KAAK,WACL6O,UAAU,MACVnS,UAAU,aAGdG,cAAA,OAAKH,UAAU,sBAAqBE,SAClCC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAG0Q,EAAYpO,OAC/BhD,IAAI,OACJL,UAAU,kBAGdD,eAAA,OAAKC,UAAU,kDAAiDE,SAAA,CAC9DC,cAAA,SAAO+K,QAAQ,QAAOhL,SAAC,iBACvBC,cAAA,SACEH,UAAU,qBACVuN,KAAK,OACLjK,KAAK,QACLmK,SAAU,SAAC2E,GACTJ,EAAOK,cAAc,QAASD,EAAME,OAAOC,MAAM,OAGrDpS,cAAA,QAAMH,UAAU,QAAOE,SAAEwL,EAAOrI,WAElCtD,eAAA,OAAKC,UAAU,yCAAwCE,SAAA,CACrDC,cAAA,UACEoN,KAAK,SACLvN,UAAU,kBACVsN,UAAW0E,EAAOQ,SAAWR,EAAOS,aAAavS,SAClD,mBAGDC,cAACU,IAAI,CACH0M,KAAK,SACLvN,UAAU,yBACVc,GAAE,aAAAC,OAAegQ,EAAGlO,KAAM3C,SAC3B,mCCrFNwS,I,OArBQ,SAAHhS,GAAUA,EAAJ4L,KAAmD,IAAlC7I,EAAS/C,EAApByR,UAAsBQ,EAAMjS,EAANiS,OAAW3H,EAAIC,YAAAvK,EAAA,+BAC7DkS,EAAc/C,EAAYlB,iBAChC,OACExO,cAAC0S,IAAK1H,wBAAA,GACAH,GAAI,IACR2H,OAAQ,SAACrR,GACP,OAAKsR,EASEnP,EAAYtD,cAACsD,EAAS0H,YAAA,GAAK7J,IAAYqR,EAAOrR,GAPjDnB,cAAC+P,IAAQ,CACPpP,GAAI,CACF2H,SAAU,UACV/G,MAAO,CAAEoR,KAAMxR,EAAMkH,mBCoCtB,QACbuK,WAlCK,SAAoBC,GACzB,OAAOjO,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,UAAUgO,IAkCpCC,UA/BK,WACL,OAAOlO,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,qBA+BzBkO,QAnDK,SAAiBpO,GACtB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,WAAAjE,OAAU+D,KAmDnCqO,SA3CK,SAAkBH,GACvB,IAAMlO,EAASkO,EAAKnQ,IAEpB,cADOmQ,EAAKnQ,IACLkC,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,WAAAjE,OAAU+D,GAAUkO,IAyC7CI,WA3BK,SAAoBtO,GACzB,OAAOC,EAAKH,OAAO,GAAD7D,OAAIiE,IAAM,WAAAjE,OAAU+D,KA2BtCuO,gBAjDK,SAAyBC,GAC9B,OAAOvO,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,mBAAAjE,OAAkBuS,KAiD3CC,qBAzBK,SAA8BD,EAAYE,EAAU1O,GACzD,OAAOC,EAAKH,OAAO,GAAD7D,OACbiE,IAAM,gCAAAjE,OAA+BuS,EAAU,KAAAvS,OAAIyS,GACtD,CAAEnJ,KAAM,CAAEvF,OAAQA,MAuBpB2O,mBAnBK,SAA4B3O,EAAQ4O,GACzC,OAAO3O,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,2BAAAjE,OAA0B+D,EAAM,KAAA/D,OAAI2S,KAmB7DC,WAbK,SAAoB7O,GACzB,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,sBAAAjE,OAAqB+D,M,sCCRjC8O,GApCQ,SAAHlT,GAA6B,IAAvBmF,EAAMnF,EAANmF,OAAQgO,EAAOnT,EAAPmT,QAChCjL,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCkL,EAAOhL,EAAA,GAAEiL,EAAUjL,EAAA,GAS1B,OARAS,qBAAU,YACe,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAoK,EAAA,OAAAtK,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAY3D,oBAAoBX,GAAQ,KAAD,EAA5DmO,EAAYhK,EAAAI,KAClB2J,EAAWC,EAAa3J,MAAM,wBAAAL,EAAAM,UAAAV,OAC/B,kBAHsB,OAAAsD,EAAA3C,MAAA,KAAAxD,aAAA,EAIvBkN,KACC,CAACJ,EAAQK,gBAAgBlN,SAG1BjH,eAAA,OAAKC,UAAU,sBAAqBE,SAAA,CAClCC,cAACM,EAAU,CAACE,UAAU,oBACrBmT,EAAQ9M,OAAS,GAChB7G,cAAA,MAAIH,UAAU,+BAA8BE,SACzC4T,EAAQrJ,KAAI,SAAC0J,GAAI,OAChBpU,eAAA,MAAIC,UAAU,SAASC,GAAG,cAAaC,SAAA,CACrCC,cAAA,KAAGF,GAAG,cAAaC,SAAEiU,EAAKC,aAC1BjU,cAAA,KAAGF,GAAG,iBAAgBC,SAAEiU,EAAKE,gBAC7BlU,cAAA,KAAGF,GAAG,cAAaC,SAChB,IAAII,KAAK6T,EAAKG,MAAMhL,eAAe,QAAS,CAC3CiL,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,QAR+BP,EAAKG,WAevDR,EAAQ9M,OAAS,GAAK7G,cAAA,KAAGH,UAAU,eAAcE,SAAC,uBCiO1CyU,GAtPF,SAAHjU,GAAwD,IAAlDsS,EAAItS,EAAJsS,KAAM4B,EAAUlU,EAAVkU,WAAYC,EAAMnU,EAANmU,OAAQlS,EAAIjC,EAAJiC,KAAM2Q,EAAU5S,EAAV4S,WAC9C1K,EAAsCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CkM,EAAWhM,EAAA,GAAEiM,EAAcjM,EAAA,GAClC4I,EAAgC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAArCsD,EAAQrD,EAAA,GAAEsD,EAAWtD,EAAA,GAC5BuD,EAA8BrM,oBAAS,GAAMsM,EAAApM,YAAAmM,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACtBG,EAAUtC,EAAKtI,QAAQ6K,QAAO,SAAC9I,GAAC,OAAKA,EAAE5J,MAAQmQ,EAAKwC,WAExDjM,qBAAU,YACS,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAjE,EAAA,OAAA+D,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,EAAYpE,WAAW8O,GAAQ,KAAD,EAAvC,OAAJlP,EAAIqE,EAAAI,KAAAJ,EAAAE,KAAA,EACKvE,EAAK0E,KAAK,GAAG,KAAD,EAAzB1E,EAAIqE,EAAAI,KACJ6K,EAAYtP,GACLoP,EAAPpP,EAAsBA,EAAK+E,QAA0B,IACjD/E,IAASA,EAAK1D,QAAyB,MAAf0D,EAAK1D,UAC/B0D,EAAOA,EAAK+E,QAAQ+K,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAE7B,QAAU4B,EAAE5B,YAAS,wBAAA9J,EAAAM,UAAAV,OAC7D,kBAPgB,OAAAsD,EAAA3C,MAAA,KAAAxD,aAAA,EASjB6O,KACC,IAEH,IAIMrC,EAAoB,eAAAsC,EAAApM,YAAAC,IAAAC,MAAG,SAAAmM,EAAOxC,EAAYE,EAAU1O,GAAM,OAAA4E,IAAAK,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,OAC9D8L,KAAKC,KAAK,CACRC,MAAO,yDACPC,KAAM,6BACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,QAClBC,KAAI,eAAAC,EAAAjN,YAAAC,IAAAC,MAAC,SAAAuE,EAAOyI,GAAM,OAAAjN,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,WACfyM,EAAOC,YAAY,CAADxI,EAAAlE,KAAA,eAAAkE,EAAAlE,KAAA,EACd2M,GAAYtD,qBAAqBD,EAAYE,EAAUqB,GAAQ,KAAD,EACpEtM,OAAOC,SAASsO,SAChBzS,IAAM0S,QAAQ,6BAA8B,CAC1CC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrQ,IACT,wBAAAmH,EAAA9D,UAAA4D,OAEN,gBAAAQ,GAAA,OAAAgI,EAAAnM,MAAA,KAAAxD,YAdM,IAcJ,wBAAAgP,EAAAzL,UAAAwL,OACJ,gBAxByBxH,EAAAC,EAAAE,GAAA,OAAAoH,EAAAtL,MAAA,KAAAxD,YAAA,GAyB1B,OACE5G,cAAA,OAAKH,UAAU,iDAAgDE,SAC7DH,eAAA,OAAKC,UAAU,OAAME,SAAA,CACnBC,cAAA,OACEH,UAAU,eACVI,IAAG,GAAAW,OAAKC,KAAQD,OAAGiS,EAAKuE,WACxBlX,IAAK2S,EAAK1P,KACVkU,MAAO,IACPC,OAAQ,MAEV1X,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAAA,MAAIH,UAAU,eAAcE,SAAE8S,EAAK1P,OACnCvD,eAAA,KAAGC,UAAU,iBAAgBE,SAAA,CAC3BH,eAAA,UAAAG,SAAA,CACEC,cAAA,KAAAD,SAAG,iBACHC,cAAA,QAAMH,UAAU,eAAcE,SAAE8S,EAAKM,gBAEvCnT,cAAA,SACAA,cAAA,QAAMF,GAAG,QAAOC,SAAC,wEAInBC,cAAA,KAAGH,UAAU,OAAME,SACjBH,eAAA,KAAAG,SAAA,CACEC,cAAA,KAAGH,UAAU,aAAYE,SAAC,kBAC1BC,cAAA,QAAMH,UAAU,wBAAuBE,SACpCoV,EAAQ,GAAG/R,gBAKjByR,GACCjV,eAAA,OAAKC,UAAU,aAAYE,SAAA,CACzBH,eAACc,IAAI,CACHb,UAAU,GACV0X,cAAY,UACZC,iBAAe,MACfzB,MAAM,0CACNpV,GAAE,UAAAC,OAAYiU,EAASnS,KACvB+U,YAAY,MAAK1X,SAAA,CAClB,uBAECC,cAAA,KAAGH,UAAU,sCAEfG,cAAA,SACAA,cAAA,QAAMH,UAAU,aAAYE,SAC1BC,cAAA,KAAAD,SAAG,gBAELH,eAAA,OAAKC,UAAU,oCAAoCC,GAAG,WAAUC,SAAA,CAC9DH,eAAA,MAAIC,UAAU,gBAAeE,SAAA,CAC3BH,eAAA,MACEE,GAAG,eACHD,UAAU,oCACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFH,eAAA,KAAAG,SAAA,CAAG,YAAU8U,EAASnS,OACtB1C,cAAA,KAAAD,SAAA,GAAAa,OACM,IAAIT,KAAK0U,EAAS+C,WAAWC,mBAC/B,QACA,CAAEzD,KAAM,UAAWC,OAAQ,UAAWE,QAAQ,OAGlD3U,eAAA,OACEC,UAAU,4CACVC,GAAG,QAAOC,SAAA,CAEVC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,kBAGN4U,GACCA,EAAY9N,OAAS,GACrB8N,EAAYrK,KAAI,SAACwN,GAAM,OACrBlY,eAAA,MAAIC,UAAU,WAA2BC,GAAG,cAAaC,SAAA,CACvDC,cAAA,OAAKH,UAAU,gBAAeE,SAC5BC,cAAA,OACEC,IACE0U,EAAY9N,OAAS,EAAC,GAAAjG,OACfC,KAAQD,OAAGkX,EAAO5U,OACrB,GAENhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,eAAeC,GAAG,YAAWC,SACzC4U,EAAY9N,OAAS,EAAIiR,EAAO3U,KAAO,KAE1CnD,cAAA,OAAKH,UAAU,aAAYE,SACxB4U,EAAY9N,OAAS,EAAIiR,EAAOnE,QAAU,OAfjBmE,EAAOhY,UAoB1C+U,EAASnS,KACR1C,cAACyT,GAAc,CAAC/N,OAAQmP,EAASnS,IAAKgR,QAASmB,UAKvDjV,eAAA,OAAKC,UAAU,0DAAyDE,SAAA,CACtEH,eAACc,IAAI,CACHb,UAAU,sBACV0X,cAAY,UACZC,iBAAe,MACf7W,GAAE,iBAAAC,OAAmBiS,EAAKnQ,KAAM3C,SAAA,CACjC,sBAECC,cAAC+X,KAAW,CAAClY,UAAU,SACvBG,cAAA,KAAGH,UAAU,sCAEfD,eAACc,IAAI,CACHb,UAAU,iBACV0X,cAAY,UACZC,iBAAe,MACf7W,GAAE,iBAAAC,OAAmBiS,EAAKnQ,KAAM3C,SAAA,CACjC,aAECC,cAACgY,KAAS,CAACnY,UAAU,SACrBG,cAAA,KAAGH,UAAU,sCAEdsV,EAAQ,GAAGzS,MAAQF,EAAKE,KACvB9C,eAAA,UACEwN,KAAK,SACLvN,UAAU,8BACVsC,QAAS,WA7JrB+S,GAAYD,IA6JsClV,SAAA,CAEtCC,cAACiY,IAAU,CAACnQ,MAAM,MAAMjI,UAAU,KAAK,iCAM7CD,eAAA,OAAKC,UAAU,aAAYE,SAAA,CACzBC,cAAA,UAAAD,SACEC,cAAA,KAAAD,SAAG,eAELC,cAAA,MAAIH,UAAU,YAAYC,GAAG,cAAaC,SACvC8S,EAAKtI,QAAQD,KAAI,SAACwN,GAAM,OACvBlY,eAAA,MAEEC,UAAU,wBACVC,GAAG,eAAcC,SAAA,CAEjBC,cAAA,KAAGF,GAAG,qBAAoBC,SAAE+X,EAAO1U,WAEnCpD,cAACgD,IAAM,CACL/C,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAC1BhD,IAAK4X,EAAO3U,OAGbgS,EAAQ,GAAGzS,MAAQF,EAAKE,KACvBuS,GACA6C,EAAOpV,MAAQyS,EAAQ,GAAGzS,KACxB9C,eAAA,KACEC,UAAU,8BACVsC,QAAS,kBACPiR,EAAqBD,EAAY2E,EAAOpV,IAAKgS,IAC9C3U,SAAA,CAEDC,cAAA,KAAGH,UAAU,sBAAwB,+BApBtCiY,EAAOpV,cA4BlBmS,GACAjV,eAACc,IAAI,CACHb,UAAU,2BACVc,GAAE,aAAAC,OAAeiS,EAAKnQ,KAAM3C,SAAA,CAC7B,mBAECC,cAACkY,IAAe,CAACrY,UAAU,SAC3BG,cAAA,KAAGH,UAAU,sCAIjBD,eAAA,KAAGC,UAAU,4BAA2BE,SAAA,CAAC,cAC3B,IAAII,KAAK0S,EAAK+E,WAAWC,mBAAmB,YAE1D7X,cAAA,KAAGH,UAAU,eAAcE,SACzBH,eAACc,IAAI,CAACyB,QAASsS,EAAY9T,GAAG,YAAYd,UAAU,cAAaE,SAAA,CAC/DC,cAAA,KAAGH,UAAU,0BAA4B,4BC7JxCsY,GAnFC,WACd,IAAA1P,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/B2P,EAAKzP,EAAA,GAAE0P,EAAQ1P,EAAA,GACtB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7B/O,EAAIgP,EAAA,GAAE8G,EAAO9G,EAAA,GAEpBpI,qBAAU,YACQ,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA8O,EAAArO,EAAA0G,EAAA,OAAArH,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACM2M,GAAY5D,YAAY,KAAD,EAC/B,OAD+ByF,EAAA1O,EAAAI,KAAtCC,EAAIqO,EAAJrO,KACRmO,EAASnO,GAAML,EAAAE,KAAA,EACE2F,EAAYlB,iBAAiB,KAAD,EAAvCoC,EAAE/G,EAAAI,KACRqO,EAAQ1H,GAAI,wBAAA/G,EAAAM,UAAAV,OACb,kBALe,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAMhB4R,KACC,IA8BH,OACE5Y,eAAA,OAAKC,UAAU,kBAAiBE,SAAA,CAC9BC,cAACM,EAAU,CAACE,UAAU,kBAEtBR,cAAA,OAAKH,UAAU,8BAA6BE,SAC1CC,cAAA,OAAKC,IAAKY,IAAW,uBAAwBX,IAAI,iBAGnDN,eAAA,OAAKC,UAAU,MAAKE,SAAA,CAClBH,eAAA,OAAKC,UAAU,iCAAgCE,SAAA,CAC7CC,cAACU,IAAI,CAACb,UAAU,kBAAkBc,GAAG,eAAcZ,SAAC,oBAGpDC,cAACU,IAAI,CAACb,UAAU,kBAAkBc,GAAG,aAAYZ,SAAC,6BAIpDC,cAAA,KAAGH,UAAU,uCAAsCE,SAAC,uEAGpDC,cAAA,KAAGH,UAAU,6BAA4BE,SACtCqY,EAAMvR,OAAS,GAAK7G,cAAA,QAAAD,SAAM,2CAG/BC,cAAA,OAAKH,UAAU,MAAKE,SACjBqY,EAAMvR,OAAS,GACduR,EAAM9N,KAAI,SAACuI,GAAI,OACb7S,cAACwU,GAAI,CAEH3B,KAAMA,EACN6B,OAAQ7B,EAAKnQ,IACbF,KAAMA,EACN2Q,WAAYN,EAAKM,WACjBsB,WAAY,kBA7DP,SAACC,GAChB,IAAI+D,EAAaL,EAAMhD,QAAO,SAACvC,GAAI,OAAKA,EAAKnQ,MAAQgS,KAEjDlS,EAAKE,MAAQ+V,EAAW,GAAGpD,QAC7BQ,KAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAM,wCAGRH,KAAKC,KAAK,CACRC,MAAO,6CACPC,KAAM,6BACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,QAClBC,MAAK,SAACE,GACP,GAAIA,EAAOC,YAAa,CACtB,IAAIiC,EAAUN,EAAMhD,QAAO,SAACvC,GAAI,OAAKA,EAAKnQ,MAAQgS,KAClDgC,GAAYzD,WAAWyB,GACvB2D,EAASK,GACTxU,YAAM,yCAsCgBuQ,CAAW5B,EAAKnQ,OAL7BmQ,EAAKnQ,cCHTiW,GAtEC,SAAAvJ,GAAApO,YAAA2X,EAAAvJ,GAAA,IAAAnO,EAAAC,YAAAyX,GAAA,SAAAA,IAAA,IAAAvX,EAAAC,YAAA,KAAAsX,GAAA,QAAAxN,EAAAvE,UAAAC,OAAAuE,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA1E,UAAA0E,GAsCZ,OAtCYlK,EAAAH,EAAAK,KAAA8I,MAAAnJ,EAAA,OAAAL,OAAAwK,KACd7J,MAAQ,CACN2I,KAAM,CACJ/G,KAAM,GACNyV,UAAW,IAEbrN,OAAQ,IACTnK,EAEDsK,OAAS,CACPhJ,IAAK+I,IAAI4D,SACTlM,KAAMsI,IAAI4D,SAASE,IAAI,GAAGsJ,IAAI,KAAKvJ,WACnCsJ,UAAWnN,IAAI4D,SAASE,IAAI,IAAIsJ,IAAI,MAAMC,MAAMC,MAAM,KACvD3X,EAeDyL,SAAQvD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAS,EAAA,OAAAX,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG,OAAJG,EAAS9I,EAAKG,MAAd2I,KAAIL,EAAAE,KAAA,EAEN2F,EAAYV,gBAAgB9E,GAAM,KAAD,EACvChG,YAAM,mBACN9C,EAAKD,MAAM6X,QAAQC,QAAQ,aAADrY,OAAcsJ,EAAKxH,MAAO,wBAAAmH,EAAAM,UAAAV,OACrDrI,EAED8X,aAAe,WACb9X,EAAKD,MAAM6X,QAAQG,KAAK,cACzB/X,EA6BA,OA7BAK,YAAAkX,EAAA,EAAAjX,IAAA,oBAAAC,MAAA,eAAAyX,EAAA9P,YAAAC,IAAAC,MAxBD,SAAAuE,IAAA,IAAAsL,EAAAnP,EAAA,OAAAX,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACyB2F,EAAYX,iBAAiB,KAAD,EAAAsK,EAAApL,EAAAhE,KAA3CC,EAAImP,EAAJnP,KAERtI,KAAKC,SAAS,CAAEqI,KAAMtI,KAAK0X,eAAepP,KAAS,wBAAA+D,EAAA9D,UAAA4D,EAAA,UACpD,yBAAAqL,EAAAhP,MAAA,KAAAxD,YAoBA,IApBA,CAAAlF,IAAA,iBAAAC,MAED,SAAemW,GACb,MAAO,CACLpV,IAAKoV,EAAOpV,IACZS,KAAM2U,EAAO3U,KACbyV,UAAWd,EAAOc,aAErB,CAAAlX,IAAA,SAAAC,MAcD,WACE,OACE/B,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,qBACtBR,cAAA,OAAKH,UAAU,MAAKE,SAClBC,cAAA,OAAKH,UAAU,SAAQE,SACrBC,cAAA,KAAAD,SAAG,sCAGPC,cAAA,OAAKH,UAAU,MAAKE,SAClBC,cAAA,OAAKH,UAAU,WAAUE,SACvBH,eAAA,QAAMuQ,SAAUvO,KAAK+K,aAAcyD,aAAa,MAAMC,OAAO,OAAMtQ,SAAA,CAChE6B,KAAK0O,YAAY,OAAQ,eAEzB1O,KAAK0O,YAAY,YAAa,gBAC9B1O,KAAK2O,aAAa,iBACnBvQ,cAAA,UACEH,UAAU,6BACVsC,QAASP,KAAKsX,aAAanZ,SAC5B,yBAQZ4Y,EAnEa,CAAS1N,GCKV+H,GATE,WACf,OACEpT,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,eAClBR,cAAA,UAAQ+V,MAAM,aAAa9V,IAAI,2DAA2DoX,MAAM,OAAOC,OAAO,c,SCuBzG,QACbiC,OA5BK,SAAgB/T,GACrB,OAAOZ,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,QAAQW,IA4BlCgU,YAzBK,SAAqB9T,GAC1B,OAAOd,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,SAAAjE,OAAQ8E,KAyBjC+T,UAtBK,SAAmB/T,GACxB,OAAOd,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,mBAAAjE,OAAkB8E,KAsB3CgU,kBAnBK,SAA2BC,GAChC,OAAO/U,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,kBAAAjE,OAAiB+Y,KAmB1CC,gBAhBK,SAAyBjV,GAC9B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,gBAAAjE,OAAe+D,KAgBxCkV,aAbK,SAAsBlV,GAC3B,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,sBAAAjE,OAAqB+D,KAa9CmV,cAVK,SAAuBpU,EAAQF,GACpC,OAAOZ,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,uBAAAjE,OAAsB8E,GAAUF,KCgB5CuU,GAzCA,SAAHxZ,GAA6C,IAAvCuX,EAAMvX,EAANuX,OAAQkC,EAAazZ,EAAbyZ,cAAeC,EAAQ1Z,EAAR0Z,SACvC,OACEja,cAAA,OAAKH,UAAU,2BAA2BC,GAAG,iBAAgBC,SAC3DH,eAAA,OAAKC,UAAU,sCAAqCE,SAAA,CAClDC,cAAA,OAAKH,UAAU,0CAAyCE,SACtDC,cAAA,OACEH,UAAU,kBACVwX,MAAM,MACNC,OAAO,MACPrX,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAC1BhD,IAAI,OAIRF,cAAA,OACEH,UACEoa,EAASC,MAAK,SAAC5N,GAAC,OAAKwL,EAAOpV,MAAQ4J,EAAExM,MAClC,mDACA,oCACLC,SAEDC,cAAA,MACEH,UAAU,+CACVC,GAAG,cAAaC,SAEf+X,EAAO1U,aAGZpD,cAAA,UACEoN,KAAK,SACLvN,UAAU,4DACVC,GAAG,eACHqC,QAAS6X,EAAcja,SACxB,6BC0FMoa,GArHO,SAAChZ,GACrB,IAAAsH,EAAwBC,mBAAS,CAACvH,EAAM6G,MAAMC,OAAOtD,SAAQgE,EAAAC,YAAAH,EAAA,GAAtDyB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAgC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAArC0I,EAAQzI,EAAA,GAAE6I,EAAW7I,EAAA,GAC5BuD,EAA8BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAnCuF,EAAOtF,EAAA,GAAEuF,EAAUvF,EAAA,GAC1BwF,EAAoB9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAAzB5J,EAAE6J,EAAA,GAAE5J,EAAK4J,EAAA,GAuCM,SAAAC,IAkCrB,OAlCqBA,EAAApR,YAAAC,IAAAC,MAAtB,SAAAuE,IAAA,IAAAvI,EAAAmV,EAAA,OAAApR,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OAEiB,GADC,IAAI6Q,MAA+B,sBAC3CC,OACHP,EAAQ,CAADrM,EAAAlE,KAAA,QAQT,OAPGvE,EAAO,CACT1D,QAAQ,EACRyI,QAAS0P,EACTa,UAAW5Q,EAAK/G,KAChB4X,QAAS7Q,EAAKxH,IACdsY,aAAcpK,EACdmD,gBAAiB,IAClB9F,EAAAlE,KAAA,EACKC,EAAYzE,QAAQC,GAAM8Q,MAAK,SAAC2E,GACpC,IAAI1V,EAAOyF,YAAA,GAAQiQ,EAAI/Q,MACvB3E,EAAQG,OAASH,EAAQ7C,WAClB6C,EAAQ7C,IACfwY,GAAW3B,OAAOhU,GAClBpE,EAAM6X,QAAQG,KAAK,UAADvY,OAAWqa,EAAI/Q,KAAKxH,SACrC,KAAD,EAAAuL,EAAAlE,KAAA,gBAQD,OANGvE,EAAO,CACT+E,QAAS0P,EACTa,UAAWR,EAAQQ,UACnBC,QAAST,EAAQS,QACjBrV,OAAQ4U,EAAQ5X,IAChBqR,gBAAiBuG,EAAQvG,iBAC1B9F,EAAAlE,KAAA,GACKC,EAAYrE,WAAW2U,EAAQ5X,IAAK8C,GAAM8Q,MAAK,SAAC2E,GACpDA,EAAI/Q,KAAKxE,OAASuV,EAAI/Q,KAAKxH,IAE3BwY,GAAWpB,cAAcQ,EAAQ5X,IAAK8C,GACtCrE,EAAM6X,QAAQG,KAAK,UAADvY,OAAWqa,EAAI/Q,KAAKxH,SACrC,KAAD,oBAAAuL,EAAA9D,UAAA4D,QAEL3D,MAAA,KAAAxD,WAED,OAzEAwC,qBAAU,YACU,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAc,EAAA/E,EAAA2V,EAAA,OAAA5R,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACfG,EAAKrD,OAAS,GAAC,CAAAgD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACK2M,GAAY3D,QAAQ7I,GAAM,KAAD,EAAlC,OAAPK,EAAOV,EAAAI,KAAAJ,EAAAE,KAAA,EACMC,EAAYpE,WAAWzE,EAAM6G,MAAMC,OAAOtD,QAAQ,KAAD,EAA1D,OAAJa,EAAIqE,EAAAI,KAAAJ,EAAAE,KAAA,EACmB2F,EAAYX,iBAAiB,KAAD,EAAnDoM,EAActR,EAAAI,KACpB2G,EAAG9Q,GAAKqb,EAAejR,KAAKxH,IAC5BkO,EAAGzN,KAAOgY,EAAejR,KAAK9G,SAC9ByN,EAAMD,GACFpL,EAAK0E,KAAKrD,OAAS,IACrBwT,EAAY7U,EAAK0E,KAAK,GAAGK,SACzBgQ,EAAW/U,EAAK0E,KAAK,KAGvBkQ,EAAQ7P,EAAQL,MAAM,yBAAAL,EAAAM,UAAAV,OAEzB,kBAfiB,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAgBlBwU,KACC,CAACja,EAAM6G,MAAMC,OAAOtD,OAAQuF,IAwD7BtK,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,qBACtBR,cAAA,MAAIH,UAAU,WAAUE,SAAEmK,EAAK/G,OAC/BvD,eAAA,MAAAG,SAAA,CAAI,eAAamK,EAAKiJ,cACtBnT,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGsJ,EAAKkN,WACxBlX,IAAKgK,EAAK/G,KACVkU,MAAM,MACNC,OAAO,QAETtX,cAAA,MAAIH,UAAU,mBAAkBE,SAAC,oCACjCC,cAAA,OAAKH,UAAU,gBAAeE,SAC3BmK,EAAKK,SACJL,EAAKK,QAAQD,KAAI,SAACwN,GAAM,OACtB9X,cAAC+Z,GAAM,CACLsB,SAAUnR,EAAK/G,KACf8W,SAAUA,EACVnC,OAAQA,EAERkC,cAAe,YAzE3B,SAAuB3G,EAAUlQ,EAAMD,GACxB,IAAI0X,MAA4B,mBACxCC,OACL,IAAM/C,EAAS,CACbhY,GAAIuT,EACJlQ,KAAMA,EACND,MAAOA,EACPyQ,QAAS,EACT2H,WAAY,EACZC,aAAc,EACdC,OAAQ,GAEVvB,EAASC,MAAK,SAAC5N,GAAC,OAAKwL,EAAOhY,KAAOwM,EAAExM,MACjCua,EAAYJ,EAAS7E,QAAO,SAAClJ,GAAI,OAAKA,EAAKpM,KAAOgY,EAAOhY,OACzDua,EAAY,GAADzZ,OAAA6a,aAAKxB,GAAQ,CAAEnC,KA4DlBkC,CAAclC,EAAOpV,IAAKoV,EAAO1U,SAAU0U,EAAO5U,SAF/C4U,EAAOpV,UAOnBuX,EAASpT,OAAS,GACjB7G,cAAA,UAAQH,UAAU,6BAA6BsC,QAjEpD,WAEqB,OAAAuY,EAAAtQ,MAAC,KAADxD,YA+DgD7G,SAAC,qBAIlEka,EAASpT,QAAU,GAClB7G,cAAA,KAAGH,UAAU,UAASE,SAAC,0CCzChB2b,GAvED,SAAAtM,GAAApO,YAAA0a,EAAAtM,GAAA,IAAAnO,EAAAC,YAAAwa,GAAA,SAAAA,IAAA,IAAAta,EAAAC,YAAA,KAAAqa,GAAA,QAAAvQ,EAAAvE,UAAAC,OAAAuE,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA1E,UAAA0E,GAkCX,OAlCWlK,EAAAH,EAAAK,KAAA8I,MAAAnJ,EAAA,OAAAL,OAAAwK,KACZ7J,MAAQ,CACN2I,KAAM,CAAEiJ,WAAY,IACpB5H,OAAQ,IACTnK,EAEDsK,OAAS,CACPyH,WAAY1H,IAAI4D,SAASC,WAAWC,IAAI,GAAGsJ,IAAI,GAAGjO,MAAM,gBACzDxJ,EAEDyL,SAAQvD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAS,EAAA2I,EAAArQ,EAAA,OAAA+G,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG,OAAJG,EAAS9I,EAAKG,MAAd2I,KAAIL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGS2M,GAAYxD,gBAAgBhJ,EAAKiJ,YAAY,KAAD,EAArD,OAAJN,EAAIhJ,EAAAI,KAAAJ,EAAAE,KAAA,EAEO2F,EAAYlB,iBAAiB,KAAD,EAArC,OAAJhM,EAAIqH,EAAAI,KAAAJ,EAAAE,KAAA,GAEK2F,EAAYX,iBAAiB,KAAD,GAEL,OAFpCvM,EAAIqH,EAAAI,MAECC,KAAKkO,MAAMe,KAAKtG,EAAK3I,KAAKxH,KAAKmH,EAAAE,KAAA,GAC9B2F,EAAYV,gBAAgBxM,EAAK0H,MAAM,KAAD,GAE5C,cADO1H,EAAK0H,KAAKwD,SACjB7D,EAAAE,KAAA,GACM8I,EAAK3I,KAAKK,QAAQ4O,KAAK3W,EAAK0H,MAAM,KAAD,UAAAL,EAAAE,KAAA,GACjC2M,GAAY1D,SAASH,EAAK3I,MAAM,KAAD,GACrC9I,EAAKD,MAAM6X,QAAQG,KAAK,aAAatP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,SAEjCA,EAAAgG,GAAG/L,UAAmC,MAAvB+F,EAAAgG,GAAG/L,SAASG,QAC7B7C,EAAKS,SAAS,CACZ0J,OAAQ,CAAE4H,WAAY,6CAEzB,yBAAAtJ,EAAAM,UAAAV,EAAA,mBAEJrI,EAkCA,OAlCAK,YAAAia,EAAA,EAAAha,IAAA,SAAAC,MAED,WACE,OACE/B,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,0BACtBR,cAAA,OAAKH,UAAU,MAAKE,SAClBC,cAAA,OAAKH,UAAU,SAASC,GAAG,WAAUC,SACnCH,eAAA,KAAAG,SAAA,CACEC,cAAA,UAAAD,SAAQ,6BAAiC,IAACC,cAAA,SAAM,0CAKtDA,cAAA,OAAKH,UAAU,MAAKE,SAClBH,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BH,eAAA,QAAMuQ,SAAUvO,KAAK+K,aAAcyD,aAAa,MAAMC,OAAO,MAAKtQ,SAAA,CAC/D6B,KAAK0O,YAAY,aAAc,eAChC1Q,eAAA,OAAKC,UAAU,iCAAgCE,SAAA,CAC5C6B,KAAK2O,aAAa,aACnBvQ,cAACU,IAAI,CACH0M,KAAK,SACLvN,UAAU,0BACVc,GAAG,YAAWZ,SACf,wBAKLC,cAAA,KAAGH,UAAU,YAAWE,SAAC,mDAKlC2b,EApEW,CAASzQ,GCuCR,QACb0Q,cA7CK,SAAuBC,GAC5B,OAAOhX,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,aAAa+W,IA6CvCC,wBA1CK,SAAiClX,GACtC,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,sCAAAjE,OAAqC+D,KA0C9DmX,kBAvCK,SAA2BvI,GAChC,OAAO3O,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,gCAAAjE,OAA+B2S,KAuCxDwI,cApCK,SAAuBC,GAC5B,OAAOpX,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,4BAAAjE,OAA2Bob,KAoCpDC,eAjCK,SAAwBD,GAC7B,OAAOpX,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,6BAAAjE,OAA4Bob,KAiCrDE,uBA9BK,SAAgCvX,GACrC,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,qCAAAjE,OAAoC+D,KA8B7DwX,eA3BK,SACLxX,EACAyX,EACAC,EACAC,EACAC,GAEA,OAAO3X,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,6BAAAjE,OAA4B+D,GAAU,CAC9DA,SACAyX,wBACAC,wBACAC,mBACAC,oBAgBFC,wBAZK,SAAiC7X,GACtC,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,sCAAAjE,OAAqC+D,MCSjD8X,GA/CI,SAAHlc,GAAkE,IAA5Dmc,EAAMnc,EAANmc,OAAQxS,EAAI3J,EAAJ2J,KAAM/G,EAAI5C,EAAJ4C,KAAMD,EAAK3C,EAAL2C,MAAOkC,EAAQ7E,EAAR6E,SAAUyN,EAAItS,EAAJsS,KAAetS,EAAToc,UAC/D,OACE/c,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBH,eAAA,OAAKC,UAAU,OAAOC,GAAG,YAClB4X,MAAO,CACNC,gBAAgB,OAAD/W,OACY,qBAAoB,MAE/Cb,SAAA,CAENC,cAAA,MAAIH,UAAU,cAAaE,SAAEoD,IAC7BnD,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IACEiD,EAAK,GAAAtC,OACEC,KAAQD,OAAGsC,GACd,4KAENrD,UAAU,gBACVK,IAAKiD,MAKTnD,cAAA,OAAKH,UAAU,YAAYC,GAAG,gBAAeC,SAC3CH,eAAA,KAAGC,UAAU,YAAYC,GAAG,gBAAeC,SAAA,CACzCC,cAAA,QAAAD,SAAO2c,IACP1c,cAAA,SACAA,cAAA,QAAAD,SAAOmK,GAAc,IACrBlK,cAAA,iBAINJ,eAACc,IAAI,CACHb,UAAU,6BACVC,GAAG,aACHa,GAAE,WAAAC,OAAawE,EAAQ,KAAAxE,OAAIiS,GAC3B6J,OAAQA,EAAO3c,SAAA,CAChB,iBAECC,cAAC4c,IAAe,IAChB5c,cAAC6c,IAAoB,WCMdC,GA9CE,SAAHvc,GAAoD,IAA9Cmc,EAAMnc,EAANmc,OAAQxS,EAAI3J,EAAJ2J,KAAM/G,EAAI5C,EAAJ4C,KAAMD,EAAK3C,EAAL2C,MAAO2P,EAAItS,EAAJsS,KAAWtS,EAALuE,MACnD,OAEElF,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBH,eAAA,OAAKC,UAAU,OAAOC,GAAG,YACpB4X,MAAO,CACNC,gBAAgB,OAAD/W,OACY,qBAAoB,MAE/Cb,SAAA,CACJC,cAAA,MAAIH,UAAU,cAAaE,SAAEoD,IAC7BnD,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IACEiD,EAAK,GAAAtC,OACEC,KAAQD,OAAGsC,GACd,4KAENrD,UAAU,gBACVK,IAAKiD,MAGTnD,cAAA,OAAKH,UAAU,qBACfG,cAAA,OAAKH,UAAU,YAAYC,GAAG,gBAAeC,SAC3CH,eAAA,KAAGC,UAAU,YAAYC,GAAG,gBAAeC,SAAA,CACzCC,cAAA,QAAAD,SAAO2c,IACP1c,cAAA,SAEAA,cAAA,QAAAD,SAAOmK,GAAc,IACrBlK,cAAA,iBAINJ,eAACc,IAAI,CACNb,UAAU,6BACVC,GAAG,aACAa,GAAE,mBAAAC,OAAqBiS,GAAO9S,SAAA,CAC/B,iBAECC,cAAC4c,IAAe,IAChB5c,cAAC6c,IAAoB,WCYdE,GArDG,SAAHxc,GAA4D,IAAtDmc,EAAMnc,EAANmc,OAAQxS,EAAI3J,EAAJ2J,KAAM/G,EAAI5C,EAAJ4C,KAAMD,EAAK3C,EAAL2C,MAAe2P,GAAFtS,EAANyc,OAAYzc,EAAJsS,MAElDoK,GAF6D1c,EAAL2E,OAC/C,IAAI/E,MACOgJ,eAAe,QAAS,CAAEjE,MAAO,UAEzD,OACEtF,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBH,eAAA,OACEC,UAAU,QACVC,GAAG,YACH4X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,qBAAoB,MAE/Cb,SAAA,CAEFC,cAAA,MAAIH,UAAU,cAAaE,SAAEoD,IAC7BnD,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IACEiD,EAAK,GAAAtC,OACEC,KAAQD,OAAGsC,GACd,4KAENrD,UAAU,gBACVK,IAAKiD,MAGTnD,cAAA,OAAKH,UAAU,qBACfG,cAAA,OAAKH,UAAU,gBAAgBC,GAAG,gBAAeC,SAC/CH,eAAA,OAAKC,UAAU,iBAAiBC,GAAG,gBAAeC,SAAA,CAChDC,cAAA,QAAAD,SAAO2c,IACP1c,cAAA,SACAJ,eAAA,OAAKC,UAAU,gCAA+BE,SAAA,CAC5CC,cAAA,QAAMF,GAAG,QAAOC,SAAEkd,GAA8B,KAEhDjd,cAAA,QAAAD,SAAOmK,GAAc,eAK7BtK,eAACc,IAAI,CACHb,UAAU,6BACVC,GAAG,aACHa,GAAE,wBAAAC,OAA0BiS,GAAO9S,SAAA,CACpC,iBAECC,cAAC4c,IAAe,IAChB5c,cAAC6c,IAAoB,WCFdK,GA7CC,SAAH3c,GAAoD,IAA9Cmc,EAAMnc,EAANmc,OAAQxS,EAAI3J,EAAJ2J,KAAM/G,EAAI5C,EAAJ4C,KAAMD,EAAK3C,EAAL2C,MAAO2P,EAAItS,EAAJsS,KAAWtS,EAALuE,MAClD,OACElF,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBH,eAAA,OAAKC,UAAU,OAAOC,GAAG,YACpB4X,MAAO,CACNC,gBAAgB,OAAD/W,OACY,qBAAoB,MAE/Cb,SAAA,CACJC,cAAA,MAAIH,UAAU,aAAYE,SAAEoD,IAC5BnD,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IACEiD,EAAK,GAAAtC,OACEC,KAAQD,OAAGsC,GACd,4KAENrD,UAAU,gBACVK,IAAKiD,MAGTnD,cAAA,OAAKH,UAAU,qBACfG,cAAA,OAAKH,UAAU,YAAYC,GAAG,gBAAeC,SAC3CH,eAAA,KAAGC,UAAU,YAAYC,GAAG,gBAAeC,SAAA,CACzCC,cAAA,QAAAD,SAAO2c,IACP1c,cAAA,SAEAA,cAAA,QAAAD,SAAOmK,GAAc,IACrBlK,cAAA,iBAINJ,eAACc,IAAI,CACNb,UAAU,6BACVC,GAAG,aACAa,GAAE,2BAAAC,OAA6BiS,GAAO9S,SAAA,CACvC,iBAECC,cAAC4c,IAAe,IAChB5c,cAAC6c,IAAoB,W,wCCwCdM,GA9EI,SAAH5c,GAA4B,IAAtBmF,EAAMnF,EAANmF,OAAQgX,EAAMnc,EAANmc,OAC5BjU,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnC8B,EAAO5B,EAAA,GAAEyU,EAAUzU,EAAA,GAC1B4I,EAA0B7I,oBAAS,GAAM8I,EAAA5I,YAAA2I,EAAA,GAAlC8L,EAAK7L,EAAA,GAAE8L,EAAQ9L,EAAA,GACtBpI,qBAAU,YACK,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA8T,EAAA,OAAAhU,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKmR,GAAW1B,YAAY9T,GAAQ,KAAD,EAA3C6X,EAAI1T,EAAAI,MACRsT,EAAOC,KAAEC,YAAYF,EAAKrT,KAAK,GAAGK,UAC7B+K,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEkI,OAASnI,EAAEmI,UACjCN,EAAWG,GACXD,GAAS,GAAMzT,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,kCAAAA,EAAAM,UAAAV,EAAA,mBAIlB,kBAVY,OAAAsD,EAAA3C,MAAA,KAAAxD,aAAA,EAWb+W,KACC,CAACjY,IACJ,IAAIkY,EAAO,EACX,OACEhe,eAAA,OAAAG,SAAA,CACEC,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,SAAUV,IAEXA,GACCzd,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBC,cAACM,EAAU,CAACE,UAAWkc,IACvB1c,cAAA,OAAKH,UAAU,SAASC,GAAG,WAAUC,SACnCH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACvBC,cAAA,MACEF,GAAG,eACHD,UAAU,+BACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAEFH,eAAA,OACEC,UAAU,6CACVC,GAAG,QAAOC,SAAA,CAEVC,cAAA,KAAGH,UAAU,OAAME,SAAC,WACpBC,cAAA,KAAGH,UAAU,OAAME,SAAC,gBAGxBC,cAAC4C,IAAMC,SAAQ,CAAA9C,SACZwK,EAAQD,KAAI,SAACwN,GAAM,OAClBlY,eAAA,MACEC,UAAU,yCAAwCE,SAAA,CAGlDC,cAAA,OAAKH,UAAU,SAAQE,SAAE6d,MACzB5d,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAC1BhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,UAAUC,GAAG,YAAWC,SACpC+X,EAAO3U,OAEVnD,cAAA,OAAKH,UAAU,YAAWE,SAAE+X,EAAO4F,WAZ9B5F,EAAOhY,qBCiDjBke,GAvGM,SAAHzd,GAAoB,IAAdoE,EAAMpE,EAANoE,OACtB8D,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAgC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAArC7M,EAAQ8M,EAAA,GAAEyM,EAAWzM,EAAA,GAC5BpI,qBAAU,YACS,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAjE,EAAA+X,EAAA,OAAAhU,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,EAAYtF,SAASC,GAAQ,KAAD,EAC7Ca,GADIA,EAAIqE,EAAAI,MACIC,KAAK,GACbqT,EAAO/X,EAAK+E,QAAQ+K,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEgG,OAASjG,EAAEiG,UACpDpB,EAAQmD,GACRU,EAAYzY,GAAM,wBAAAqE,EAAAM,UAAAV,OACnB,kBANgB,OAAAsD,EAAA3C,MAAA,KAAAxD,aAAA,EAQjBsX,KACC,CAACvZ,IAEJ,IAAIiZ,EAAO,EACX,OACEhe,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,eAEpB0J,GACAlK,cAAA,OAAKH,UAAU,eAAcE,SAC3BC,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,SAAU7T,MAIfA,GACCtK,eAAA,OAAKC,UAAU,uBAAuBC,GAAG,WAAUC,SAAA,CACjDH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACvBH,eAAA,MACEE,GAAG,eACHD,UAAU,+BACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFC,cAAA,KAAAD,SACG,IAAII,KAAKuE,EAASkT,WAAWC,mBAAmB,SAC/C,KACA,IAAI1X,KAAKuE,EAASkT,WAAWzO,eAAe,QAAS,CACnDiL,KAAM,UACNC,OAAQ,UACRE,QAAQ,IAEV,MACA,IAAIpU,KAAKuE,EAASyZ,WAAWhV,eAAe,QAAS,CACnDiL,KAAM,UACNC,OAAQ,UACRE,QAAQ,MAGd3U,eAAA,OAAKC,UAAU,sBAAsBC,GAAG,YAAWC,SAAA,CACjDC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,YACHC,cAAA,KAAAD,SAAG,iBAGPC,cAAC4C,IAAMC,SAAQ,CAAA9C,SACZmK,EAAKI,KAAI,SAACwN,GAAM,OACflY,eAAA,MAAIC,UAAU,WAAUE,SAAA,CACtBH,eAAA,OAAKC,UAAU,SAAQE,SAAA,CAAE6d,IAAO,OAChC5d,cAAA,OAAKH,UAAU,kBAAiBE,SAC9BC,cAAA,OACEC,IAAKiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGkX,EAAO5U,OAAU,GACtDhD,IAAI,sBAGRF,cAAA,OAAKF,GAAG,cAAaC,SAClBmK,EAAKrD,OAAS,EAAIiR,EAAO3U,KAAO,KAEnCnD,cAAA,OAAKH,UAAU,qBAAoBE,SAChCmK,EAAKrD,OAAS,EAAIiR,EAAOnE,QAAU,KAEtC3T,cAAA,OACEH,UACEiY,EAAO0D,OAAS,EACZ,yBACA,wBACLzb,SAEA+X,EAAO0D,WArBkB1D,EAAOhY,YA2B3CE,cAACmd,GAAU,CAACzX,OAAQhB,EAAShC,IAAKga,OAAO,oBCpDpC0B,GA7CC,SAAH7d,GAAkE,IAA5Dmc,EAAMnc,EAANmc,OAAQxS,EAAI3J,EAAJ2J,KAAM/G,EAAI5C,EAAJ4C,KAAMD,EAAK3C,EAAL2C,MAAiB2P,GAAFtS,EAAR6E,SAAc7E,EAAJsS,MAAetS,EAAToc,UAC5D,OACE/c,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBH,eAAA,OAAKC,UAAU,OAAOC,GAAG,YACpB4X,MAAO,CACNC,gBAAgB,OAAD/W,OACY,qBAAoB,MAE/Cb,SAAA,CACJC,cAAA,MAAIH,UAAU,cAAaE,SAAEoD,IAC7BnD,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IACEiD,EAAK,GAAAtC,OACEC,KAAQD,OAAGsC,GACd,4KAENrD,UAAU,gBACVK,IAAKiD,MAITnD,cAAA,OAAKH,UAAU,YAAYC,GAAG,gBAAeC,SAC3CH,eAAA,KAAGC,UAAU,YAAYC,GAAG,gBAAeC,SAAA,CACzCC,cAAA,QAAAD,SAAO2c,IACP1c,cAAA,SACAA,cAAA,QAAAD,SAAOmK,GAAc,IACrBlK,cAAA,iBAINJ,eAACc,IAAI,CACHb,UAAU,6BACVC,GAAG,aACHa,GAAE,eAAAC,OAAiBiS,GACnB6J,OAAQA,EAAO3c,SAAA,CAChB,iBAECC,cAAC4c,IAAe,IAChB5c,cAAC6c,IAAoB,W,oBCgHdwB,GArJE,SAAH9d,GAAoB,IAAdoE,EAAMpE,EAANoE,OAClB8D,EAA0BC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAjC6V,EAAK3V,EAAA,GAAE4V,EAAQ5V,EAAA,GACtB4I,EAAkC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAvCiN,EAAShN,EAAA,GAAEiN,EAAYjN,EAAA,GAC9BuD,EAAwBrM,mBAAS,GAAEsM,EAAApM,YAAAmM,EAAA,GAA5BzN,EAAI0N,EAAA,GAAE0J,EAAO1J,EAAA,GACpBwF,EAA0B9R,mBAAS,GAAE+R,EAAA7R,YAAA4R,EAAA,GAA9BmE,EAAKlE,EAAA,GAAEmE,EAAQnE,EAAA,GACtBoE,EAA8BnW,oBAAS,GAAMoW,EAAAlW,YAAAiW,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAA8BvW,mBAAS,GAAEwW,EAAAtW,YAAAqW,EAAA,GAAlCE,EAAOD,EAAA,GAAYA,EAAA,GAC1B9V,qBAAU,YACM,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA2V,EAAAC,EAAA,OAAA9V,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAYjE,eAAepB,GAAQ,KAAD,EAA9Cya,EAAGvV,EAAAI,KACTwU,EAAaW,EAAIlV,MACXmV,EAAWD,EAAIlV,KAAKI,KAAI,SAACgV,GAAC,OAAK9B,KAAEC,YAAY6B,EAAE/U,YACrDgU,EAASc,GACTL,GAAW,GACX,IACEJ,EAASW,KAAKC,MAAMlB,EAAMzX,OAASsY,IACnC,MAAAM,GACAlX,QAAQC,IAAI,kBACb,wBAAAqB,EAAAM,UAAAV,OACF,kBAXa,OAAAsD,EAAA3C,MAAA,KAAAxD,aAAA,EAad8Y,KACC,CAACP,EAASb,EAAQA,EAAMzX,OAAS,GAAIlC,IACxC,IAAIgb,EAAU,EACVC,EAAQ,GACZA,EAAQtB,EAAQA,EAAMuB,MAAMvY,EAAO6X,GAAU7X,EAAO,GAAK6X,GAAW,GACpE,IAAIW,EAAatB,EACbA,EAAUqB,MAAMvY,EAAO6X,GAAU7X,EAAO,GAAK6X,GAC7C,GAOJ,OACEvf,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,eACpB8d,GACAte,cAAA,OAAKH,UAAU,eAAcE,SAC3BC,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,SAAS,MAIfne,eAAA,OAAKC,UAAU,MAAKE,SAAA,CACjBgf,GACC/e,cAAC+f,KAAa,CACZC,cAAe,OACfC,UAAW,OACXC,UAAWN,EAAM/Y,OAAS,IAAM,EAAI8X,EAAQ,EAAIA,EAChDwB,aA1Bc,SAAClO,GACvB,IAAImO,EAAQnO,EAAMgI,SAClByE,EAAQ0B,IAyBAC,mBAAoB,+CACpBC,gBAAiB,SACjBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,cAItBtC,GACCsB,EAAMtV,KAAI,SAACuW,GAAC,OACV7gB,cAAA,OACEH,UAAU,mBACVC,GAAG,WAAUC,SAGbH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACvBH,eAAA,MACEE,GAAG,eACHD,UAAU,+BACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFC,cAAA,KAAAD,SACG,IAAII,KACH2f,EAAWH,KAAW/H,WACtBC,mBAAmB,SACnB,IACA,IAAI1X,KACF2f,EAAWH,EAAU,GAAG/H,WACxBzO,eAAe,QAAS,CACxBiL,KAAM,UACNC,OAAQ,UACRE,QAAQ,IAEV,MACA,IAAIpU,KACF2f,EAAWH,EAAU,GAAGxB,WACxBhV,eAAe,QAAS,CACxBiL,KAAM,UACNC,OAAQ,UACRE,QAAQ,MAGd3U,eAAA,OAAKC,UAAU,sBAAsBC,GAAG,gBAAeC,SAAA,CACrDC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,YACHC,cAAA,KAAAD,SAAG,iBAIN8gB,EACEvL,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEgG,OAASjG,EAAEiG,UAC5BlR,KAAI,SAACwN,GAAM,OACVlY,eAAA,MAAIC,UAAU,mBAAkBE,SAAA,CAC9BH,eAAA,OAAKC,UAAU,SAAQE,SAAA,CAAE+X,EAAOgJ,SAAS,OACzC9gB,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAC1BhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,UAAUC,GAAG,YAAWC,SACpC+X,EAAO3U,OAEVnD,cAAA,OAAKH,UAAU,gBAAeE,SAAE+X,EAAOnE,UACvC3T,cAAA,OACEH,UACEiY,EAAO0D,OAAS,EACZ,yBACA,wBACLzb,SAEA+X,EAAO0D,WAnB0B1D,EAAO5U,cA7C9C2d,EAAE,GAAGrF,OAASqF,EAAE,GAAG3d,iBC9BvBga,GA7CC,SAAH3c,GAAyD,IAAnDmc,EAAMnc,EAANmc,OAAQxS,EAAI3J,EAAJ2J,KAAM/G,EAAI5C,EAAJ4C,KAAMD,EAAK3C,EAAL2C,MAAmBiJ,GAAR5L,EAAJsS,KAAWtS,EAALuE,MAAUvE,EAAJ4L,MACxD,OACEvM,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBH,eAAA,OAAKC,UAAU,OAAOC,GAAG,YACpB4X,MAAO,CACNC,gBAAgB,OAAD/W,OACY,qBAAoB,MAE/Cb,SAAA,CACJC,cAAA,MAAIH,UAAU,aAAYE,SAAEoD,IAC5BnD,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IACEiD,EAAK,GAAAtC,OACEC,KAAQD,OAAGsC,GACd,4KAENrD,UAAU,gBACVK,IAAKiD,MAGTnD,cAAA,OAAKH,UAAU,qBACfG,cAAA,OAAKH,UAAU,YAAYC,GAAG,gBAAeC,SAC3CH,eAAA,KAAGC,UAAU,YAAYC,GAAG,gBAAeC,SAAA,CACzCC,cAAA,QAAAD,SAAO2c,IACP1c,cAAA,SAEAA,cAAA,QAAAD,SAAOmK,GAAc,IACrBlK,cAAA,iBAINJ,eAACc,IAAI,CACNb,UAAU,6BACVC,GAAG,aACAa,GAAIwL,EAAKpM,SAAA,CACV,iBAECC,cAAC4c,IAAe,IAChB5c,cAAC6c,IAAoB,WCOdkE,GA7CM,SAAHxgB,GAAoB,IAAdoE,EAAMpE,EAANoE,OACtB,OACE/E,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBH,eAAA,OACEC,UAAU,OACVC,GAAG,YACH4X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,qBAAoB,MAE/Cb,SAAA,CAEFC,cAAA,MAAIH,UAAU,cAAaE,SAAC,mBAC5BC,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IAAG,GAAAW,OAAKC,IAAQ,qBAChBhB,UAAU,gBACVK,IAAI,YAIRF,cAAA,OAAKH,UAAU,YAAYC,GAAG,gBAAeC,SAC3CH,eAAA,KAAGC,UAAU,YAAYC,GAAG,gBAAeC,SAAA,CACzCC,cAAA,QAAAD,SAAM,gBACNC,cAAA,SACAA,cAAA,QAAAD,SACEC,cAACghB,IAAkB,MAErBhhB,cAAA,iBAINJ,eAACc,IAAI,CACHb,UAAU,6BACVC,GAAG,aACHa,GAAE,cAAAC,OAAgB+D,GAAS5E,SAAA,CAC5B,iBAECC,cAAC4c,IAAe,IAChB5c,cAAC6c,IAAoB,W,oBCpBd,SAASoE,GAAU9f,GAEhC,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAkC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAvC2P,EAAS1P,EAAA,GAAE2P,EAAY3P,EAAA,GAC9BuD,EAAoCrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAzCqM,EAAUpM,EAAA,GAAEqM,EAAarM,EAAA,GAChCwF,EAAoC9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAAzC8G,EAAU7G,EAAA,GAAE8G,EAAa9G,EAAA,GAChCoE,EAA8BnW,mBAAS,IAAGoW,EAAAlW,YAAAiW,EAAA,GAAnCjI,EAAOkI,EAAA,GAAE0C,EAAU1C,EAAA,GAC1BG,EAAsCvW,mBAAS,IAAGwW,EAAAtW,YAAAqW,EAAA,GAA3CwC,EAAWvC,EAAA,GAAEwC,EAAcxC,EAAA,GAClCyC,EAAsBjZ,mBAAS,IAAGkZ,EAAAhZ,YAAA+Y,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,EAAsCrZ,mBAAS,IAAGsZ,EAAApZ,YAAAmZ,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAA8BzZ,mBAAS,IAAG0Z,EAAAxZ,YAAAuZ,EAAA,GAAnC7c,EAAO8c,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,EAAkC5Z,mBAAS,IAAG6Z,EAAA3Z,YAAA0Z,EAAA,GAAvClL,EAASmL,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAAkC/Z,mBAAS,IAAGga,GAAA9Z,YAAA6Z,GAAA,GAAvC5c,GAAS6c,GAAA,GAAEC,GAAYD,GAAA,GAC9BE,GAAoCla,mBAAS,IAAGma,GAAAja,YAAAga,GAAA,GAAzC5c,GAAU6c,GAAA,GAAEC,GAAaD,GAAA,GAChCE,GAAwCra,mBAAS,IAAGsa,GAAApa,YAAAma,GAAA,GAA7C7c,GAAY8c,GAAA,GAAEC,GAAeD,GAAA,GAC9Bre,GAASxD,EAAM6G,MAAMC,OAAOtD,OAClCue,GAA0Bxa,mBAAS,IAAGya,GAAAva,YAAAsa,GAAA,GAA/B9K,GAAK+K,GAAA,GAAE9K,GAAQ8K,GAAA,GACtBC,GAAgC1a,mBAAS,IAAG2a,GAAAza,YAAAwa,GAAA,GAArC1e,GAAQ2e,GAAA,GAAEpF,GAAWoF,GAAA,GAC5BC,GAAwB5a,mBAAS,IAAG6a,GAAA3a,YAAA0a,GAAA,GAA7B9gB,GAAI+gB,GAAA,GAAEjL,GAAOiL,GAAA,GACpBC,GAAgC9a,mBAAS,IAAG+a,GAAA7a,YAAA4a,GAAA,GAArC/c,GAAQgd,GAAA,GAAEC,GAAWD,GAAA,GACxBE,GAAeC,EAAQ,KA8B3Bxa,qBAAU,YACS,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAjE,EAAAoL,EAAA,OAAArH,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,EAAYtF,SAASC,IAAQ,KAAD,EAE3B,OADlBa,GADIA,EAAIqE,EAAAI,MACIC,KAAK,GACjB+T,GAAYzY,GAAMqE,EAAAE,KAAA,EACD2F,EAAYX,iBAAiB,KAAD,EAAvC6B,EAAE/G,EAAAI,KACRqO,GAAQ1H,EAAG1G,MAAM,wBAAAL,EAAAM,UAAAV,OAClB,kBANgB,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAQjBsX,KACC,IAIH9U,qBAAU,WA+CR,OA9Cc,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAAjJ,EAAA+e,EAAAhe,EAAAG,EAAA6b,EAAAiC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhb,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACGC,EAAYlF,MAAMH,IAAQ,KAAD,EAI5B,OAHfG,GADIA,EAAKmJ,EAAAhE,MACKC,MAERoL,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEhL,YAAc+K,EAAE/K,eACvC4P,EAAQtV,GAAOmJ,EAAAlE,KAAA,EAEK2M,GAAY3D,QAAQpO,IAAQ,KAAD,EACpB,OADvBkf,EAAO5V,EAAAhE,KACXuY,EAAaqB,EAAQ3Z,MAAM+D,EAAAlE,KAAA,GAELC,EAAYnE,UAAUlB,IAAQ,KAAD,GACtB,OADzBkB,EAASoI,EAAAhE,KACb0Y,GAAa9c,EAAUqE,MAAM+D,EAAAlE,KAAA,GAENC,EAAYhE,WAAWrB,IAAQ,KAAD,GACtB,OAD3BqB,EAAUiI,EAAAhE,KACd6Y,GAAc9c,EAAWkE,MAAM+D,EAAAlE,KAAA,GAEfmR,GAAWtB,gBAAgBjV,IAAQ,KAAD,GAM3B,MALM,aADzBkd,EAAG5T,EAAAhE,MACCC,KAAK,GAAGxH,IAAIS,MAClB0e,EAAI3X,KAAKsa,QAEX1C,EAAOD,EAAI3X,MAEP4Z,EAAOrI,aAAO3W,GAAKmJ,EAAAlE,KAAA,GACF+Z,EAAQxO,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEiP,WAAalP,EAAEkP,cAAY,KAAD,GAGpD,OAHdV,EAAM9V,EAAAhE,KACZoX,EAAc0C,GAEVC,EAAIvI,aAAO3W,GAAKmJ,EAAAlE,KAAA,GACDia,EAAK1O,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEkP,UAAYnP,EAAEmP,aAAW,KAAD,GAG5C,OAHfT,EAAIhW,EAAAhE,KACVkX,EAAa8C,GAETC,EAAKzI,aAAO3W,GAAKmJ,EAAAlE,KAAA,GACDma,EAAM5O,MACxB,SAACC,EAAGC,GAAC,OAAKA,EAAEmP,gBAAkBpP,EAAEoP,mBAChC,KAAD,GAGwB,OALnBR,EAAKlW,EAAAhE,KAGXyX,EAAeyC,GAEXC,EAAS3I,aAAO3W,GAAKmJ,EAAAlE,KAAA,GACFqa,EAAU9O,MAC/B,SAACC,EAAGC,GAAC,OAAKA,EAAEoP,kBAAoBrP,EAAEqP,qBAClC,KAAD,GAEmB,OAJdP,EAAQpW,EAAAhE,KAGduX,EAAW6C,GACPC,EAAI7I,aAAO3W,GAAKmJ,EAAAlE,KAAA,GACDua,EAAKhP,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEsP,WAAarP,EAAEqP,cAAY,KAAD,GAA7DN,EAAItW,EAAAhE,KACVsX,EAAcgD,GAAM,yBAAAtW,EAAA9D,UAAA4D,OACrB,kBA5Ca,OAAAhB,EAAA3C,MAAA,KAAAxD,YAAA,EA6Cdke,GACO,eAGN,IAEH1b,qBAAU,YACU,eAAAsM,EAAApM,YAAAC,IAAAC,MAAG,SAAAmM,IAAA,IAAAoP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7b,IAAAK,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,OACkB,OAAjCgb,GAAY,IAAI5kB,MAAOklB,WAAUzP,EAAA7L,KAAA,EACjBC,EAAY/E,WAC9B9D,EAAM6G,MAAMC,OAAOtD,OACnBogB,EAAY,GACZ,KAAD,EACsB,MAAvBC,GAJIA,EAAOpP,EAAA3L,MAIOC,MACNrD,OAAS,GAAC,CAAA+O,EAAA7L,KAAA,SAGnB,OAFKkb,EAAYD,EAAQ5P,QACxB,SAAC9I,GAAC,OAAKA,EAAE5J,IAAI4iB,cAAgBP,KAC9BnP,EAAA7L,KAAA,EAC6Bkb,EAAU3P,MACtC,SAACC,EAAGC,GAAC,OAAKA,EAAEhL,YAAc+K,EAAE/K,eAC5B,KAAD,EAFK0a,EAAetP,EAAA3L,KAIrBiY,EAAegD,GAAiBtP,EAAA7L,KAAA,iBAI/B,OAFKkb,EAAYD,EAAQ5P,QACxB,SAAC9I,GAAC,OAAKA,EAAE5J,IAAI4iB,cAAgBP,EAAY,KAC1CnP,EAAA7L,KAAA,GAC6Bkb,EAAU3P,MACtC,SAACC,EAAGC,GAAC,OAAKA,EAAEhL,YAAc+K,EAAE/K,eAC5B,KAAD,GAFK0a,EAAetP,EAAA3L,KAGrBiY,EAAegD,GAAiB,yBAAAtP,EAAAzL,UAAAwL,OAEnC,kBAzBiB,OAAAD,EAAAtL,MAAA,KAAAxD,aAAA,EA0BlB2e,KACC,IAEHnc,qBAAU,YACK,eAAAmN,EAAAjN,YAAAC,IAAAC,MAAG,SAAAgc,IAAA,IAAAR,EAAA,OAAAzb,IAAAK,MAAA,SAAA6b,GAAA,cAAAA,EAAA3b,KAAA2b,EAAA1b,MAAA,cAAA0b,EAAA1b,KAAA,EACMC,EAAY1E,QAAQnE,EAAM6G,MAAMC,OAAOtD,QAAQ,KAAD,EAClEqgB,GADIA,EAAOS,EAAAxb,MACOC,KAClBmY,EAAW2C,GAAS,wBAAAS,EAAAtb,UAAAqb,OACrB,kBAJY,OAAAjP,EAAAnM,MAAA,KAAAxD,aAAA,EAKbtB,KACC,IAEH8D,qBAAU,YACU,eAAAsc,EAAApc,YAAAC,IAAAC,MAAG,SAAAmc,IAAA,IAAAC,EAAA,OAAArc,IAAAK,MAAA,SAAAic,GAAA,cAAAA,EAAA/b,KAAA+b,EAAA9b,MAAA,cAAA8b,EAAA9b,KAAA,EACOC,EAAY9D,aACpC/E,EAAM6G,MAAMC,OAAOtD,QACnB,KAAD,EAFKihB,EAAWC,EAAA5b,KAGjBgZ,GAAgB2C,EAAY1b,MAAM,wBAAA2b,EAAA1b,UAAAwb,OACnC,kBALiB,OAAAD,EAAAtb,MAAA,KAAAxD,aAAA,EAMlBV,KACC,IAGHkD,qBAAU,YACQ,eAAA0c,EAAAxc,YAAAC,IAAAC,MAAG,SAAAuc,IAAA,IAAAxN,EAAArO,EAAA8b,EAAAC,EAAA,OAAA1c,IAAAK,MAAA,SAAAsc,GAAA,cAAAA,EAAApc,KAAAoc,EAAAnc,MAAA,cAAAmc,EAAAnc,KAAA,EACM2M,GAAY5D,YAAY,KAAD,EAEpB,OAFoByF,EAAA2N,EAAAjc,KAAtCC,EAAIqO,EAAJrO,KAERmO,GAASnO,EAAK,GAAGK,SAAS2b,EAAAnc,KAAA,EAECoc,GAAgBtK,wBACzC1a,EAAM6G,MAAMC,OAAOtD,QACnB,KAAD,EAGD,OALMqhB,EAAYE,EAAAjc,KAGlByZ,GAAYsC,EAAa9b,MAEzBgc,EAAAnc,KAAA,GACgCoc,GAAgBrK,kBAC9CtZ,GAAKE,KACL,KAAD,IAFKujB,EAAiBC,EAAAjc,MAGDC,KAAKrD,OAAS,GACXof,EAAkB/b,KA/JjCI,KAAI,SAACsR,GACf/F,KAAKC,KAAK,CACRC,MAAM,mCAADnV,OAAqCgb,EAAQwK,aAAahjB,SAAQ,KACvE4S,KAAK,SAADpV,OAAWgb,EAAQyK,WAAU,WAAAzlB,OAAU,IAAIT,KAC7Cyb,EAAQ7U,WACR8Q,mBAAmB,SAAQ,QAAAjX,OAAO,IAAIT,KACtCyb,EAAQ5U,SACR6Q,mBAAmB,SAAQ,mBAC7B5B,KAAM,OACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,kBACnBiQ,iBAAkB,oBACjBhQ,MAAK,SAACE,GACHA,EAAOC,aACTvS,IAAM0S,QAAQ,kEACduP,GAAgBpK,cAAcH,EAAQlZ,MAC7B8T,EAAO+P,cAChBriB,IAAMF,MAAM,2CACZuE,QAAQC,IAAI,eACZ2d,GAAgBlK,eAAeL,EAAQlZ,YA2I1C,yBAAAwjB,EAAA/b,UAAA4b,OACF,kBAjBe,OAAAD,EAAA1b,MAAA,KAAAxD,aAAA,EAkBhB4R,KACC,CAAChW,KAEJgkB,UAAa7C,IACb,IAAI8C,GAAe/hB,GAAW8hB,GAAM9hB,GAASkT,WAAW8O,UAAY,KAEpE,OACE9mB,eAAA,OAAKC,UAAU,YAAYC,GAAG,YAAWC,SAAA,CACvCC,cAACM,EAAU,CACTT,UAAU,OACVW,WAAW,IAAIL,MAAOC,cAAgB,eAEvC8J,EAAKrD,OAAS,GACb7G,cAAA,OAAKH,UAAU,eAAcE,SAC3BC,cAAC2mB,KAAc,CACbhf,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,wBACNgW,eAAe,yBACfC,QAAS7T,EAAKrD,OAAS,MAK5BqD,EAAKrD,OAAS,GACbjH,eAACgD,IAAMC,SAAQ,CAAA9C,SAAA,CACbH,eAAA,OAAKC,UAAU,kDAAiDE,SAAA,CAC9DC,cAAC4mB,KAAOC,IAAG,CACTnP,MAAO,CACLL,MAAO,IACPC,OAAQ,IACRwP,aAAc,GACdC,gBAAiB,QAEnBC,QAAS,CAAEC,OAAQ,KACnBC,WAAY,CACV9Z,KAAM,SACN+Z,SAAU,EACVC,OAAQ,IAEVnnB,IAAG,GAAAW,OAAKC,KAAQD,OAAGwW,EAAUA,WAC7BlX,IAAI,SAENF,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoB4B,GAAKE,KAAM3C,SACrCH,eAAA,OACEC,UAAU,0EACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OAASC,IAAQ,yBAChCd,SAAA,CAEFC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG4B,GAAKU,OAAShD,IAAI,KAC1CF,cAAA,KAAGH,UAAU,MAAKE,SAAEyC,GAAKY,mBAI/BxD,eAAA,OAAAG,SAAA,CACEC,cAAA,KAAGH,UAAU,sCAAqCE,SAC/CqX,EAAUjU,OAEbnD,cAAA,OAAKH,UAAU,6BAA4BE,SACxCqY,GAAM9N,KAAI,SAACwN,GAAM,OAChB9X,cAAC4mB,KAAOS,IAAG,CACTxnB,UAAU,GACVynB,QAAS,CAAEC,QAAS,GACpBP,QAAS,CAAEO,QAAS,GACpBL,WAAY,CAAEM,MAAO,IAAKL,SAAU,GAAIpnB,SAExCC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoBkX,EAAOpV,KAAM3C,SACvCC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAAShD,IAAI,uBAMtDN,eAACgnB,KAAOS,IAAG,CACTC,QAAS,CAAEG,EAAG,UACdT,QAAS,CAAES,EAAG,GACdP,WAAY,CACVM,MAAO,EACPpa,KAAM,SACN+Z,SAAU,EACVC,OAAQ,IAEVvnB,UAAU,yCAAwCE,SAAA,CAEjD0G,GAASI,OAAS,GACjBjH,eAAA,OAAKC,UAAU,sCAAsC6nB,KAAK,QAAO3nB,SAAA,CAC/DC,cAAA,QACEoN,KAAK,SACLvN,UAAU,QACV8nB,kBAAgB,QAChBC,aAAW,QAAO7nB,SAElBC,cAAA,QAAM6nB,cAAY,OAAOhoB,UAAU,aAAYE,SAAC,WAIlDC,cAAA,UAAAD,SAAQ,iEACRC,cAAA,QAAMH,UAAU,eAAcE,SAC5BC,cAAA,MAAAD,SACG0G,GAAS6D,KAAI,SAACwd,GAAG,OAChB9nB,cAAA,MAAAD,SAAA,GAAAa,OACMknB,EAAI1B,aAAahjB,SAAQ,QAAAxC,OAC3BknB,EAAIC,YAAY3kB,SAAQ,MAAAxC,OACrBknB,EAAIzB,WAAU,aAAAzlB,OAAY,IAAIT,KACjC2nB,EAAIlQ,WACJC,mBAAmB,SAAQ,iBAQzCjY,eAAA,KAAGC,UAAU,OAAME,SAAA,CAAC,qBAElBC,cAAA,UAAAD,SACEH,eAAA,QAAMC,UAAU,OAAME,SAAA,CACnB8F,GAAU,GACPA,GAAU,GAAGmiB,aAAa7e,iBAC1B,KACJnJ,cAAA,KAAGH,UAAU,uCAInBD,eAAA,KAAGC,UAAU,OAAME,SAAA,CAAC,sBAElBC,cAAA,UAAAD,SACEH,eAAA,QAAMC,UAAU,OAAME,SAAA,CACnB8F,GAAU,GAAKA,GAAU,GAAGoiB,WAAWC,QAAQ,GAAK,KACrDloB,cAAA,KAAGH,UAAU,wCAInBD,eAAA,KAAGC,UAAU,OAAME,SAAA,CAAC,sBAElBC,cAAA,UAAAD,SACEH,eAAA,QAAMC,UAAU,OAAME,SAAA,CACnBiG,GAAW,GAAKA,GAAW,GAAGmiB,WAAa,KAC5CnoB,cAACooB,KAAW,CAACvoB,UAAU,sBAI7BD,eAAA,KAAGC,UAAU,OAAME,SAAA,CAAC,oBAElBC,cAAA,UAAAD,SACEH,eAAA,QAAMC,UAAU,OAAME,SAAA,CACnBiG,GAAW,GAAKygB,GAAe,GAChCzmB,cAAC+X,KAAW,CAAClY,UAAU,kBAI7BG,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,KACEK,KAAK,+DACL8R,OAAO,SAAQpS,SAChB,+BAKLH,eAACgnB,KAAOS,IAAG,CACTvnB,GAAG,mBACHwnB,QAAS,CAAEC,QAAS,GACpBP,QAAS,CACPqB,EAAG,CAAC,QAAS,OACbb,MAAO,IACPD,QAAS,GAEXL,WAAY,CAAEC,SAAU,GAAIpnB,SAAA,CAE5BC,cAACyc,GAAU,CACTC,OAAO,eACPxS,KAAMA,EAAK,GAAGM,YACdrH,KAAM+G,EAAK,GAAGxH,IAAIS,KAClBD,MAAOgH,EAAK,GAAGxH,IAAIQ,MACnBkC,SAAS,cACTyN,KAAMlO,GACNG,MAAOoF,IAERgX,EAAUra,OAAS,GAClB7G,cAACyc,GAAU,CACTC,OAAO,iBACPxS,KAAMgX,EAAU,GAAGwD,UACnBvhB,KAAM+d,EAAU,GAAGxe,IAAIS,KACvBD,MAAOge,EAAU,GAAGxe,IAAIQ,MACxBkC,SAAS,YACTyN,KAAMlO,KAITyc,EAAWva,OAAS,GACnB7G,cAACyc,GAAU,CACTC,OAAO,cACPxS,KAAMkX,EAAW,GAAGqD,WACpBthB,KAAMie,EAAW,GAAG1e,IAAIS,KACxBD,MAAOke,EAAW,GAAG1e,IAAIQ,MACzBkC,SAAS,aACTyN,KAAMlO,KAGT8c,EAAY5a,OAAS,GACpB7G,cAACyc,GAAU,CACTC,OAAO,oBACPxS,KAAMuX,EAAY,GAAGkD,gBACrBxhB,KAAMse,EAAY,GAAG/e,IAAIS,KACzBD,MAAOue,EAAY,GAAG/e,IAAIQ,MAC1BkC,SAAS,kBACTyN,KAAMlO,KAGTiS,EAAQ/P,OAAS,GAChB7G,cAAC8c,GAAQ,CACPJ,OAAO,YACPxS,KAAM0M,EAAQ,GAAGgO,kBACjBzhB,KAAMyT,EAAQ,GAAGlU,IAAIS,KACrBD,MAAO0T,EAAQ,GAAGlU,IAAIQ,MACtBkC,SAAS,oBACTyN,KAAMlO,KAGT2c,EAAWza,OAAS,GACnB7G,cAACyc,GAAU,CACTC,OAAO,kBACPxS,KAAMoX,EAAW,GAAGuD,WACpB1hB,KAAMme,EAAW,GAAG5e,IAAIS,KACxBD,MAAOoe,EAAW,GAAG5e,IAAIQ,MACzBkC,SAAS,aACTyN,KAAMlO,KAGTuB,GAAaW,OAAS,GACrB7G,cAACsoB,GAAY,CACX5L,OAAO,kBACPvZ,KAAM+C,GAAaW,OAAS,EAAIX,GAAa,GAAGxD,IAAIS,KAAO,GAC3DD,MAAOgD,GAAaW,OAAS,EAAIX,GAAa,GAAGxD,IAAIQ,MAAQ,GAC7DgH,KACEhE,GAAaW,OAAS,EAAIX,GAAa,GAAGqiB,cAAgB,GAE5D1V,KAAMlO,GACNwH,KAAI,mBAAAvL,OAAqBO,EAAM6G,MAAMC,OAAOtD,UAGhD3E,cAACkd,GAAO,CACNR,OAAO,iBACPvZ,KAAMmC,EAAQuB,OAAS,EAAIvB,EAAQ,GAAGiF,QAAQpH,KAAO,GACrDD,MAAOoC,EAAQuB,OAAS,EAAIvB,EAAQ,GAAGiF,QAAQrH,MAAQ,GACvDgH,KAAM5E,EAAQuB,OAAS,EAAIvB,EAAQ,GAAGiF,QAAQiR,OAAS,GACvD3I,KAAMlO,KAEPsd,EAAYpb,OAAS,GACpB7G,cAAC+c,GAAS,CACRL,OAAO,mBACPxS,KAAM+X,EAAY,GAAGzX,YACrBrH,KAAM8e,EAAY,GAAGvf,IAAIS,KACzBD,MAAO+e,EAAY,GAAGvf,IAAIQ,MAC1B8Z,OAAQiF,EAAY,GAAGvd,SACvBmO,KAAMlO,KAGc,IAAvBsd,EAAYpb,QACXjH,eAAA,KAAGC,UAAU,yBAAwBE,SAAA,EAClC,IAAII,MAAOgJ,eAAe,QAAS,CAAEjE,MAAO,SAAU,oCAI1D2c,EAAIhb,OAAS,GACZ7G,cAACoe,GAAO,CACN1B,OAAO,YACPxS,KAAM2X,EAAI,GAAG2G,UAAUN,QAAQ,GAC/B/kB,KAAM0e,EAAI,GAAGnf,IAAIS,KACjBD,MAAO2e,EAAI,GAAGnf,IAAIQ,MAClB2P,KAAMlO,KAGV3E,cAAC+gB,GAAY,CAACpc,OAAQA,QAExB3E,cAACge,GAAY,CAACrZ,OAAQA,KACtB3E,cAACqe,GAAQ,CAAC1Z,OAAQA,W,aCtWb8jB,GAhIF,WACX,OACE7oB,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,cACtBZ,eAAA,OAAKC,UAAU,8BAA6BE,SAAA,CAC1CC,cAAA,MAAIH,UAAU,eAAcE,SAAC,iBAC7BH,eAAC8oB,KAAQ,CAAA3oB,SAAA,CACPH,eAAC8oB,KAASC,KAAI,CAAA5oB,SAAA,CACZC,cAAA,OACEH,UAAU,gBACVI,IAA8B,qBAC9BC,IAAI,gBAENF,cAAC0oB,KAASE,QAAO,OAKnBhpB,eAAC8oB,KAASC,KAAI,CAAA5oB,SAAA,CACZC,cAAA,OACEH,UAAU,gBACVI,IAA8B,iBAC9BC,IAAI,iBAGNF,cAAC0oB,KAASE,QAAO,OAKnBhpB,eAAC8oB,KAASC,KAAI,CAAA5oB,SAAA,CACZC,cAAA,OACEH,UAAU,gBACVI,IAA8B,iBAC9BC,IAAI,gBAGNF,cAAC0oB,KAASE,QAAO,OAOnBhpB,eAAC8oB,KAASC,KAAI,CAAA5oB,SAAA,CACZC,cAAA,OACEH,UAAU,gBACVI,IAA8B,iBAC9BC,IAAI,gBAGNF,cAAC0oB,KAASE,QAAO,aASvBhpB,eAAA,OAAKC,UAAU,eAAcE,SAAA,CAC3BC,cAAA,MAAAD,SAAI,8CACJH,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAAD,SAAI,8CACJC,cAAA,MAAAD,SAAI,sDACJC,cAAA,MAAAD,SAAI,iGAiBJH,eAAA,MAAAG,SAAA,CAAI,wBAEFH,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAAD,SAAI,0BACJC,cAAA,MAAAD,SAAI,qBACJC,cAAA,MAAAD,SAAI,mCACJC,cAAA,MAAAD,SAAI,qBACJC,cAAA,MAAAD,SAAI,gCAGRC,cAAA,MAAAD,SAAI,uBAMJC,cAAA,MAAAD,SAAI,sBACJH,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAAD,SAAI,kDACJC,cAAA,MAAAD,SAAI,wDAGNC,cAAA,MAAAD,SAAI,mFAIJC,cAAA,MAAAD,SAAI,qFAIJC,cAAA,MAAAD,SAAI,yGAKJC,cAAA,MAAAD,SAAI,+GAIJC,cAAA,MAAAD,SAAI,4CCjFC8oB,GAzCD,WACZ,OACE7oB,cAAA,OAAKH,UAAU,YAAWE,SACxBH,eAAA,OAAKC,UAAU,MAAKE,SAAA,CAClBC,cAACM,EAAU,CAACE,UAAU,UACtBR,cAAA,OACEC,IAA8B,mBAC9BC,IAAI,aACJL,UAAU,cAEZD,eAAA,MAAIC,UAAU,OAAME,SAAA,CAAC,iFAEVC,cAAA,SAAM,oCAGjBJ,eAAA,MAAIC,UAAU,OAAME,SAAA,CAAC,0EAGnBC,cAAA,SAAM,IAACA,cAAA,SAAM,6DAGfA,cAAA,MAAIH,UAAU,OAAME,SAAC,yFAIrBC,cAAA,MAAIH,UAAU,OAAME,SAAC,+DAGrBH,eAAA,MAAAG,SAAA,CACEC,cAAA,SAAM,gBAENJ,eAAA,KAAGS,KAAK,8BAA8BR,UAAU,OAAME,SAAA,CACnD,IAAI,mC,UC2DF+oB,GA3FO,SAAHvoB,GAAqB,IAAf0C,EAAO1C,EAAP0C,QACvBwF,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnC0W,EAAOxW,EAAA,GACd4I,GAD0B5I,EAAA,GACFD,mBAAS,IAAE8I,EAAA5I,YAAA2I,EAAA,GAA5BjK,EAAIkK,EAAA,GAAEkN,EAAOlN,EAAA,GACpBuD,EAA0BrM,mBAAS,GAAEsM,EAAApM,YAAAmM,EAAA,GAA9B4J,EAAK3J,EAAA,GAAE4J,EAAQ5J,EAAA,GAEtB5L,qBAAU,WAENwV,EAASW,KAAKC,MAAMvc,EAAQ4D,OAASsY,MAGtC,CAAClc,EAAQ4D,OAAQsY,IACpB,IAAIS,EAAQ,GACZA,EAAQ3c,EAAUA,EAAQ4c,MAAMvY,EAAO6X,GAAU7X,EAAO,GAAK6X,GAAW,GAOxE,OACEvf,eAAA,OAAKC,UAAU,mCAAkCE,SAAA,CAC/CC,cAACM,EAAU,CAACE,UAAU,cACtBR,cAAC+f,KAAa,CACZC,cAAe,OACfC,UAAW,OACXC,UAAWN,EAAM/Y,OAAO,KAAK,EAAE8X,EAAM,EAAEA,EACvCwB,aAZkB,SAAClO,GACvB,IAAImO,EAAQnO,EAAMgI,SAClByE,EAAQ0B,IAWJC,mBAAoB,+CACpBC,gBAAiB,SACjBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,cAErB5gB,cAAA,OAAKH,UAAU,cAAaE,SAC1BC,cAAA,OAAKF,GAAG,WAAUC,SAChBH,eAAA,MAAIC,UAAU,iBAAgBE,SAAA,CAC5BC,cAAA,MACEF,GAAG,SACHD,UAAU,mBACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAEFH,eAAA,OACEC,UAAU,+CACVC,GAAG,iBAAgBC,SAAA,CAEnBC,cAAA,OAAKH,UAAU,qBAAoBE,SAAC,SACpCC,cAAA,OAAKH,UAAU,gBAAeE,SAAC,cAC/BC,cAAA,OAAKH,UAAU,gBAAeE,SAAC,YAC/BC,cAAA,OAAKH,UAAU,gBAAeE,SAAC,mBAC/BC,cAAA,OAAKH,UAAU,gBAAeE,SAAC,cAC/BC,cAAA,OAAKH,UAAU,gBAAeE,SAAC,gBAGlC6f,EAAMtV,KAAI,SAACgV,GAAC,OACX1f,eAAA,MACEC,UAAU,gDACVC,GAAG,kBAAiBC,SAAA,CAGpBC,cAAA,OAAKH,UAAU,wBAAuBE,SACnC,IAAII,KAAKmf,EAAE1H,WAAWC,mBAAmB,WAE5C7X,cAAA,OAAKH,UAAU,mBAAkBE,SAAEuf,EAAExE,YACrC9a,cAAA,OAAKH,UAAU,mBAAkBE,SAAEuf,EAAE/U,QAAQoJ,UAC7C3T,cAAA,OAAKH,UAAU,mBAAkBE,SAAEuf,EAAE/U,QAAQgR,eAC7Cvb,cAAA,OAAKH,UAAU,mBAAkBE,SAAEuf,EAAE/U,QAAQuW,WAC7C9gB,cAAA,OACEH,UACEyf,EAAE/U,QAAQiR,OAAS,EACf,iCACA,gCACLzb,SAEAuf,EAAE/U,QAAQiR,WAhBR,IAAIrb,KAAKmf,EAAE1H,0B,SC6LjBmR,GAlPC,WACd,IAAAtgB,EAAoBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzBmI,EAAEjI,EAAA,GAAEkI,EAAKlI,EAAA,GAChB4I,EAA0B7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA/BrK,EAAKsK,EAAA,GAAEwX,EAAQxX,EAAA,GACtBuD,EAA0BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAA/B7P,EAAK8P,EAAA,GAAE9L,EAAQ8L,EAAA,GACtBwF,EAA4B9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAAjCkD,EAAMjD,EAAA,GAAEwO,EAASxO,EAAA,GACxBoE,EAA8BnW,mBAAS,IAAGoW,EAAAlW,YAAAiW,EAAA,GAAnC5b,EAAO6b,EAAA,GAAEoK,EAAUpK,EAAA,GAC1BG,EAAkCvW,mBAAS,IAAGwW,EAAAtW,YAAAqW,EAAA,GAAvCkK,EAASjK,EAAA,GAAEkK,EAAYlK,EAAA,GAC9ByC,EAAoCjZ,mBAAS,IAAGkZ,EAAAhZ,YAAA+Y,EAAA,GAAzC0H,EAAUzH,EAAA,GAAE0H,EAAa1H,EAAA,GAChCG,EAAwCrZ,mBAAS,IAAGsZ,EAAApZ,YAAAmZ,EAAA,GAA7CwH,EAAYvH,EAAA,GAAEwH,EAAexH,EAAA,GAChC/E,EAAe,IAAI9c,KACnBspB,EAAqBxM,EAAaoI,WAAa,EACnDpI,EAAeA,EAAa9T,eAAe,QAAS,CAAEjE,MAAO,SAE7DkE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAA4kB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxgB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACX6G,EAAGwH,MAAM,CAADvO,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACQC,EAAY/E,WAAW2L,EAAGwH,MAAM,IAAI,KAAD,EAO9B,OANvBtT,GADIA,EAAK+E,EAAAI,MACKC,KAKd+S,GAHAA,GADIA,EAAYxB,aAAO3W,IACKsQ,QAC1B,SAAClQ,GAAK,OAAKA,EAAMxC,IAAI4iB,cAAgBmE,MAEXvP,MAAK,SAAC5N,GAAC,OAAKA,EAAE5J,IAAIsnB,YAAcpZ,EAAGlO,OAC/DwG,EAAS+T,GAAcpT,EAAAE,KAAA,GACFC,EAAYlE,cAAc8K,EAAGlO,KAAK,KAAD,GAC5B,OADtBinB,EAAQ9f,EAAAI,KACZif,EAAWS,EAASzf,MAAML,EAAAE,KAAA,GAEHC,EAAYlE,cAAc8K,EAAGlO,KAAK,KAAD,GAGtC,OAHdknB,EAAU/f,EAAAI,KACV4f,EAAe,GACfR,EAAa,GACbU,EAAY,GAAElgB,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAEV6f,EAAW1f,KAAK+f,SAAQ,SAAC3d,GAAC,OAC9Bud,EAAa1Q,KAAK7M,EAAE/B,QAAQiR,WAC5B,KAAD,GAC0B,OAA3B4N,EAAaS,GAAchgB,EAAAE,KAAA,GACrB6f,EAAW1f,KAAK+f,SAAQ,SAAC3d,GAAC,OAC9Byd,EAAU5Q,KAAK7M,EAAE/B,QAAQoJ,YACzB,KAAD,GAC0B,OAA3B6V,EAAgBO,GAAWlgB,EAAAE,KAAA,GAErB6f,EAAW1f,KAAK+f,SAAQ,SAAC3d,GAAC,OAC9B+c,EAAWlQ,KACT,IAAIhZ,KAAKmM,EAAEsL,WAAWC,mBAAmB,SAASqS,OAAO,EAAG,OAE9D,KAAD,GACDZ,EAAcD,GAAYxf,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,UAE1BtB,QAAQC,IAAI,QAAQ,yBAAAqB,EAAAM,UAAAV,EAAA,oBAGzB,kBArCa,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAuCdke,KACC,CAAC5b,EAAUugB,EAAoB7Y,EAAGwH,MAAOxH,EAAGlO,MAE/C0G,qBAAU,YACO,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAAoc,EAAAC,EAAA,OAAA7gB,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACG2F,EAAYX,iBAAiB,KAAD,EAE5B,cAFfob,EAAMlc,EAAAhE,MACIC,KAAKwD,SACnBmD,EAAMsZ,EAAOjgB,MAAM+D,EAAAlE,KAAA,EACCC,EAAYjF,SAAS6L,EAAGlO,KAAK,KAAD,EAA5C0nB,EAAOnc,EAAAhE,KAEX+e,EAASoB,EAAQlgB,KAAK,IAAI,wBAAA+D,EAAA9D,UAAA4D,OAC3B,kBAPc,OAAAhB,EAAA3C,MAAA,KAAAxD,aAAA,EAQfyjB,KACC,CAACxZ,EAAOD,EAAGlO,MAEd0G,qBAAU,YACI,eAAAsM,EAAApM,YAAAC,IAAAC,MAAG,SAAAmM,IAAA,IAAA2U,EAAA,OAAA/gB,IAAAK,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,WACT6G,EAAGlO,IAAI,CAADkT,EAAA7L,KAAA,eAAA6L,EAAA7L,KAAA,EACamR,GAAWxB,kBAAkB9I,EAAGlO,KAAK,KAAD,EAArD4nB,EAAQ1U,EAAA3L,KACZgf,EAAUqB,EAASpgB,KAAK,IAAI,wBAAA0L,EAAAzL,UAAAwL,OAE/B,kBALW,OAAAD,EAAAtL,MAAA,KAAAxD,aAAA,EAMZ8W,KACC,CAAC9M,EAAGlO,MAEP,IAmBI6nB,EAnBErgB,EAAO,CACXsgB,OAAQnB,EACRoB,SAAU,CACR,CACE7f,MAAO,SACPV,KAAMif,EACNuB,MAAM,EACN3D,gBAAiB,UACjB4D,YAAa,WAEf,CACE/f,MAAO,UACPV,KAAMqf,EACNmB,MAAM,EACN3D,gBAAiB,UACjB4D,YAAa,aAKbC,EAAU,CACdA,QAAS,CACPC,UAAW,CACTC,WAAY,WACVP,GAAU,GAEZ/C,MAAO,SAACuD,GACN,IAAIvD,EAAQ,EAQZ,MANmB,SAAjBuD,EAAQ3d,MACS,YAAjB2d,EAAQC,MACPT,IAED/C,EAA4B,IAApBuD,EAAQE,UAAyC,IAAvBF,EAAQG,cAErC1D,IAGX2D,OAAQ,CACN1D,EAAG,CACDra,KAAM,UAERib,EAAG,CACD+C,aAAa,MAMrB,OACExrB,eAAA,OAAKC,UAAU,6BAA4BE,SAAA,CACzCC,cAACM,EAAU,CAACE,UAAU,sBACrBgd,KAAE6N,QAAQnkB,IACTlH,cAAA,OAAKH,UAAU,UAASE,SACtBC,cAACsrB,KAAe,CACd3jB,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,wBACNgW,eAAe,yBAEfC,UAASP,KAAE6N,QAAQnkB,QAIvBsW,KAAE6N,QAAQnkB,IACVtH,eAAA,OAAKC,UAAU,GAAEE,SAAA,CACfH,eAAA,OAAKC,UAAU,sCAAqCE,SAAA,CAClDC,cAAA,QAAMH,UAAU,oBAAmBE,UAChC,IAAII,MAAO0X,mBAAmB,WAEjCjY,eAAA,OACEC,UAAU,oDACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFH,eAAA,OAAKC,UAAU,WAAUE,SAAA,CACvBH,eAAA,KAAAG,SAAA,CACG6Q,EAAG2a,UAAU,IAAE3a,EAAG4a,YAErBxrB,cAAA,KAAAD,SAAI6Q,EAAGxN,WACPxD,eAACc,IAAI,CACHb,UAAU,kCACVc,GAAE,yBAAAC,OAA2BgQ,EAAGlO,KAAM3C,SAAA,CAEtCC,cAACiY,IAAU,CAACnQ,MAAM,QAAQjI,UAAU,SAAS,oBAIjDG,cAAA,OAAKH,UAAU,SAAQE,SACrBC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGgQ,EAAG1N,OAAShD,IAAI,UAG5CN,eAAA,OAAKC,UAAU,oDAAmDE,SAAA,CAChEH,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,iBACHC,cAAA,KAAAD,SAAImH,EAAMsD,iBAEZ5K,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,eACHC,cAAA,KAAAD,SAAImH,EAAMwd,UAAYxd,EAAMwd,UAAUwD,QAAQ,GAAK,OAErDtoB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,gBACHC,cAAA,KAAAD,SAAImH,EAAMud,gBAEZ7kB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,oBACHC,cAAA,KAAAD,SAAImH,EAAMyd,qBAEZ/kB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,cACHH,eAAA,KAAAG,SAAA,CAAImH,EAAM0d,kBAAkB,aAGhChlB,eAAA,OAAKC,UAAU,mDAAkDE,SAAA,CAC/DH,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,gBACHC,cAAA,KAAAD,SAAImH,EAAM2d,WAAWqD,QAAQ,QAE/BtoB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,eACHC,cAAA,KAAAD,SAAImH,EAAMukB,eAEZ7rB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,aACHC,cAAA,KAAAD,SAAImH,EAAMwkB,eAEZ9rB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BH,eAAA,KAAAG,SAAA,CAAIkd,EAAa,mBACjBjd,cAAA,KAAAD,SAAImF,EAAQA,EAAMsF,YAAc,2BAElC5K,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,eACHC,cAAA,KAAAD,SAAI2d,EAAOiO,oBAGf/rB,eAAA,OAAKC,UAAU,+CAA8CE,SAAA,CAC3DH,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,kBACHC,cAAA,KAAAD,SAAImH,EAAM0kB,YAAc1kB,EAAM0kB,YAAY1D,QAAQ,GAAK,OAEzDtoB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,cACHC,cAAA,KAAAD,SAAI,IAAII,KAAK+G,EAAMxC,UAAUmT,mBAAmB,oBAItD7X,cAAA,OAAKH,UAAU,SAAQE,SACrBC,cAAA,MAAIH,UAAU,cAAaE,SAAC,qBAE9BC,cAAA,OAAKH,UAAU,kBAAiBE,SAC9BC,cAAC6rB,KAAI,CAAC3hB,KAAMA,EAAM0gB,QAASA,MAE7B5qB,cAAC8oB,GAAa,CAAC7lB,QAASA,W,SC8DnB6oB,GAzSG,SAAC3qB,GACjB,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7Bwa,EAAIva,EAAA,GAAEwa,EAAOxa,EAAA,GACpBuD,EAAoDrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAzDkX,EAAkBjX,EAAA,GAAEkX,EAAqBlX,EAAA,GAChDwF,EAAsC9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAA3C2R,EAAW1R,EAAA,GAAE2R,EAAc3R,EAAA,GAClCoE,EAA8BnW,mBAAS,IAAGoW,EAAAlW,YAAAiW,EAAA,GAAnCwN,EAAOvN,EAAA,GAAEwN,EAAUxN,EAAA,GAC1BG,EAAgDvW,mBAAS,IAAGwW,EAAAtW,YAAAqW,EAAA,GAArDsN,EAAgBrN,EAAA,GAAEsN,EAAmBtN,EAAA,GAC5CyC,EAA8CjZ,mBAAS,IAAGkZ,EAAAhZ,YAAA+Y,EAAA,GAAnD8K,EAAe7K,EAAA,GAAE8K,EAAkB9K,EAAA,GAC1CG,EAAgDrZ,mBAAS,IAAGsZ,EAAApZ,YAAAmZ,EAAA,GAAnC4K,GAAF3K,EAAA,GAAqBA,EAAA,IACtCrd,EAASxD,EAAM6G,MAAMC,OAAOtD,OAC5BS,EAAWjE,EAAM6G,MAAMC,OAAO7C,SAEpCgE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAAwB,EAAAsmB,EAAAC,EAAA7b,EAAA8b,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtJ,EAAA,OAAAta,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAY7E,UAAUR,EAAQS,GAAU,KAAD,EACtC,GAAnBN,GADIA,EAAK+E,EAAAI,MACKC,KAEG,gBAAb9E,EAA0B,CAAAyE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACHC,EAAY1D,aAAa3B,GAAQ,KAAD,EAArD2B,EAAYuD,EAAAI,KAChBiiB,EAAsB5lB,EAAa4D,MACnC,IACQ0iB,EAAeX,EAAmB/R,MAAK,SAACpC,GAC5C,OAAOA,EAAOpV,IAAIsnB,YAAc+B,EAAKrpB,IAAIsnB,aAE3C2C,EAAoBC,GACpB,MAAOvgB,GACPsgB,EAAoB,CAAES,kBAAmB,IACzC7kB,QAAQC,IAAI,IAAK6D,GAClB,QA2CF,OAvCGwgB,EAASrP,KAAE6P,MACb7P,KAAE8P,MAAMxoB,EAAO,iBACf0Y,KAAE8P,MAAMrB,EAAoB,kBAE1Bjb,EAASwM,KAAExM,OAAO6b,GACtBzS,EAAQpJ,GAEJ8b,EAAO,GACLC,EAAW,CACfvC,OAAQ,GACRC,SAAU,CACR,CACE7f,MAAM,GAADhK,OAAKurB,EAAW,cACrBjiB,KAAM,GACN6c,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,yBACA,wBACA,yBAEF4D,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,sBACA,sBACA,uBAEF4C,YAAa,KAGlB1jB,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAEOjF,EAAMmlB,SAAQ,SAACnS,GACnBiV,EAASvC,OAAOrR,KAAKrB,EAAOpV,IAAIS,MAChC4pB,EAAStC,SAAS,GAAGvgB,KAAKiP,KAAKrB,EAAO0V,cACrC,KAAD,GACFd,EAAmBK,GAAUljB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,UAE7BtB,QAAQC,IAAI,QAAQ,QAiCrB,OA9BKwkB,EAAY,CAChBxC,OAAQ,GACRC,SAAU,CACR,CACEvgB,KAAM,GACN6c,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,yBACA,wBACA,yBAEF4D,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,sBACA,sBACA,uBAEF4C,YAAa,KAGlB1jB,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAEOjF,EAAMmlB,SAAQ,SAACnS,GACnBkV,EAAUxC,OAAOrR,KAAKrB,EAAOpV,IAAIS,MACjC2pB,EAAK3T,KAAKrB,EAAO0V,cAChB,KAAD,GACEP,EAAMH,EAAKW,QAAO,SAACC,EAAanY,GAAC,OAAKmY,EAAcnY,IAAG,GACvD2X,EAAgB,GACpBJ,EAAK7C,SAAQ,SAAC0D,GACZT,EAAc/T,KAAK,GAADvY,QAAM+sB,EAAUV,EAAO,KAAK/E,QAAQ,QAExD8E,EAAUvC,SAAS,GAAGvgB,KAAOgjB,EAC7BV,EAAoBQ,GAAWnjB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA+jB,GAAA/jB,EAAA,UAE/BtB,QAAQC,IAAI,QAAQ,QAGI,OAAtB2kB,EAASroB,EAAM0f,QAAO3a,EAAAE,KAAA,GAEN2M,GAAY3D,QAAQpO,GAAQ,KAAD,GAA3Ckf,EAAOha,EAAAI,KACXqiB,EAAWzI,EAAQ3Z,MAAML,EAAAgkB,GAEjBzoB,EAAQyE,EAAAE,KACT,cADSF,EAAAgkB,GACE,GAGX,eAHWhkB,EAAAgkB,GAGC,GAGZ,eAHYhkB,EAAAgkB,GAGA,GAGZ,oBAHYhkB,EAAAgkB,GAGK,oBARa,OAAjCzB,EAAe,kBAAkBviB,EAAAikB,OAAA,oBAGH,OAA9B1B,EAAe,eAAeviB,EAAAikB,OAAA,oBAGK,OAAnC1B,EAAe,oBAAoBviB,EAAAikB,OAAA,oBAGD,OAAlC1B,EAAe,mBAAmBviB,EAAAikB,OAAA,oBAGlC1B,EAAe,gBAAgB,QAEnCJ,EAAQmB,GACR/S,EAAQtV,GAAO,yBAAA+E,EAAAM,UAAAV,EAAA,4BAChB,kBA3Ia,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EA4Idke,KACC,CAAC1K,EAASzV,EAAQS,EAAU+mB,IAC/B,IAAI4B,EAAO,EAGX,OAFAC,KAAQC,SAASC,KAAYC,KAASC,MAGpCxuB,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CAACE,UAAW2rB,IACvBvsB,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGyrB,EAAQjV,WAAalX,IAAI,KACjDF,cAAA,QAAAD,UAAO,IAAII,MAAO0X,mBAAmB,cAEtB,IAAhB3N,EAAKrD,QACJ7G,cAAA,OAAKH,UAAU,eAAcE,SAC3BC,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,QAAyB,IAAhB7T,EAAKrD,WAKnBqD,EAAKrD,OAAS,GAAKklB,EAAKrpB,KACvB9C,eAAA,OAAKC,UAAU,kBAAkBC,GAAG,UAASC,SAAA,CAC3CH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACvBH,eAAA,MACEC,UAAU,yBACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFH,eAAA,OAAKC,UAAU,sBAAqBE,SAAA,CAClCH,eAAA,OAAKC,UAAU,MAAKE,SAAA,CACD,iBAAhBosB,EAAiCJ,EAAKsC,iBAAmB,EAAE,IAC5DruB,cAAA,QAAMH,UAAU,wBAAuBE,SACpCgsB,EAAKqB,kBAAoB,EAAI,EAAIptB,cAACsuB,IAAa,IAAM,KAExDtuB,cAAA,QAAMH,UAAU,wBAAuBE,SACpCgsB,EAAKqB,kBAAoB,EAAI,EAC1BrB,EAAKqB,kBAAoB,EACzB,QAGRptB,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoBmrB,EAAKrpB,IAAIsnB,WAAalqB,GAAG,WAAUC,SAC5DmK,EAAKrD,OAAS,EAAIklB,EAAKrpB,IAAIS,KAAO,KAErCnD,cAAA,OAAKF,GAAG,SAASD,UAAU,YAAWE,SACnCmK,EAAKrD,OAAS,EAAIklB,EAAKyB,UAAY,QAGxCxtB,cAAA,OAAKH,UAAU,YAAWE,SACxBC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoBmrB,EAAKrpB,IAAIsnB,WAAalqB,GAAG,WAAUC,SAC7DC,cAAA,OACEC,IAAKiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGmrB,EAAKrpB,IAAIQ,OAAU,GACxDhD,IAAI,YAKZF,cAAC4C,IAAMC,SAAQ,CAAA9C,SACZmK,EAAKI,KAAI,SAACwN,GAAM,OACflY,eAAA,MAAIC,UAAU,WAAUE,SAAA,CACtBH,eAAA,OAAKC,UAAU,cAAaE,SAAA,CACT,iBAAhBosB,GAAkCrU,EAAOuW,iBACzB,iBAAhBlC,GACCnsB,cAAA,QAAMF,GAAG,SAAQC,SACd+X,EAAOsV,kBAAoBtV,EAAOuW,iBACnC,EACEruB,cAACsuB,IAAa,IACZxW,EAAOsV,kBAAoBtV,EAAOuW,iBACpC,EACAruB,cAACuuB,IAAe,CAAC1uB,UAAU,gBAE3BG,cAACwuB,IAAc,CAAC3uB,UAAU,mBAIf,iBAAhBssB,GACCnsB,cAAA,QACEH,UAAS,oBAAAe,OACPkX,EAAOsV,kBAAoBtV,EAAOuW,iBAAmB,EACjD,cACAvW,EAAOsV,kBACLtV,EAAOuW,iBACT,EACA,eACA,gBACHtuB,SAEF+X,EAAOsV,kBAAoBtV,EAAOuW,mBACnC,EACIvW,EAAOsV,kBAAoBtV,EAAOuW,iBAClC,IAGS,iBAAhBlC,GAAkC4B,OAErC/tB,cAACU,IAAI,CACHb,UAAU,WACVc,GAAE,kBAAAC,OAAoBkX,EAAOpV,IAAIsnB,WAAYjqB,SAE7CC,cAAA,OACEC,IACEiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGkX,EAAOpV,IAAIQ,OAAU,GAEvDhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,UAASE,SACrBmK,EAAKrD,OAAS,EAAIiR,EAAOpV,IAAIS,KAAO,KAEvCnD,cAAA,OACEH,UACEiY,EAAO0V,UAAY,EACf,yBACA,wBACLztB,SAEAmK,EAAKrD,OAAS,EAAIiR,EAAO0V,UAAY,OAzDZ1V,EAAOpV,IAAIS,cA+D9B,mBAAhBgpB,GAAoD,iBAAhBA,GACnCvsB,eAACgD,IAAMC,SAAQ,CAAA9C,SAAA,CACbH,eAAA,MAAIC,UAAU,2CAA0CE,SAAA,CACrDosB,EAAY,WAEfnsB,cAACyuB,KAAQ,CAACvkB,KAAMqiB,EAAkB1sB,UAAU,iBAGhDG,cAAC0uB,KAAG,CAACxkB,KAAMuiB,EAAiB5sB,UAAU,gBCxJjC8uB,GAhJK,SAACxtB,GACnB,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7Bwa,EAAIva,EAAA,GAAEwa,EAAOxa,EAAA,GACpBuD,EAA8BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAnCsX,EAAOrX,EAAA,GAAEsX,EAAUtX,EAAA,GAC1BwF,EAA8C9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAAnDiS,EAAehS,EAAA,GAAEiS,EAAkBjS,EAAA,GACpC9V,EAASxD,EAAM6G,MAAMC,OAAOtD,OAElCyE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAA+e,EAAAkJ,EAAAI,EAAA,OAAA5jB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAY3E,SAASV,GAAQ,KAAD,EAC3B,OAAnBG,GADIA,EAAK+E,EAAAI,MACKC,KAAKL,EAAAE,KAAA,EAEC2M,GAAY3D,QAAQpO,GAAQ,KAAD,EAkC9C,OAlCGkf,EAAOha,EAAAI,KACXqiB,EAAWzI,EAAQ3Z,MAEb6iB,EAAW,CACfvC,OAAQ,GACRC,SAAU,CACR,CACE7f,MAAM,uBACNV,KAAM,GACN6c,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,yBACA,wBACA,yBAEF4D,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,sBACA,sBACA,uBAEF4C,YAAa,KAGlB1jB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOjF,EAAMmlB,SAAQ,SAACnS,GACnBiV,EAASvC,OAAOrR,KAAKrB,EAAOpV,IAAIS,MAChC4pB,EAAStC,SAAS,GAAGvgB,KAAKiP,KAAKrB,EAAO8M,sBACrC,KAAD,GACF8H,EAAmBK,GAAUljB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,SAE7BtB,QAAQC,IAAI,QAAQ,QAGlB2kB,EAASroB,EAAM0f,QAEnBwH,EAAQmB,GACR/S,EAAQtV,GAAO,yBAAA+E,EAAAM,UAAAV,EAAA,mBAChB,kBArDa,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAuDdke,KACC,CAAC1K,EAASzV,IAEb,IAAIopB,EAAO,EAEX,OACEnuB,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CAACE,UAAU,cACtBZ,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGyrB,EAAQjV,WAAalX,IAAI,KACjDF,cAAA,QAAAD,UAAO,IAAII,MAAO0X,mBAAmB,cAEtB,IAAhB3N,EAAKrD,QACJ7G,cAAA,OAAKH,UAAU,eAAcE,SAC3BC,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,QAAyB,IAAhB7T,EAAKrD,WAInBqD,EAAKrD,OAAS,GACbjH,eAAA,OAAKC,UAAU,kBAAkBC,GAAG,UAASC,SAAA,CAC3CH,eAAA,MAAIC,UAAU,aAAYE,SAAA,CACxBH,eAAA,MACEC,UAAU,yBACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFH,eAAA,OAAKC,UAAU,sBAAqBE,SAAA,CAClCC,cAAA,OAAKH,UAAU,MAAKE,SAAC,OACrBC,cAAA,KAAGK,KAAK,KAAKP,GAAG,WAAUC,SACvBmK,EAAKrD,OAAS,EAAIklB,EAAKrpB,IAAIS,KAAO,KAGrCnD,cAAA,OAAKF,GAAG,SAASD,UAAU,YAAWE,SACnCmK,EAAKrD,OAAS,EAAIklB,EAAKnH,kBAAoB,KAAO,QAGvD5kB,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAA,OACEC,IAAKiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGmrB,EAAKrpB,IAAIQ,OAAU,GACxDhD,IAAI,UAIVF,cAAC4C,IAAMC,SAAQ,CAAA9C,SACZmK,EAAKI,KAAI,SAACwN,GAAM,OACflY,eAAA,MAAIC,UAAU,kBAAiBE,SAAA,CAC7BH,eAAA,OAAKC,UAAU,SAAQE,SAAA,CAAEguB,IAAO,OAChC/tB,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IACEiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGkX,EAAOpV,IAAIQ,OAAU,GAEvDhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,UAASE,SACrBmK,EAAKrD,OAAS,EAAIiR,EAAOpV,IAAIS,KAAO,KAEvCnD,cAAA,OAAKH,UAAU,mBAAkBE,SAC9BmK,EAAKrD,OAAS,EAAIiR,EAAO8M,kBAAoB,KAAO,OAdpB9M,EAAOpV,IAAIS,cAoBtDnD,cAAC0uB,KAAG,CAACxkB,KAAMuiB,EAAiB5sB,UAAU,qBC+CjC+uB,GAtLO,SAACztB,GACrB,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7Bwa,EAAIva,EAAA,GAAEwa,EAAOxa,EAAA,GACpBuD,EAA8BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAnCsX,EAAOrX,EAAA,GAAEsX,EAAUtX,EAAA,GAC1BwF,EAA8C9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAAnDiS,EAAehS,EAAA,GAAEiS,EAAkBjS,EAAA,GAEtCoU,EAAc1tB,EAAM6G,MAAMC,OAAOgV,aAI/BtY,EAASxD,EAAM6G,MAAMC,OAAOtD,OAElCyE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAAioB,EAAAlJ,EAAAsJ,EAAA,OAAA5jB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAY/E,WAC5BN,GARemqB,EASHD,EART,IAAI1uB,KAAKA,KAAK4uB,MAAMD,EAAM,aAAazJ,WAAa,IASvD,KAAD,EAiCA,OAhCDvgB,GAJIA,EAAK+E,EAAAI,MAIKC,KACR6iB,EAAW,CACfvC,OAAQ,GACRC,SAAU,CACR,CACE7f,MAAM,mBACNV,KAAM,GACN6c,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,yBACA,wBACA,yBAEF4D,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,sBACA,sBACA,uBAEF4C,YAAa,KAGlB1jB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOjF,EAAMmlB,SAAQ,SAACnS,GACnBiV,EAASvC,OAAOrR,KAAKrB,EAAOpV,IAAIS,MAChC4pB,EAAStC,SAAS,GAAGvgB,KAAKiP,KAAKrB,EAAOtN,gBACrC,KAAD,EAEFkiB,EAAmBK,GAAUljB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,SAE7BtB,QAAQC,IAAI,QAAQ,eAAAqB,EAAAE,KAAA,GAGF2M,GAAY3D,QAAQpO,GAAQ,KAAD,GAA3Ckf,EAAOha,EAAAI,KACXqiB,EAAWzI,EAAQ3Z,MACfijB,EAASroB,EAAM0f,QACnBwH,EAAQmB,GACR/S,EAAQtV,GAAO,yBAAA+E,EAAAM,OA3DC,IAAC2kB,IA2DFrlB,EAAA,mBAChB,kBAtDa,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAwDdke,KACC,CAAC1K,EAASzV,IAEb,IAAIopB,EAAO,EAEX,OACEnuB,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CAACE,UAAS,GAAAI,OAAKiuB,EAAW,aACrCjvB,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGyrB,EAAQjV,WAAalX,IAAI,KACjDF,cAAA,QAAAD,UAAO,IAAII,MAAO0X,mBAAmB,cAEtB,IAAhB3N,EAAKrD,QACJ7G,cAAA,OAAKH,UAAU,eAAcE,SAC3BC,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,QAAyB,IAAhB7T,EAAKrD,WAInBqD,EAAKrD,OAAS,GAAKklB,EAAKrpB,KACvB9C,eAAA,OAAKC,UAAU,kBAAkBC,GAAG,UAASC,SAAA,CAC3CH,eAAA,MAAIC,UAAU,aAAYE,SAAA,CACxBH,eAAA,MACEC,UAAU,gCACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFH,eAAA,OAAKC,UAAU,sBAAsBC,GAAG,kBAAiBC,SAAA,CACvDC,cAAA,OAAKH,UAAU,MAAKE,SAAC,OACrBC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoBmrB,EAAKrpB,IAAIsnB,WAAalqB,GAAG,WAAUC,SAC5DmK,EAAKrD,OAAS,EAAIklB,EAAKrpB,IAAIS,KAAO,KAErCvD,eAAA,OAAKE,GAAG,SAASD,UAAU,YAAWE,SAAA,CACpCC,cAAA,OAAKH,UAAU,cAAaE,SAAC,kBAC7BC,cAAA,OAAKH,UAAU,eAAcE,SAAEgsB,EAAKtH,gBAEtC7kB,eAAA,OAAKE,GAAG,SAASD,UAAU,YAAWE,SAAA,CACpCC,cAAA,KAAGH,UAAU,kBAAiBE,SAAC,gBAC/BH,eAAA,KAAGC,UAAU,kBAAiBE,SAAA,CAC3B,IACAmK,EAAKrD,OAAS,EAAIklB,EAAKrH,UAAY,SAGxC9kB,eAAA,OAAKE,GAAG,SAASD,UAAU,YAAWE,SAAA,CACpCC,cAAA,KAAGH,UAAU,kBAAiBE,SAAC,kBAC/BH,eAAA,KAAGC,UAAU,kBAAiBE,SAAA,CAC3B,IACAmK,EAAKrD,OAAS,EAAIklB,EAAKvhB,YAAc,YAI5CxK,cAAA,OAAKH,UAAU,mBAAkBE,SAC/BC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoBmrB,EAAKrpB,IAAIsnB,WAAalqB,GAAG,WAAUC,SAC7DC,cAAA,OACEC,IAAKiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGmrB,EAAKrpB,IAAIQ,OAAU,GACxDhD,IAAI,YAKZN,eAAA,MAAIC,UAAU,0DAAyDE,SAAA,CACrEC,cAAA,OAAAD,SAAK,SACLC,cAAA,OAAAD,SAAK,UACLC,cAAA,OAAAD,SAAK,WACLC,cAAA,OAAAD,SAAK,iBACLC,cAAA,OAAAD,SAAK,eACLC,cAAA,OAAAD,SAAK,oBAEPC,cAAC4C,IAAMC,SAAQ,CAAA9C,SACZmK,EAAKI,KAAI,SAACwN,GAAM,OACflY,eAAA,MAAIC,UAAU,kBAAiBE,SAAA,CAC7BH,eAAA,OAAKC,UAAU,eAAcE,SAAA,CAAEguB,IAAO,OACtC/tB,cAAA,OAAKH,UAAU,iBAAgBE,SAC7BC,cAAA,OACEC,IACEiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGkX,EAAOpV,IAAIQ,OAAU,GAEvDhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,oBAAmBE,SAC/BmK,EAAKrD,OAAS,EAAIiR,EAAOpV,IAAIS,KAAO,KAEvCnD,cAAA,OAAKH,UAAU,iBAAgBE,SAC5BmK,EAAKrD,OAAS,EAAIiR,EAAO2M,WAAa,KAEzCzkB,cAAA,OAAKH,UAAU,iBAAgBE,SAC5BmK,EAAKrD,OAAS,EAAIiR,EAAO4M,UAAUwD,QAAQ,GAAK,KAEnDloB,cAAA,OAAKH,UAAU,kBAAiBE,SAC7BmK,EAAKrD,OAAS,EAAIiR,EAAOtN,YAAc,OApBPsN,EAAOpV,IAAIS,cA0BrDspB,EAAgBhC,UACfzqB,cAAC0uB,KAAG,CAACxkB,KAAMuiB,EAAiB5sB,UAAU,gBCZnCmvB,GApKK,SAAC7tB,GACnB,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7Bwa,EAAIva,EAAA,GAAEwa,EAAOxa,EAAA,GACpBuD,EAA8BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAnCsX,EAAOrX,EAAA,GAAEsX,EAAUtX,EAAA,GAC1BwF,EAAgD9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAArD+R,EAAgB9R,EAAA,GAAE+R,EAAmB/R,EAAA,GAEtC9V,EAASxD,EAAM6G,MAAMC,OAAOtD,OAClCyE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAAmqB,EAAAnC,EAAAE,EAAAC,EAAAC,EAAArJ,EAAAsJ,EAAA,OAAA5jB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAY1E,QAAQX,GAAQ,KAAD,EAC1B,OAAnBG,GADIA,EAAK+E,EAAAI,MACKC,KAAKL,EAAAE,KAAA,EAEWC,EAAY/D,YAAYtB,GAAQ,KAAD,EAkC5D,OAjCDsqB,GADIA,EAAiBplB,EAAAI,MACiBC,KAElC4iB,EAAO,GACLE,EAAY,CAChBxC,OAAQ,GACRC,SAAU,CACR,CACEvgB,KAAM,GACN6c,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,yBACA,wBACA,yBAEF4D,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,sBACA,sBACA,uBAEF4C,YAAa,KAGlB1jB,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAEOklB,EAAkBhF,SAAQ,SAACnS,GAC/BkV,EAAUxC,OAAOrR,KAAKrB,EAAOpV,IAAIS,MACjC2pB,EAAK3T,KAAKrB,EAAOtN,gBAChB,KAAD,GACEyiB,EAAMH,EAAKW,QAAO,SAACC,EAAanY,GAAC,OAAKmY,EAAcnY,IAAG,GACvD2X,EAAgB,GACpBJ,EAAK7C,SAAQ,SAAC0D,GACZT,EAAc/T,KAAK,GAADvY,QAAM+sB,EAAUV,EAAO,KAAK/E,QAAQ,QAExD8E,EAAUvC,SAAS,GAAGvgB,KAAOgjB,EAC7BV,EAAoBQ,GAAWnjB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,UAE/BtB,QAAQC,IAAGqB,EAAAgG,GAAQ,QAAQ,eAAAhG,EAAAE,KAAA,GAGT2M,GAAY3D,QAAQpO,GAAQ,KAAD,GAA3Ckf,EAAOha,EAAAI,KACXqiB,EAAWzI,EAAQ3Z,MASnBpF,EAPoB,SAACoqB,EAAMC,GACzB,OAAOD,EAAK5kB,KAAI,SAAC4B,GACf,IAAMO,EAAM2iB,OAAOC,OAAO,GAAInjB,GAE9B,OADAO,EAAI0iB,GAAQ,IAAIhvB,KAAKsM,EAAI0iB,IAAOtX,qBACzBpL,KAGH6iB,CAAYxqB,EAAO,aACvBqoB,EAASroB,EAAM0f,QACnBwH,EAAQmB,GACR/S,EAAQtV,GAAO,yBAAA+E,EAAAM,UAAAV,EAAA,oBAChB,kBArEa,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAuEdke,KACC,CAACngB,IAEJ,IAAIopB,EAAO,EAGX,OAFAC,KAAQC,SAASC,KAAYC,KAASC,MAGpCxuB,eAAA,OAAKC,UAAU,kBAAiBE,SAAA,CAC9BC,cAACM,EAAU,CAACE,UAAU,mBACtBZ,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGyrB,EAAQjV,WAAalX,IAAI,KACjDF,cAAA,QAAAD,UAAO,IAAII,MAAO0X,mBAAmB,cAEvCjY,eAAA,OAAKC,UAAU,kBAAkBC,GAAG,UAASC,SAAA,CAC3CH,eAAA,MAAIC,UAAU,aAAYE,SAAA,CACxBH,eAAA,MACEC,UAAU,yBACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFH,eAAA,OAAKC,UAAU,sBAAqBE,SAAA,CAClCC,cAAA,OAAKH,UAAU,MAAKE,SAAC,OACrBC,cAAA,KAAGK,KAAK,KAAKP,GAAG,WAAUC,SACvBmK,EAAKrD,OAAS,EAAIklB,EAAKxhB,QAAQpH,KAAO,KAEzCnD,cAAA,OAAKH,UAAU,gBAAeE,SAC3BmK,EAAKrD,OAAS,EAAIklB,EAAKnU,UAAY,KAEtC5X,cAAA,OAAKF,GAAG,SAASD,UAAU,YAAWE,SACnCmK,EAAKrD,OAAS,EAAIklB,EAAKxhB,QAAQiR,OAAS,QAG7Cxb,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAA,OACEC,IAAKiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGmrB,EAAKxhB,QAAQrH,OAAU,GAC5DhD,IAAI,UAIVF,cAAC4C,IAAMC,SAAQ,CAAA9C,SACZmK,EAAKI,KAAI,SAACwN,GAAM,OACflY,eAAA,MACEC,UAAU,kBAAiBE,SAAA,CAG3BH,eAAA,OAAKC,UAAU,YAAWE,SAAA,CAAEguB,IAAO,OACnC/tB,cAAA,OAAKH,UAAU,cAAaE,SAC1BC,cAAA,OACEC,IACEiK,EAAKrD,OAAS,EAAC,GAAAjG,OACRC,KAAQD,OAAGkX,EAAOvN,QAAQrH,OAC7B,GAENhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,aAAYE,SACxBmK,EAAKrD,OAAS,EAAIiR,EAAOvN,QAAQpH,KAAO,KAE3CnD,cAAA,OAAKH,UAAU,UAASE,SACrBmK,EAAKrD,OAAS,EAAIiR,EAAOF,UAAY,KAExC5X,cAAA,OAAKH,UAAU,eAAcE,SAC1BmK,EAAKrD,OAAS,EAAIiR,EAAOvN,QAAQiR,OAAS,OApBxC1D,EAAOF,UAAYE,EAAOvN,QAAQiR,gBA0B/Cxb,cAAA,MAAIH,UAAU,2CAA0CE,SAAC,4CAGxDwsB,EAAiBgD,eAAe,UAC/BvvB,cAACyuB,KAAQ,CAACvkB,KAAMqiB,EAAkB1sB,UAAU,cAE5C,UC1JJ8R,GAAgB,CACpB4Z,UAAW,GACXC,SAAU,GACVpoB,SAAU,GACVqK,MAAO,GACPC,SAAU,GACVxK,MAAO,IAIHuN,GAAmBC,KAAW,CAClC6a,UAAW7a,OAAapB,SAAS,YACjCkc,SAAU9a,OAAapB,SAAS,YAChClM,SAAUsN,OAAapB,SAAS,YAChCpM,MAAOwN,OACPjD,MAAOiD,OAAajD,MAAM,wBAAwB6B,SAAS,YAC3D5B,SAAUgD,OACPnB,IAAI,EAAG,gCACPD,SAAS,cAwJCkgB,GApJA,SAACruB,GACd,IAAMqO,EAAW,eAAAjP,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,EAAMgG,GAAU,OAAAlG,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClCxB,QAAQC,IAAIiH,GACZggB,EAASzkB,wBAAC,GAAI0kB,GAAM,IACpBnE,UAAW9b,EAAWE,WAAWggB,UACjCnE,SAAU/b,EAAWE,WAAWigB,WAChCxsB,SAAU,GACVqK,MAAOgC,EAAWE,WAAWlC,MAC7BC,SAAUvN,KAAK0vB,MACfC,OAAQ3vB,KAAK0vB,SACbE,GAAa,GACbC,EAASvgB,EAAWG,SAAQ,wBAAA/F,EAAAM,UAAAV,OAC7B,gBAXgB0E,GAAA,OAAA5N,EAAA6J,MAAA,KAAAxD,YAAA,GAaXuJ,EAAQ,eAAApD,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,EAAOiD,EAAQC,GAAa,IAAA/G,EAAA,OAAAX,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OAaF,OAZzCkH,EAAcC,eAAc,IACxBhH,EAAO,IAAIiH,UACVC,OAAO,YAAaJ,EAAOua,WAChCrhB,EAAKkH,OAAO,WAAYJ,EAAOwa,UAC/BthB,EAAKkH,OAAO,WAAYJ,EAAO5N,UAC/B8G,EAAKkH,OAAO,QAASJ,EAAOvD,OAC5BvD,EAAKkH,OAAO,WAAYJ,EAAOtD,UAC3BsD,EAAO9N,OACTgH,EAAKkH,OAAO,QAASJ,EAAO9N,OAC7B+K,EAAAnE,KAAA,EAGMkH,EAAO9N,cAAc8N,EAAO9N,MAAM+K,EAAAlE,KAAA,GACjCnF,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,UAAUqF,GAAM,KAAD,OACxC+lB,EAAS,CAAAhiB,EAAAlE,KAAA,gBAAAkE,EAAAlE,KAAA,GACD2F,EAAYrB,YAAY2C,EAAOvD,MAAMI,GAAM,QAAAI,EAAAlE,KAAA,wBAAAkE,EAAAlE,KAAA,GAC3C2F,EAAYxB,MAAM8C,EAAOvD,MAAOuD,EAAOtD,UAAS,QACxDtF,OAAOC,SAAW,IAClBnE,YAAM,2BAA2B+J,EAAAlE,KAAA,iBAAAkE,EAAAnE,KAAA,GAAAmE,EAAA4B,GAAA5B,EAAA,SAE7BA,EAAA4B,GAAG/L,UAAmC,MAAvBmK,EAAA4B,GAAG/L,SAASG,SAC7BoN,EAAU,CAAE5D,MAAO,wBACnBlF,QAAQvE,MAAKiK,EAAA4B,KACd,yBAAA5B,EAAA9D,UAAA4D,EAAA,mBAEJ,gBA1BaK,EAAAE,GAAA,OAAAvB,EAAA3C,MAAA,KAAAxD,YAAA,GA4Bd6B,EAAyBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA9BoF,EAAKlF,EAAA,GAACqnB,EAAQrnB,EAAA,GACrB4I,EAA4B7I,mBAAS,CAAE+E,MAAO,GAAIvK,MAAO,KAAKsO,EAAA5I,YAAA2I,EAAA,GAAvDhG,EAAMiG,EAAA,GAAEH,EAASG,EAAA,GACxBuD,EAAkCrM,oBAAS,GAAMsM,EAAApM,YAAAmM,EAAA,GAA1Ckb,EAASjb,EAAA,GAAE+a,EAAY/a,EAAA,GAC9BwF,EAA4B9R,mBAASiJ,IAAc8I,EAAA7R,YAAA4R,EAAA,GAA5CkV,EAAMjV,EAAA,GAAEgV,EAAShV,EAAA,GAExB,OADArR,qBAAU,WAAOb,QAAQC,IAAIknB,MACzBhgB,EAAYlB,iBAAyBxO,cAAC+P,IAAQ,CAACpP,GAAG,MAEpDf,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,YACtBR,cAACgQ,cAAW,CACVC,SAAS,2EACTC,UAAWV,EACX0gB,WAAW,wBAEblwB,cAACyR,KAAM,CACLC,oBAAkB,EAClBC,cAAe+d,EACfjf,iBAAkBA,GAClBN,SAAUA,EACVyB,iBAAe,EAAA7R,SAEd,SAAC8R,GACA,OACE7R,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,eAACqL,KAAI,CAAAlL,SAAA,CACHH,eAAA,OAAKC,UAAU,6CAA4CE,SAAA,CACzDC,cAAA,SAAO+K,QAAQ,aAAYhL,SAAC,eAC5BC,cAAC8R,KAAK,CAAC1E,KAAK,OAAOtN,GAAG,YAAYqD,KAAK,cACvCnD,cAAC+R,KAAY,CACX5O,KAAK,YACL6O,UAAU,MACVnS,UAAU,aAIdD,eAAA,OAAKC,UAAU,8CAA6CE,SAAA,CAC1DC,cAAA,SAAO+K,QAAQ,YAAWhL,SAAC,cAC3BC,cAAC8R,KAAK,CAAC1E,KAAK,OAAOtN,GAAG,WAAWqD,KAAK,aACtCnD,cAAC+R,KAAY,CACX5O,KAAK,WACL6O,UAAU,MACVnS,UAAU,aAIdD,eAAA,OAAKC,UAAU,8CAA6CE,SAAA,CAC1DC,cAAA,SAAO+K,QAAQ,YAAWhL,SAAC,cAC3BC,cAAC8R,KAAK,CAAC1E,KAAK,OAAOtN,GAAG,WAAWqD,KAAK,aACtCnD,cAAC+R,KAAY,CACX5O,KAAK,WACL6O,UAAU,MACVnS,UAAU,aAIdD,eAAA,OAAKC,UAAU,8CAA6CE,SAAA,CAC1DC,cAAA,SAAO+K,QAAQ,QAAOhL,SAAC,WACvBC,cAAC8R,KAAK,CAAC1E,KAAK,QAAQtN,GAAG,QAAQqD,KAAK,UACpCnD,cAAA,QAAMH,UAAU,QAAOE,SAAEwL,EAAOkC,QAChCzN,cAAC+R,KAAY,CACX5O,KAAK,QACL6O,UAAU,MACVnS,UAAU,aAGZowB,EAAajwB,cAAA,UACbJ,eAAA,OAAKC,UAAU,qDAAoDE,SAAA,CACjEC,cAAA,SAAO+K,QAAQ,WAAUhL,SAAC,aAC1BC,cAAC8R,KAAK,CAAC1E,KAAK,WAAWtN,GAAG,WAAWqD,KAAK,aAC1CnD,cAAC+R,KAAY,CACX5O,KAAK,WACL6O,UAAU,MACVnS,UAAU,aAIhBD,eAAA,OAAKC,UAAU,kDAAiDE,SAAA,CAC9DC,cAAA,SAAO+K,QAAQ,QAAOhL,SAAC,UACvBC,cAAA,SACEH,UAAU,qBACVuN,KAAK,OACLjK,KAAK,QACLmK,SAAU,SAAC2E,GACTJ,EAAOK,cAAc,QAASD,EAAME,OAAOC,MAAM,OAGrDpS,cAAA,QAAMH,UAAU,QAAOE,SAAEwL,EAAOrI,WAElClD,cAAA,UACEoN,KAAK,SACLvN,UAAU,kBACVsN,UAAW0E,EAAOQ,SAAWR,EAAOS,aAAavS,SAClD,yBCrFJowB,GA7EC,SAAH5vB,GAAoB,IAAdmF,EAAMnF,EAANmF,OACjB+C,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnC8B,EAAO5B,EAAA,GAAEyU,EAAUzU,EAAA,GAC1B4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAvB6e,GAAF5e,EAAA,GAASA,EAAA,IA2BpB,OAzBApI,qBAAU,YACC,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA4mB,EAAA,OAAA9mB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBmR,GAAW1B,YAAY9T,GAAQ,KAAD,EAAvC,OAAb2qB,EAAaxmB,EAAAI,KAAAJ,EAAAE,KAAA,EACKsmB,EAAcnmB,KAAK,GAAGK,QAAQ,KAAD,EAAnD8lB,EAAaxmB,EAAAI,KACbmT,EAAWiT,GAAexmB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,SAE1BtB,QAAQC,IAAI,SAAS,yBAAAqB,EAAAM,UAAAV,EAAA,mBAExB,kBARQ,OAAAsD,EAAA3C,MAAA,KAAAxD,aAAA,EASTib,KACC,IAEHzY,qBAAU,YACE,eAAAsM,EAAApM,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAAuiB,EAAA,OAAA/mB,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAnE,KAAA,EAAAmE,EAAAlE,KAAA,EAEcC,EAAYvE,SAASC,GAAQ,KAAD,EAA/C4qB,EAAUriB,EAAAhE,KACdmmB,EAAQE,EAAWpmB,MAAM+D,EAAAlE,KAAA,gBAAAkE,EAAAnE,KAAA,EAAAmE,EAAA4B,GAAA5B,EAAA,SAEzB1F,QAAQC,IAAI,SAAS,yBAAAyF,EAAA9D,UAAA4D,EAAA,kBAExB,kBAPS,OAAA2H,EAAAtL,MAAA,KAAAxD,aAAA,EAQVpB,KACC,IAGD5F,eAAA,OAAKC,UAAU,OAAME,SAAA,CACnBC,cAACM,EAAU,CAACE,UAAU,gBACtBR,cAAA,OAAKH,UAAU,kBAAkBC,GAAG,UAASC,SAC3CH,eAAA,MAAIC,UAAU,aAAYE,SAAA,CACxBC,cAAA,MACEF,GAAG,SACHD,UAAU,mBACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAEFH,eAAA,OAAKC,UAAU,8CAA6CE,SAAA,CAC1DC,cAAA,OAAKH,UAAU,UAASE,SAAC,aACzBC,cAAA,OAAKH,UAAU,UAASE,SAAC,kBAG5BwK,EAAQ1D,OAAS,GAChB0D,EAAQD,KAAI,SAACimB,GAAC,OACZ3wB,eAAA,OACEC,UAAU,wCAAuCE,SAAA,CAGjDH,eAAA,OAAKC,UAAU,oBAAmBE,SAAA,CAChCC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG2vB,EAAE,GAAGrtB,OAAShD,IAAI,KAC1CF,cAAA,KAAGH,UAAU,oCAAmCE,SAC7CwwB,EAAE,GAAGptB,UAGVnD,cAAA,KAAGH,UAAU,4BAA2BE,SACtCC,cAAA,UAAAD,SAAQ,SAEVH,eAAA,OAAKC,UAAU,oBAAmBE,SAAA,CAChCC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG2vB,EAAE,GAAGrtB,OAAShD,IAAI,KAC1CF,cAAA,KAAGH,UAAU,oCAAmCE,SAC7CwwB,EAAE,GAAGptB,YAdLotB,EAAE,GAAGzwB,gBCkZX0wB,GA/bC,SAACrvB,GACb,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAoB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAzBzR,EAAE0R,EAAA,GAAEif,EAAKjf,EAAA,GAChBuD,EAAoBrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAzBnE,EAAEoE,EAAA,GAAEnE,EAAKmE,EAAA,GAChBwF,EAA8B9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAAnCpU,EAAOqU,EAAA,GAAEiW,EAAUjW,EAAA,GAE1BrR,qBAAU,WACN,IAAMunB,EAAK,IAAIC,iBACF,eAAArwB,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA0R,EAAAkV,EAAA,OAAA9mB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACiB2F,EAAYX,iBAAiB,KAAD,EAG/C,OAHJoM,EAActR,EAAAI,KACpB2G,EAAG9Q,GAAKqb,EAAejR,KAAKxH,IAC5BkO,EAAGzN,KAAOgY,EAAejR,KAAK9G,SAC9ByN,EAAMD,GAAI/G,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGoBC,EAAYvE,SAAStE,EAAM6G,MAAMC,OAAOvC,QAAQ,KAAD,EAE3C,OAF1B2qB,EAAaxmB,EAAAI,KACjBmQ,EAAQiW,EAAcnmB,MACtBumB,EAAMJ,EAAcnmB,KAAKxH,KAAKmH,EAAAikB,OAAA,UACvB,kBAAM6C,EAAGE,WAAO,QAAAhnB,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,SAEvBtB,QAAQC,IAAGqB,EAAAgG,GAAI,MAAM,yBAAAhG,EAAAM,UAAAV,EAAA,mBAE5B,kBAdY,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAgBb2D,KACD,IAEHnB,qBAAU,WACN,IAAMhD,EAAU8D,EAAK8Q,aACrB0V,EAAWtqB,KACZ,CAAC8D,EAAK8Q,eAET,IAqLM8V,EAAW,eAAA/jB,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,OAAAxE,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OAuBb,OAtBH8L,KAAKC,KAAK,CACNC,MAAO,wBACPC,KAAM,GACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,QACpBC,MAAK,SAACE,GACDA,EAAOC,cACPia,EAAW9f,GACPxK,GACAlC,IAAM0S,QAAQ,gBAADhW,OAAOgQ,EAAGzN,KAAI,mBAAmB,CAC1C0T,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrQ,QAGvBmH,EAAAlE,KAAA,EACGC,EAAY7D,cAAcrG,EAAI8Q,GAAI,KAAD,mBAAA3C,EAAA9D,UAAA4D,OAC1C,kBAzBgB,OAAAhB,EAAA3C,MAAA,KAAAxD,YAAA,GA2BjB,OAAK9G,EAIGF,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACtBC,cAACM,EAAU,CAACE,UAAU,aACtBR,cAAA,KAAGH,UAAU,cAAaE,SAAED,IAC5BF,eAAA,KAAGC,UAAU,eAAcE,SAAA,CAAC,cACZ,IAAG,GAAAa,OACX,IAAIT,KAAK+J,EAAK0N,WAAWC,mBAAmB,SAAQ,cAAAjX,OAClE,IAAIT,KAAK+J,EAAK0N,WAAWzO,eAAe,QAAS,CAC/CiL,KAAM,UACNC,OAAQ,UACRE,QAAQ,QAGJ3U,eAAA,KAAGC,UAAU,4BAA2BE,SAAA,CAAC,gBACxBC,cAAA,QAAAD,SAAOqG,EAAUA,EAAQjD,KAAO,QAEhD+G,EAAKrD,OAAS,GACX7G,cAAA,OAAKH,UAAU,eAAcE,SACzBC,cAAC6d,KAAe,CACZlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,QAAyB,IAAhB7T,EAAKrD,WAKzBqD,EAAKK,SAAWnE,EAAQtG,KAAO8Q,EAAG9Q,IAC/BF,eAAA,OAAKC,UAAU,kBAAkBC,GAAG,aAAYC,SAAA,CAC5CC,cAACU,IAAI,CAACb,UAAU,qBAAqBc,GAAE,aAAAC,OAAesJ,EAAK6Q,SAAUhb,SAAC,uBA2BtEH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACrBC,cAAA,MACIF,GAAG,SACHD,UAAU,mBACV6X,MAAO,CACHC,gBAAgB,OAAD/W,OAAkC,4BAA2B,MAC9Eb,SAEFH,eAAA,OAAKC,UAAU,4CAA2CE,SAAA,CACtDC,cAAA,OAAKH,UAAU,KAAIE,SAAC,WACpBC,cAAA,OAAKH,UAAU,OAAME,SAAC,aACtBC,cAAA,OAAKH,UAAU,WAAUE,SAAC,YAC1BC,cAAA,OAAKH,UAAU,QAAOE,SAAC,iBACvBC,cAAA,OAAKH,UAAU,UAASE,SAAC,WACzBC,cAAA,OAAKH,UAAU,GAAEE,SAAC,iBAG1BC,cAAC4C,IAAMC,SAAQ,CAAA9C,SACVmK,EAAKK,QAAQD,KAAI,SAACwN,GAAM,OACrBlY,eAAA,MAAIC,UAAU,gDAA+CE,SAAA,CACzDH,eAAA,OAAKC,UAAU,oBAAmBE,SAAA,CAC9BC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAAShD,IAAI,WAC5CF,cAAA,KAAGH,UAAU,oCAAmCE,SAAE+X,EAAO3U,UAE3D2U,EAAOiZ,aAQL/wB,cAAA,KAAGH,UAAU,2BAA0BE,SAAC,QAPxCC,cAAA,KACIH,UAAU,yBACVsC,QAAS,kBAxSjCkR,EAwSkDyE,EAAOhY,GAxS/CmU,EAwSmD6D,EAAO3U,KAxS9C6tB,EAwSoDlZ,EAAO5U,WAvSjG2S,KAAKC,KAAK,CACNC,MAAM,kBAADnV,OAAoBqT,EAAU,KACnCgd,SAAS,GAADrwB,OAAKC,KAAQD,OAAGowB,GACxBE,WAAY,IACZC,YAAa,IACbC,SAAU,eACVC,gBAAgB,EAChBnb,kBAAkB,EAClBC,mBAAoB,UACpBmb,gBAAiB,UACjBjb,kBAAmB,KACnBkb,eAAe,QAChBjb,MAAK,SAACE,GACL,GAAIA,EAAOC,YAAa,CACpB,IAAIjR,EAAIwF,YAAA,GAAQd,GAEhB,GADA1E,EAAKE,OAASvE,EAAM6G,MAAMC,OAAOvC,OAC7BF,EAAKE,OAAQ,CACbF,EAAK1D,QAAS,EACd,IAAIgW,EAAS5N,EAAKK,QAAQ2P,MAAK,SAAC5N,GAAC,OAAK+G,IAAa/G,EAAExM,MACrDgY,EAAOnE,SAAW,GAClBmE,EAAOyD,cAAgB,SAChB/V,EAAK9C,WACL8C,EAAKgsB,IACZ,IAAIC,EAAiB,CACjBpe,SAAUyE,EAAOhY,GACjBmU,WAAY6D,EAAO3U,KACnB+Q,cAAe,GACfC,KAAM,IAAIhU,MAEVqF,EAAKuO,kBAGLvO,EAAKuO,gBAAkB,IAFvBvO,EAAKuO,gBAAgBoF,KAAKsY,GAK9BrX,EAAQ5U,GAERwE,EAAYrE,WAAWH,EAAKE,OAAQF,GACtB,IAAIoV,MAA4B,oBACxCC,OACN3W,IAAM0S,QAAQ,wCAADhW,OAAqBkX,EAAO3U,MAAQ,CAC7C0T,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrQ,UAGf,GAAI0P,EAAOkb,SAAU,CACxB,IAAIlsB,EAAIwF,YAAA,GAAQd,GAEhB,GADA1E,EAAKE,OAASvE,EAAM6G,MAAMC,OAAOvC,OAC7BF,EAAKE,OAAQ,CACbF,EAAK1D,QAAS,EACd,IAAIgW,EAAS5N,EAAKK,QAAQ2P,MAAK,SAAC5N,GAAC,OAAK+G,IAAa/G,EAAExM,MACrDgY,EAAOnE,SAAW,IAClBmE,EAAOyD,cAAgB,SAChB/V,EAAK9C,WACL8C,EAAKgsB,IACZ,IAAIC,EAAiB,CACjBpe,SAAUyE,EAAOhY,GACjBmU,WAAY6D,EAAO3U,KACnB+Q,cAAe,IACfC,KAAM,IAAIhU,MAEVqF,EAAKuO,kBAGLvO,EAAKuO,gBAAkB,IAFvBvO,EAAKuO,gBAAgBoF,KAAKsY,GAK9BrX,EAAQ5U,GAERwE,EAAYrE,WAAWH,EAAKE,OAAQF,GACtB,IAAIoV,MAA4B,oBACxCC,OACN3W,IAAM0S,QAAQ,yCAADhW,OAAsBkX,EAAO3U,MAAQ,CAC9C0T,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrQ,SArFX,IAACuM,EAAUY,EAAY+c,GAwSkEjxB,SACnE,QAOLC,cAAA,OAAKH,UAAU,UAASE,SAAE+X,EAAOnE,UACjC3T,cAAA,OAAKH,UAAU,gBAAeE,SACzB+X,EAAOiZ,aACJ/wB,cAAA,KAAGH,UAAU,+BAA8BE,SAAE+X,EAAOwD,aAEpDtb,cAAA,SACIoN,KAAK,SACLvN,UAAU,aACVyN,SAAU,SAAChB,GAAC,OArMvC,SAAC+G,EAAU/G,GAC5B,IAAIuO,EAAI7P,YAAA,GAAQd,GACZ4N,EAAS+C,EAAKtQ,QAAQ2P,MAAK,SAAC5N,GAAC,OAAK+G,IAAa/G,EAAExM,MACrDgY,EAAO6Z,WAAY,EAEnBrlB,EAAE6F,OAAOxQ,MAASmW,EAAOwD,WAAasW,SAAStlB,EAAE6F,OAAOxQ,OAAWmW,EAAOwD,WAAa,EACvFxD,EAAO0D,OAAS1D,EAAOwD,WAAaxD,EAAOnE,QAE3CyG,EADWS,GA8LkD/N,CAAagL,EAAOhY,GAAIwM,IACzC3K,MACImW,EAAOwD,WACDxD,EAAOwD,YACNxD,EAAOwD,YAAcxD,EAAO6Z,UAC7B,EACA,OAKtB3xB,cAAA,OAAKH,UAAU,gBAAeE,SAAE+X,EAAO0D,OAAS1D,EAAO0D,OAAS,IAC/D1D,EAAO6Z,YAAc7Z,EAAOiZ,cACzB/wB,cAAA,KACIH,UAAU,uCACVsC,QAAS,SAACmK,GAAC,OAzMjC,SAAC+G,GACnB,IAAIyE,EAAS5N,EAAKK,QAAQ2P,MAAK,SAAC5N,GAAC,OAAK+G,IAAa/G,EAAExM,MACrDgY,EAAOiZ,cAAe,EACtBjZ,EAAO+Z,YAAc,IAAI1xB,KACzB,IAAIqF,EAAIwF,YAAA,GAAQd,GAChB1E,EAAKE,OAASvE,EAAM6G,MAAMC,OAAOvC,cAC1BF,EAAK9C,WACL8C,EAAKgsB,WACLhsB,EAAKssB,gBACZ9nB,EAAYrE,WAAWH,EAAKE,OAAQF,GACpCA,EAAKssB,iBAAkB,EACvB1X,EAAQ5U,GA8LgDusB,CAAcja,EAAOhY,KAAIC,SAC5C,UAIH+X,EAAO6Z,YAAc7Z,EAAOiZ,cAC1B/wB,cAAA,KAAGH,UAAU,sBAAsBsC,QAAS,kBAjPhE,SAACkR,GACjB,IAAIyE,EAAS5N,EAAKK,QAAQ2P,MAAK,SAAC5N,GAAC,OAAK+G,IAAa/G,EAAExM,MACrD,GAAIgY,EAAOnE,QAAU,EAAG,CACpB,IAAInO,EAAIwF,YAAA,GAAQd,GAChB1E,EAAKE,OAASvE,EAAM6G,MAAMC,OAAOvC,cAC1BF,EAAK9C,WACL8C,EAAKgsB,IAEZ,IAAMQ,EAA2BxsB,EAAKuO,gBAAgBzJ,KAAI,SAAC2nB,GAAE,OAAKA,EAAG5e,YAAU6e,YAAY7e,GAErF8e,EAAqB3sB,EAAKuO,gBAAgBie,GAA0B9d,cAE1E1O,EAAKuO,gBAAgBqe,OAAOJ,EAA0B,GAEtDla,EAAOnE,SAAWwe,EAClBra,EAAOyD,cAAgB,EACvBnB,EAAQ5U,GACO,IAAIoV,MAA4B,qBACxCC,OACP7Q,EAAYrE,WAAWH,EAAKE,OAAQF,IA8N8C6sB,CAAYva,EAAOhY,KAAIC,SAAC,WAI7E+X,EAAO6Z,WAAa7Z,EAAOiZ,cACxB/wB,cAAA,KACIH,UAAU,yCACVsC,QAAS,kBAtMjC,SAACkR,GACjB,IAAIyE,EAAS5N,EAAKK,QAAQ2P,MAAK,SAAC5N,GAC5B,OAAO+G,IAAa/G,EAAExM,MAE1BgY,EAAOiZ,cAAe,EACtBjZ,EAAOwa,MAAO,EACd,IAAI9sB,EAAIwF,YAAA,GAAQd,GAChBkQ,EAAQ5U,GA+L+C+sB,CAAYza,EAAOhY,KAAIC,SACzC,WArD0D+X,EAAOhY,SA4DlFF,eAAA,MAAIC,UAAU,gDAA+CE,SAAA,CACzDC,cAAA,OAAKH,UAAU,2BACfG,cAAA,OAAKH,UAAU,sCAAqCE,SAAC,UACrDC,cAAA,OAAKH,UAAU,uBAAsBE,SAChCmK,EAAKK,QAAQkjB,QAAO,SAAClY,EAAGC,GACrB,OAAOD,EAAIC,EAAE7B,UACd,KAEP/T,eAAA,OAAKC,UAAU,4BAA2BE,SAAA,CACrC,IACAmK,EAAKK,QAAQkjB,QAAO,SAAClY,EAAGC,GACrB,OAAOD,EAAIC,EAAE8F,aACd,MAEPtb,cAAA,OAAKH,UAAU,4BAA2BE,SACrCmK,EAAKK,QAAQkjB,QAAO,SAAClY,EAAGC,GACrB,OAAOD,EAAIC,EAAEgG,SACd,KAEPxb,cAAA,OAAKH,UAAU,iCAAgCE,SAAC,cAEnDmK,EAAK4nB,iBACFlyB,eAAA,MAAIC,UAAU,gDAA+CE,SAAA,CACzDC,cAAA,OAAKH,UAAU,mBAAkBE,SAAC,6BAClCC,cAAA,OAAKH,UAAU,uBAAsBE,SAChCmK,EAAKK,QAAQkjB,QAAO,SAAClY,EAAGC,GACrB,OAAOD,EAAIC,EAAE7B,QAAU6B,EAAE8F,aAC1B,KAEPtb,cAAA,OAAKH,UAAU,kBACfG,cAAA,OAAKH,UAAU,8BACfG,cAAA,OAAKH,UAAU,iCAAgCE,SAAC,cAIxDH,eAAA,OAAKC,UAAU,6CAA4CE,SAAA,CACvDC,cAAA,OACIH,UAAU,6BACVsC,QAAS,WAzOrC0T,KAAKC,KAAK,CACNC,MAAO,6BACPC,KAAM,8BACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,QACpBC,MAAK,SAACE,GACL,GAAIA,EAAOC,YAAa,CACpB,IAAIjR,EAAIwF,YAAA,GAAQd,GAChB1E,EAAKE,OAASvE,EAAM6G,MAAMC,OAAOvC,cAC1BF,EAAK9C,WACL8C,EAAKssB,gBACZtsB,EAAK1D,QAAS,EACd0D,EAAK+E,QAAQ+K,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEgG,OAASjG,EAAEiG,UACzC,IAAIsF,EAAW,EACftb,EAAK+E,QAAQD,KAAI,SAACimB,GAAC,OAAMA,EAAEzP,SAAWA,OACtC1G,EAAQ5U,GACRwE,EAAYrE,WAAWH,EAAKE,OAAQF,GAAM8Q,MAAK,SAAC2E,GAC5CC,GAAWzB,UAAUjU,EAAKE,QAC1B0U,EAAQa,EAAI/Q,SAEhB/I,EAAM6X,QAAQC,QAAQ,cAADrY,OAAesJ,EAAK6Q,eAoNnBhb,SACL,gBAGDC,cAAA,OAAKH,UAAU,4BAA2BE,SAAC,wBAK1DmK,EAAKK,SAAWnE,EAAQtG,KAAO8Q,EAAG9Q,IAC/BE,cAAA,UACIH,UAAU,YACVsC,QAAS,WACL2uB,KACF/wB,SACL,yBAKLC,cAACmwB,GAAO,CAACzqB,OAAQwE,EAAKxH,IAAK7C,UAAU,SACrCG,cAACyT,GAAc,CAAC/N,OAAQ5F,EAAI4T,QAASxJ,OAxMtClK,cAAA,OAAKH,UAAU,eAAcE,SAAC,cC1H9ByyB,GA7HM,SAACrxB,GAClB,IAAAsH,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCgqB,EAAQ9pB,EAAA,GAAE+pB,EAAW/pB,EAAA,GAC5B4I,EAAoC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAzCohB,EAAUnhB,EAAA,GAAEohB,EAAaphB,EAAA,GAChCuD,EAAoCrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAzC8d,EAAU7d,EAAA,GAAE8d,EAAa9d,EAAA,GAChCwF,EAAwB9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAA7BtQ,EAAIuQ,EAAA,GAAEL,EAAOK,EAAA,GACpBoE,EAA0CnW,mBAAS,IAAGoW,EAAAlW,YAAAiW,EAAA,GAA/CkU,EAAajU,EAAA,GAAEkU,EAAgBlU,EAAA,GACtCG,EAA0BvW,mBAAS,IAAGwW,EAAAtW,YAAAqW,EAAA,GAA/BtY,EAAKuY,EAAA,GAAE+T,EAAQ/T,EAAA,GAyBtB,OAvBA9V,qBAAU,WACoB,SAAA8pB,IAkBzB,OAlByBA,EAAA5pB,YAAAC,IAAAC,MAA1B,SAAAC,IAAA,IAAA9E,EAAAwuB,EAAAjsB,EAAAsmB,EAAA4F,EAAAC,EAAAC,EAAAprB,EAAAhD,EAAAwE,EAAA6pB,EAAA,OAAAhqB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAckC,OAbxBpF,EAASxD,EAAM6G,MAAMC,OAAOtD,OAC5BwuB,EAAQ,IAAIhrB,gBAAgBhH,EAAMkH,SAASmrB,QAC3CtsB,EAAQisB,EAAM9uB,IAAI,SAClBmpB,EAAY2F,EAAM9uB,IAAI,aACxB+uB,EAAYD,EAAM9uB,IAAI,QAC1B+V,EAAQgZ,EAAUK,MAAM,MACpBJ,EAAcF,EAAM9uB,IAAI,cAC5ByuB,EAAcO,EAAYI,MAAM,MAC5BH,EAAaH,EAAM9uB,IAAI,cAC3B2uB,EAAiBM,EAAWG,MAAM,MAC9BvrB,EAAcirB,EAAM9uB,IAAI,eAC5B4uB,EAASS,KAAK3E,MAAM7mB,IACpBK,QAAQC,IAAI,cAAe7B,GACvBzB,EAAQiuB,EAAM9uB,IAAI,SAAQwF,EAAAE,KAAA,GACIC,EAAY/C,aAAatC,EAAQuC,EAAOhC,EAAOwuB,KAAK3E,MAAM7mB,IAAc,KAAD,GAAAwB,EAAAG,EAAAI,KAA3FspB,EAAS7pB,EAAfQ,KACRwoB,EAAYa,GACZX,EAAcpF,GAAW,yBAAA3jB,EAAAM,UAAAV,QAC5BW,MAAA,KAAAxD,YAnBY,WACassB,EAAA9oB,MAAC,KAADxD,WAmB1B+sB,KACD,IAGC/zB,eAAA,OAAKC,UAAU,0BAAyBE,SAAA,CACf,IAApB0yB,EAAS5rB,QACN7G,cAAA,OAAKH,UAAU,YAAWE,SACtBC,cAACyH,EAAY,MAGpBgrB,EAAS5rB,OAAS,GACfjH,eAAA,OAAKC,UAAU,sBAAqBE,SAAA,CAChCC,cAAA,OAAKH,UAAU,OAAME,SACjBC,cAACM,EAAU,CAACE,UAAWmyB,MAE3B/yB,eAAA,OAAKC,UAAU,gDAA+CE,SAAA,CAC1DC,cAAA,KAAGH,UAAU,GAAEE,SAAO,OAAL4G,QAAK,IAALA,OAAK,EAALA,EAAOI,YACxB/G,cAAA,KAAGH,UAAU,GAAEE,SAAO,OAAL4G,QAAK,IAALA,OAAK,EAALA,EAAOK,aAE5BpH,eAAA,OAAKC,UAAU,wBAAuBE,SAAA,CAClCH,eAAA,OAAKC,UAAU,mDAAkDE,SAAA,CAC7DC,cAAA,OAAKH,UAAU,kBAAiBE,SAC5BC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoB6xB,EAAS,GAAG/vB,IAAI5C,IAAKC,SAC7CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG6xB,EAAS,GAAG/vB,IAAIQ,OAAShD,IAAI,eAG7DN,eAAA,OAAKC,UAAU,oBAAmBE,SAAA,CAC9BC,cAAA,KAAAD,SAAG,OACHC,cAAA,KAAGH,UAAU,aAAYE,SAAE0yB,EAAS,GAAG/vB,IAAIS,OAC3CvD,eAAA,KAAGC,UAAU,eAAcE,SAAA,CACtB8yB,EAAW,GAAG,KAAE7yB,cAAA,QAAAD,SAAO0yB,EAAS,GAAGvoB,EAAK,SAE7CtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,KAAGJ,EAAS,GAAGvoB,EAAK,OAEvCtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,IAAEJ,EAAS,GAAGvoB,EAAK,OAEtClK,cAAA,OAAAD,SACK8yB,EAAW,IACRjzB,eAAA,KAAGC,UAAU,MAAKE,SAAA,CACb8yB,EAAW,GAAG,IAAEJ,EAAS,GAAGvoB,EAAK,SAI9ClK,cAAA,OAAAD,SACK8yB,EAAW,IACRjzB,eAAA,KAAGC,UAAU,MAAKE,SAAA,CACb8yB,EAAW,GAAG,IAAEJ,EAAS,GAAGvoB,EAAK,eAMtDtK,eAAA,MAAIg0B,MAAM,IAAI/zB,UAAU,gCAA+BE,SAAA,CACnDH,eAAA,MAAIC,UAAU,uBAAsBE,SAAA,CAChCH,eAAA,OAAKC,UAAU,iDAAgDE,SAAA,CAC3DC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,UACHC,cAAA,KAAGH,UAAU,aAAYE,SAAC,cAE9BH,eAAA,OAAKC,UAAU,yDAAwDE,SAAA,CACnEC,cAAA,KAAAD,SAAIgzB,EAAc,KAClB/yB,cAAA,KAAAD,SAAIgzB,EAAc,KAClB/yB,cAAA,KAAAD,SAAIgzB,EAAc,KAClB/yB,cAAA,KAAAD,SAAIgzB,EAAc,KAClB/yB,cAAA,KAAAD,SAAIgzB,EAAc,WAGzBN,EAAS5S,MAAM,GAAGvV,KAAI,SAACupB,EAAMC,GAAK,OAC/Bl0B,eAAA,MAAIC,UAAU,SAAQE,SAAA,CAClBH,eAAA,OAAKC,UAAU,sDAAqDE,SAAA,CAChEH,eAAA,KAAGC,UAAU,mBAAkBE,SAAA,CAAE+zB,EAAQ,EAAE,OAC3C9zB,cAAA,OAAKH,UAAU,4BAA2BE,SACtCC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoBizB,EAAKnxB,IAAI5C,IAAKC,SACtCC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGizB,EAAKnxB,IAAIQ,OAAShD,IAAI,SAGtDF,cAAA,KAAGH,UAAU,uBAAsBE,SAAE8zB,EAAKnxB,IAAIS,UAElDvD,eAAA,OAAKC,UAAU,kDAAiDE,SAAA,CAC5DC,cAAA,KAAGH,UAAU,YAAWE,SAAE8zB,EAAK3pB,EAAK,MACpClK,cAAA,KAAAD,SAAI8zB,EAAK3pB,EAAK,MACdlK,cAAA,KAAAD,SAAI8zB,EAAK3pB,EAAK,MACdlK,cAAA,KAAGH,UAAU,YAAWE,SAAE8zB,EAAK3pB,EAAK,MACpClK,cAAA,KAAAD,SAAI8zB,EAAK3pB,EAAK,WAfM4pB,mBCI7CC,GArGC,SAAC5yB,GACb,IAAMwD,EAASxD,EAAM6G,MAAMC,OAAOtD,OAClC8D,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAgC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAArC7M,EAAQ8M,EAAA,GAAEyM,EAAWzM,EAAA,GAC5BpI,qBAAU,YACW,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAjE,EAAA,OAAA+D,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCC,EAAYtF,SAASvD,EAAM6G,MAAMC,OAAOtD,QAAQ,KAAD,GAChEa,GADIA,EAAIqE,EAAAI,MACIC,KAAK,IACZK,QAAQ+K,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEgG,OAASjG,EAAEiG,UACzCpB,EAAQ5U,EAAK+E,SACb0T,EAAYzY,GAAM,wBAAAqE,EAAAM,UAAAV,OACrB,kBANgB,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAQjBsX,KACD,CAAC9D,EAASjZ,EAAM6G,MAAMC,OAAOtD,SAChC,IAAIiZ,EAAO,EAEX,OACIhe,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACtBC,cAACM,EAAU,CAACE,UAAU,cAEL,IAAhB0J,EAAKrD,QAAgBnC,EAAShC,KAC3B1C,cAAA,OAAKH,UAAU,eAAcE,SACzBC,cAAC6d,KAAe,CACZlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,QAAyB,IAAhB7T,EAAKrD,WAIzBqD,EAAKrD,OAAS,GACXjH,eAAA,OAAKC,UAAU,kBAAkBC,GAAG,WAAUC,SAAA,CAC1CH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACrBH,eAAA,MACIE,GAAG,eACHD,UAAU,+BACV6X,MAAO,CACHC,gBAAgB,OAAD/W,OAAkC,4BAA2B,MAC9Eb,SAAA,CAEFC,cAAA,KAAAD,SACK,IAAII,KAAKuE,EAASkT,WAAWC,mBAAmB,SAC7C,KACA,IAAI1X,KAAKuE,EAASkT,WAAWzO,eAAe,QAAS,CACjDiL,KAAM,UACNC,OAAQ,UACRE,QAAQ,IAEZ,MACA,IAAIpU,KAAKuE,EAASyZ,WAAWhV,eAAe,QAAS,CACjDiL,KAAM,UACNC,OAAQ,UACRE,QAAQ,MAGpB3U,eAAA,OAAKC,UAAU,6CAA6CC,GAAG,QAAOC,SAAA,CAClEC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,YACHC,cAAA,KAAAD,SAAG,iBAGXC,cAAC4C,IAAMC,SAAQ,CAAA9C,SACVmK,EAAKI,KAAI,SAACwN,GAAM,OACblY,eAAA,MAAIC,UAAU,WAAUE,SAAA,CACpBH,eAAA,OAAKC,UAAU,aAAYE,SAAA,CAAE6d,IAAO,OACpC5d,cAAA,OAAKH,UAAU,WAAUE,SACrBC,cAAA,OACIC,IAAKiK,EAAKrD,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGkX,EAAO5U,OAAU,GACtDhD,IAAI,sBAGZF,cAAA,OAAKH,UAAU,UAAUC,GAAG,YAAWC,SAClCmK,EAAKrD,OAAS,EAAIiR,EAAO3U,KAAO,KAErCnD,cAAA,OAAKH,UAAU,aAAYE,SAAEmK,EAAKrD,OAAS,EAAIiR,EAAOnE,QAAU,KAChE3T,cAAA,OACIH,UACIiY,EAAO0D,OAAS,EAAI,yBAA2B,wBAClDzb,SAEA+X,EAAO0D,WAjBc1D,EAAOhY,YAuBjDE,cAACmd,GAAU,CAACzX,OAAQhB,EAAShC,IAAKga,OAAO,gBACzC9c,eAACc,IAAI,CAACb,UAAU,uBAAuBc,GAAE,iBAAAC,OAAmB+D,GAAS5E,SAAA,CAAC,2BAElEC,cAAA,KAAGH,UAAU,6CCqCtBm0B,GAlIK,SAAHzzB,GAAkB,IAAZsS,EAAItS,EAAJsS,KACrBpK,EAA0BC,qBAAUC,EAAAC,YAAAH,EAAA,GAA7B6V,EAAK3V,EAAA,GAAE4V,EAAQ5V,EAAA,GACtB4I,EAAkC7I,qBAAU8I,EAAA5I,YAAA2I,EAAA,GAArCiN,EAAShN,EAAA,GAAEiN,EAAYjN,EAAA,GAC9BuD,EAA8BrM,mBAAS,GAAEsM,EAAApM,YAAAmM,EAAA,GAAlCoK,EAAOnK,EAAA,GACdwF,GAD0BxF,EAAA,GACFtM,mBAAS,IAAE+R,EAAA7R,YAAA4R,EAAA,GAA5BlT,EAAImT,EAAA,GAAEiE,EAAOjE,EAAA,GACpBoE,EAA0BnW,mBAAS,GAAEoW,EAAAlW,YAAAiW,EAAA,GAA9BF,EAAKG,EAAA,GAAEF,EAAQE,EAAA,GACtBG,EAA8BvW,oBAAS,GAAMwW,EAAAtW,YAAAqW,EAAA,GAAtCF,EAAOG,EAAA,GAAEF,EAAUE,EAAA,GAC1B9V,qBAAU,YACK,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAwqB,EAAA5U,EAAA,OAAA9V,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOmR,GAAWrB,aAAahH,GAAM,KAAD,EAA5CohB,EAAMpqB,EAAAI,KACVwU,EAAawV,EAAO/pB,MAChBmV,EAAW4U,EAAO/pB,KAAKI,KAAI,SAACgV,GAAC,OAAK9B,KAAE0W,QAAQ5U,EAAE/U,YAClDgU,EAASc,GACTL,GAAW,GACXJ,EAASW,KAAKC,MAAMlB,EAAMzX,OAASsY,IAAUtV,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,kCAAAA,EAAAM,UAAAV,EAAA,mBAIhD,kBAXY,OAAAsD,EAAA3C,MAAA,KAAAxD,aAAA,EAYb+W,KACC,CAAC9K,EAAMsM,EAASb,EAAQA,EAAMzX,OAAS,KAE1C,IAAI8Y,EAAU,EACVC,EAAQ,GACZA,EAAQpB,EACJA,EAAUqB,MAAMvY,EAAO6X,GAAU7X,EAAO,GAAK6X,GAC7C,GAMJ,OACEvf,eAAA,OAAAG,SAAA,EACIue,GACAte,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,SAAS,IAGbne,eAAA,OAAKC,UAAU,UAASE,SAAA,CACtBC,cAACM,EAAU,CAACE,UAAU,cACtBZ,eAAA,OAAKC,UAAU,MAAKE,SAAA,CACjBgf,GACC/e,cAAC+f,KAAa,CACZC,cAAe,OACfC,UAAW,OACXC,UAAWN,EAAM/Y,OAAS,IAAM,EAAI8X,EAAQ,EAAIA,EAChDwB,aAxBY,SAAClO,GACvB,IAAImO,EAAQnO,EAAMgI,SAClByE,EAAQ0B,IAuBEC,mBACE,+CAEFC,gBAAiB,SACjBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBuT,qBAAsB,MAIzB3V,GACCoB,EAAMtV,KAAI,SAACuW,GAAC,OACV7gB,cAAA,OAAKH,UAAU,uBAAuBC,GAAG,WAAUC,SACjDH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACvBH,eAAA,MACEE,GAAG,eACHD,UAAU,+BACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFC,cAAA,QAAAD,SACG,IAAII,KAAKyf,EAAMD,KAAW/H,WAAWC,mBACpC,WAGJjY,eAAA,OAAKC,UAAU,sBAAsBC,GAAG,WAAUC,SAAA,CAChDC,cAAA,KAAAD,SAAG,aACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,mBAGN8gB,EAAEtW,QAAQD,KAAI,SAAC9E,GACd,OACE5F,eAAA,MACEC,UAAU,iBAAgBE,SAAA,CAG1BC,cAAA,OAAKH,UAAU,oBAAmBE,SAChCC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAG4E,EAAK,GAAGtC,OAC3BhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,aAAYE,SAAEyF,EAAK,GAAGgW,SACrCxb,cAAA,OAAKH,UAAU,YAAWE,SAAEyF,EAAK,GAAGkY,SACpC1d,cAAA,QAAMH,UAAU,YAAWE,SAAC,OAC5BC,cAAA,OAAKH,UAAU,YAAWE,SAAEyF,EAAK,GAAGkY,SACpC1d,cAAA,OAAKH,UAAU,aAAYE,SAAEyF,EAAK,GAAGgW,SACrCxb,cAAA,OAAKH,UAAU,mDAAkDE,SAC/DC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAG4E,EAAK,GAAGtC,OAC3BhD,IAAI,wBAhBHsF,EAAKrC,KAAOhD,KAAK0vB,4BC+B/BuE,GAlIE,SAACjzB,GAChB,IAAAsH,EAAwBC,qBAAUC,EAAAC,YAAAH,EAAA,GAA3ByB,EAAIvB,EAAA,GAAEyR,EAAOzR,EAAA,GACpB4I,EAAwB7I,qBAAU8I,EAAA5I,YAAA2I,EAAA,GAA3Bwa,EAAIva,EAAA,GAAEwa,EAAOxa,EAAA,GACpBuD,EAA8BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAnCsX,EAAOrX,EAAA,GAAEsX,EAAUtX,EAAA,GAEpBrQ,EAASxD,EAAM6G,MAAMC,OAAOtD,OAClCyE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAAqoB,EAAAtJ,EAAA,OAAAta,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGmR,GAAWtB,gBAAgBjV,GAAQ,KAAD,EAKpC,OAJhBG,GADIA,EAAK+E,EAAAI,MACKC,KAAKkL,QAAO,SAAC0C,GAAM,MAAyB,YAApBA,EAAOpV,IAAIS,QAEjDiX,EAAQtV,GACJqoB,EAASroB,EAAM0f,QACnBwH,EAAQmB,GAAQtjB,EAAAE,KAAA,EAEI2M,GAAY3D,QAAQpO,GAAQ,KAAD,EAA3Ckf,EAAOha,EAAAI,KACXqiB,EAAWzI,EAAQ3Z,MAAM,yBAAAL,EAAAM,UAAAV,OAC1B,kBAVa,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAYdke,KACC,CAAC1K,EAASzV,IAEb,IAAIopB,EAAO,EACX,OACEnuB,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,cACtBZ,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGyrB,EAAQjV,WAAalX,IAAI,KACjDF,cAAA,QAAAD,UAAO,IAAII,MAAO0X,mBAAmB,eAErC3N,GACAlK,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,SAAU7T,IAIbA,GACClK,cAAA,OAAKH,UAAU,kBAAkBC,GAAG,UAASC,SAC3CH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACvBC,cAAA,MACEH,UAAU,iCACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAEFH,eAAA,OAAKC,UAAU,+CAA8CE,SAAA,CAC3DH,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAAA,OAAKH,UAAU,MAAKE,SAAC,OACrBC,cAAA,KAAGK,KAAK,KAAKP,GAAG,WAAUC,SACvBgsB,EAAOA,EAAKrpB,IAAIS,KAAO,KAE1BvD,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAAC,kBAE7BC,cAAA,QAAMH,UAAU,YAAWE,SACxBgsB,EAAOA,EAAKvD,UAAUN,QAAQ,GAAK,QAGxCtoB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAAC,gBAE7BC,cAAA,QAAMH,UAAU,YAAWE,SACxBgsB,EAAOA,EAAKtH,WAAa,QAG9B7kB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAAC,WAE7BH,eAAA,QAAMC,UAAU,YAAWE,SAAA,CACxBgsB,EAAOA,EAAKnH,kBAAoB,GAAG,UAGxChlB,eAAA,OAAKE,GAAG,SAASD,UAAU,GAAEE,SAAA,CAAC,gBAE5BC,cAAA,QAAMH,UAAU,OAAME,SAAEgsB,EAAOA,EAAKJ,YAAc,WAGtD3rB,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAA,OACEC,IAAK8rB,EAAI,GAAAnrB,OAAMC,KAAQD,OAAGmrB,EAAKrpB,IAAIQ,OAAU,GAC7ChD,IAAI,gBAKZF,cAAA,MAAIF,GAAG,QAAOC,SACZH,eAAA,OAAKC,UAAU,yBAAwBE,SAAA,CACrCC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,UACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,eACHC,cAAA,KAAAD,SAAG,iBACHC,cAAA,KAAAD,SAAG,YACHC,cAAA,KAAAD,SAAG,gBAGPC,cAAC4C,IAAMC,SAAQ,CAAA9C,SACZmK,EAAKI,KAAI,SAACwN,GAAM,OACflY,eAAA,MAAIC,UAAU,kBAAiBE,SAAA,CAC7BH,eAAA,OAAKC,UAAU,YAAYC,GAAG,YAAWC,SAAA,CACtCguB,IAAO,OAEV/tB,cAAA,OAAKH,UAAU,cAAaE,SAC1BC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAOpV,IAAIQ,OAC9BhD,IAAI,sBAGRF,cAAA,OAAKH,UAAU,aAAYE,SAAE+X,EAAOpV,IAAIS,OACxCnD,cAAA,OAAKH,UAAU,YAAWE,SAAE+X,EAAO0Q,UAAUN,QAAQ,KACrDloB,cAAA,OAAKH,UAAU,UAASE,SAAE+X,EAAO2M,aACjC7kB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC3B+X,EAAO8M,kBAAkB,OAE5B5kB,cAAA,OAAKH,UAAU,eAAcE,SAAE+X,EAAO6T,gBAhBH7T,EAAOpV,IAAIS,gBAuB1DnD,cAACg0B,GAAW,CAACnhB,KAAMlO,QCzHnBgN,GAAgB,CACpB0J,SAAU,GACVjE,UAAW,IAGP3G,GAAmBC,KAAW,CAClC2K,SAAU3K,OACPnB,IAAI,EAAG,4BACPD,SAAS,YACZ8H,UAAW1G,SAsGE2jB,GApGI,SAAClzB,GAClB,IAAAsH,EAA4BC,mBAAS,CAAExF,MAAO,KAAKyF,EAAAC,YAAAH,EAAA,GAA5C8C,EAAM5C,EAAA,GACb4I,GADwB5I,EAAA,GACcD,mBAAS,CAC7CvF,KAAM,GACNoH,QAAS,GACT6M,UAAW,MACX5F,EAAA5I,YAAA2I,EAAA,GAJK+iB,EAAW9iB,EAAA,GAAE+iB,EAAc/iB,EAAA,GAMlCpI,qBAAU,YACI,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAjH,EAAAS,EAAA,OAAAsG,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACI2F,EAAYX,iBAAiB,KAAD,SAAzCvM,EAAIqH,EAAAI,MACIC,KAAKwD,UACbzK,EAAO+H,YAAA,GAAQspB,IACX/pB,QAAQ4O,KAAK3W,EAAK0H,MAC1BqqB,EAAetxB,GAAS,wBAAA4G,EAAAM,UAAAV,OACzB,kBANW,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAOZkR,KACC,IACH,IAAM3H,EAAQ,eAAApD,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,EAAOiD,EAAQC,GAAa,IAAA/G,EAAA,OAAAX,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OAQR,OAPnCkH,EAAcC,eAAc,IAExBhH,EAAO,IAAIiH,UACVC,OAAO,OAAQJ,EAAOqK,UACvBrK,EAAO9N,OACTgH,EAAKkH,OAAO,QAASJ,EAAO9N,OAE9BgH,EAAKK,QAAU+pB,EAAY/pB,QAAQ0D,EAAAlE,KAAA,EAC7B2M,GAAY9D,WAAW1I,GAAM,KAAD,EAElChG,YAAM,wBACN/C,EAAM6X,QAAQC,QAAQ,aAAa,wBAAAhL,EAAA9D,UAAA4D,OACpC,gBAbaI,EAAAC,GAAA,OAAArB,EAAA3C,MAAA,KAAAxD,YAAA,GAed,OACEhH,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,2BACtBR,cAAA,KAAGH,UAAU,QAAOE,SAAC,qBACrBC,cAAA,OAAKH,UAAU,MAAKE,SAClBC,cAAA,OAAKH,UAAU,kBAAiBE,SAC9BC,cAACyR,KAAM,CACLE,cAAeA,GACflB,iBAAkBA,GAClBN,SAAUA,EACVyB,iBAAe,EAAA7R,SAEd,SAAC8R,GACA,OACE7R,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OAAKH,UAAU,kBAAiBE,SAC9BH,eAACqL,KAAI,CAAAlL,SAAA,CACHH,eAAA,OAAKC,UAAU,6CAA4CE,SAAA,CACzDC,cAAA,SAAO+K,QAAQ,YAAWhL,SAAC,cAC3BC,cAAC8R,KAAK,CAAC1E,KAAK,OAAOtN,GAAG,WAAWqD,KAAK,aACtCnD,cAAC+R,KAAY,CACX5O,KAAK,WACL6O,UAAU,MACVnS,UAAU,aAGdD,eAAA,OAAKC,UAAU,kDAAiDE,SAAA,CAC9DC,cAAA,SAAO+K,QAAQ,QAAOhL,SAAC,UACvBC,cAAA,SACEH,UAAU,qBACVuN,KAAK,OACLjK,KAAK,QACLmK,SAAU,SAAC2E,GACTJ,EAAOK,cACL,QACAD,EAAME,OAAOC,MAAM,OAIzBpS,cAAA,QAAMH,UAAU,QAAOE,SAAEwL,EAAOrI,WAElClD,cAAA,UACEoN,KAAK,SACLvN,UAAU,kBACVsN,UAAW0E,EAAOQ,SAAWR,EAAOS,aAAavS,SAClD,WAGDC,cAACU,IAAI,CACHb,UAAU,oBACVuN,KAAK,SACLzM,GAAG,YAAWZ,SACf,kCCtFRy0B,GAnBG,SAACrzB,GAChB,IAAKszB,EAAU,wFAAD7zB,OAAyFO,EAAM6G,MAAMC,OAAOtD,QAEzH,OACI/E,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC3BC,cAACM,EAAU,CAACE,UAAU,eACtBR,cAAA,KAAGH,UAAU,aAAYE,SAAC,6EAC1BH,eAAA,MAAIC,UAAU,aAAYE,SAAA,CACtBC,cAAA,MAAAD,SAAI,uCACJC,cAAA,MAAAD,SAAI,yKAKRC,cAAA,UAAS+V,MAAM,YAAW9V,IAAMw0B,EAAWpd,MAAM,OAAOC,OAAO,cCuO5Dod,GA5OK,SAACvzB,GACnB,IAAAsH,EAAoBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzBmI,EAAEjI,EAAA,GAAEkI,EAAKlI,EAAA,GAChB4I,EAA0B7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA/BrK,EAAKsK,EAAA,GAAEwX,EAAQxX,EAAA,GACtBuD,EAA0BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAA/B7P,EAAK8P,EAAA,GAAE9L,EAAQ8L,EAAA,GACtBwF,EAA4B9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAAjCkD,EAAMjD,EAAA,GAAEwO,EAASxO,EAAA,GACxBoE,EAA8BnW,mBAAS,IAAGoW,EAAAlW,YAAAiW,EAAA,GAAnC5b,EAAO6b,EAAA,GAAEoK,EAAUpK,EAAA,GAC1BG,EAAkCvW,mBAAS,IAAGwW,EAAAtW,YAAAqW,EAAA,GAAvCkK,EAASjK,EAAA,GAAEkK,EAAYlK,EAAA,GAC9ByC,EAAoCjZ,mBAAS,IAAGkZ,EAAAhZ,YAAA+Y,EAAA,GAAzC0H,EAAUzH,EAAA,GAAE0H,EAAa1H,EAAA,GAChCG,EAAwCrZ,mBAAS,IAAGsZ,EAAApZ,YAAAmZ,EAAA,GAA7CwH,EAAYvH,EAAA,GAAEwH,EAAexH,EAAA,GAChC/E,EAAe,IAAI9c,KACnBspB,EAAqBxM,EAAaoI,WAAa,EACnDpI,EAAeA,EAAa9T,eAAe,QAAS,CAAEjE,MAAO,SAE7DkE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAA4kB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxgB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACX6G,EAAGwH,MAAM,CAADvO,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACQC,EAAY/E,WAAW2L,EAAGwH,MAAM,IAAI,KAAD,EAO9B,OANvBtT,GADIA,EAAK+E,EAAAI,MACKC,KAKd+S,GAHAA,GADIA,EAAYxB,aAAO3W,IACKsQ,QAC1B,SAAClQ,GAAK,OAAKA,EAAMxC,IAAI4iB,cAAgBmE,MAEXvP,MAAK,SAAC5N,GAAC,OAAKA,EAAE5J,IAAIsnB,YAAcpZ,EAAGlO,OAC/DwG,EAAS+T,GAAcpT,EAAAE,KAAA,GACFC,EAAYlE,cAAc8K,EAAGlO,KAAK,KAAD,GAC5B,OADtBinB,EAAQ9f,EAAAI,KACZif,EAAWS,EAASzf,MAAML,EAAAE,KAAA,GAEHC,EAAYlE,cAAc8K,EAAGlO,KAAK,KAAD,GAItC,OAJdknB,EAAU/f,EAAAI,KAEV4f,EAAe,GACfR,EAAa,GACbU,EAAY,GAAElgB,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAEV6f,EAAW1f,KAAK+f,SAAQ,SAAC3d,GAAC,OAC9Bud,EAAa1Q,KAAK7M,EAAE/B,QAAQiR,WAC5B,KAAD,GAC0B,OAA3B4N,EAAaS,GAAchgB,EAAAE,KAAA,GAErB6f,EAAW1f,KAAK+f,SAAQ,SAAC3d,GAAC,OAC9Byd,EAAU5Q,KAAK7M,EAAE/B,QAAQoJ,YACzB,KAAD,GAC0B,OAA3B6V,EAAgBO,GAAWlgB,EAAAE,KAAA,GAErB6f,EAAW1f,KAAK+f,SAAQ,SAAC3d,GAAC,OAC9B+c,EAAWlQ,KACT,IAAIhZ,KAAKmM,EAAEsL,WAAWC,mBAAmB,SAASqS,OAAO,EAAG,OAE9D,KAAD,GACDZ,EAAcD,GAAYxf,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,UAE1BtB,QAAQC,IAAI,QAAQ,yBAAAqB,EAAAM,UAAAV,EAAA,oBAGzB,kBAvCa,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAyCdke,KACC,CAAC5b,EAAUugB,EAAoB7Y,EAAGwH,MAAOxH,EAAGlO,MAE/C0G,qBAAU,YACO,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAAoc,EAAAC,EAAA,OAAA7gB,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACG2F,EAAYR,iBAAiB/N,EAAM6G,MAAMC,OAAOnI,IAAI,KAAD,EAEnD,cAFfqqB,EAAMlc,EAAAhE,MACIC,KAAKwD,SACnBmD,EAAMsZ,EAAOjgB,MAAM+D,EAAAlE,KAAA,EACCC,EAAYjF,SAASolB,EAAOjgB,KAAKxH,KAAK,KAAD,EAArD0nB,EAAOnc,EAAAhE,KACX+e,EAASoB,EAAQlgB,KAAK,IAAI,wBAAA+D,EAAA9D,UAAA4D,OAC3B,kBANc,OAAAhB,EAAA3C,MAAA,KAAAxD,aAAA,EAOfyjB,KACC,IAEHjhB,qBAAU,YACI,eAAAsM,EAAApM,YAAAC,IAAAC,MAAG,SAAAmM,IAAA,IAAA2U,EAAA,OAAA/gB,IAAAK,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,WACT6G,EAAGlO,IAAI,CAADkT,EAAA7L,KAAA,eAAA6L,EAAA7L,KAAA,EACamR,GAAWxB,kBAAkB9I,EAAGlO,KAAK,KAAD,EAArD4nB,EAAQ1U,EAAA3L,KACZgf,EAAUqB,EAASpgB,KAAK,IAAI,wBAAA0L,EAAAzL,UAAAwL,OAE/B,kBALW,OAAAD,EAAAtL,MAAA,KAAAxD,aAAA,EAMZ8W,KACC,CAAC9M,EAAGlO,MAEP,IAmBI6nB,EAnBErgB,EAAO,CACXsgB,OAAQnB,EACRoB,SAAU,CACR,CACE7f,MAAO,SACPV,KAAMif,EACNuB,MAAM,EACN3D,gBAAiB,UACjB4D,YAAa,WAEf,CACE/f,MAAO,UACPV,KAAMqf,EACNmB,MAAM,EACN3D,gBAAiB,UACjB4D,YAAa,aAKbC,EAAU,CACdA,QAAS,CACPC,UAAW,CACTC,WAAY,WACVP,GAAU,GAEZ/C,MAAO,SAACuD,GACN,IAAIvD,EAAQ,EAQZ,MANmB,SAAjBuD,EAAQ3d,MACS,YAAjB2d,EAAQC,MACPT,IAED/C,EAA4B,IAApBuD,EAAQE,UAAyC,IAAvBF,EAAQG,cAErC1D,IAGX2D,OAAQ,CACN1D,EAAG,CACDra,KAAM,UAERib,EAAG,CACD+C,aAAa,MAMrB,OACExrB,eAAA,OAAKC,UAAU,6BAA4BE,SAAA,CACzCC,cAACM,EAAU,CAACE,UAAU,sBACrBgd,KAAE6N,QAAQnkB,IACTlH,cAAA,OAAKH,UAAU,UAASE,SACtBC,cAACsrB,KAAe,CACd3jB,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,wBACNgW,eAAe,yBAEfC,UAASP,KAAE6N,QAAQnkB,QAIvBsW,KAAE6N,QAAQnkB,IACVtH,eAAA,OAAKC,UAAU,GAAEE,SAAA,CACfH,eAAA,OAAKC,UAAU,sCAAqCE,SAAA,CAClDC,cAAA,QAAMH,UAAU,oBAAmBE,UAChC,IAAII,MAAO0X,mBAAmB,WAEjCjY,eAAA,OACEC,UAAU,yCACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFH,eAAA,OAAKC,UAAU,WAAUE,SAAA,CACvBH,eAAA,KAAAG,SAAA,CACG6Q,EAAG2a,UAAU,IAAE3a,EAAG4a,YAErBxrB,cAAA,KAAGH,UAAU,aAAYE,SAAE6Q,EAAGxN,cAEhCpD,cAAA,OAAKH,UAAU,SAAQE,SACrBC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGgQ,EAAG1N,OAAShD,IAAI,UAG5CN,eAAA,OAAKC,UAAU,oDAAmDE,SAAA,CAChEH,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,iBACHC,cAAA,KAAAD,SAAImH,EAAMsD,iBAEZ5K,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,eACHC,cAAA,KAAAD,SAAImH,EAAMwd,UAAYxd,EAAMwd,UAAUwD,QAAQ,GAAK,OAErDtoB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,gBACHC,cAAA,KAAAD,SAAImH,EAAMud,gBAEZ7kB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,oBACHC,cAAA,KAAAD,SAAImH,EAAMyd,qBAEZ/kB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,cACHH,eAAA,KAAAG,SAAA,CAAImH,EAAM0d,kBAAkB,aAGhChlB,eAAA,OAAKC,UAAU,mDAAkDE,SAAA,CAC/DH,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,gBACHC,cAAA,KAAAD,SAAImH,EAAM2d,WAAWqD,QAAQ,QAE/BtoB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,eACHC,cAAA,KAAAD,SAAImH,EAAMukB,eAEZ7rB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,aACHC,cAAA,KAAAD,SAAImH,EAAMwkB,eAEZ9rB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BH,eAAA,KAAAG,SAAA,CAAIkd,EAAa,mBACjBjd,cAAA,KAAAD,SAAImF,EAAQA,EAAMsF,YAAc,2BAElC5K,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,eACHC,cAAA,KAAAD,SAAI2d,EAAOiO,oBAGf/rB,eAAA,OAAKC,UAAU,+CAA8CE,SAAA,CAC3DH,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,kBACHC,cAAA,KAAAD,SAAImH,EAAM0kB,YAAc1kB,EAAM0kB,YAAY1D,QAAQ,GAAK,OAEzDtoB,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAAD,SAAG,cACHC,cAAA,KAAAD,SAAI,IAAII,KAAK+G,EAAMxC,UAAUmT,mBAAmB,oBAItD7X,cAAA,OAAKH,UAAU,SAAQE,SACrBC,cAAA,MAAIH,UAAU,cAAaE,SAAC,qBAE9BC,cAAA,OAAKH,UAAU,kBAAiBE,SAC9BC,cAAC6rB,KAAI,CAAC3hB,KAAMA,EAAM0gB,QAASA,MAE7B5qB,cAAC8oB,GAAa,CAAC7lB,QAASA,WCoBnB0xB,GA3PU,SAACxzB,GACxB,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7ByB,EAAIvB,EAAA,GACX4I,GADoB5I,EAAA,GACID,mBAAS,KAAG8I,EAAA5I,YAAA2I,EAAA,GAA7Bwa,EAAIva,EAAA,GAAEwa,EAAOxa,EAAA,GACpBuD,EAAsCrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAClDyF,GADkBxF,EAAA,GAAgBA,EAAA,GACJtM,mBAAS,KAAG+R,EAAA7R,YAAA4R,EAAA,GAAnC6R,EAAO5R,EAAA,GAAE6R,EAAU7R,EAAA,GAC1BoE,EAAgDnW,mBAAS,IAAGoW,EAAAlW,YAAAiW,EAAA,GAC5DI,GADuBH,EAAA,GAAqBA,EAAA,GACEpW,mBAAS,KAAGwW,EAAAtW,YAAAqW,EAAA,GAC1D0C,GADsBzC,EAAA,GAAoBA,EAAA,GACRxW,mBAAS,KAAGkZ,EAAAhZ,YAAA+Y,EAAA,GAAvCiT,EAAShT,EAAA,GAAEiT,EAAYjT,EAAA,GACxBjd,EAASxD,EAAM6G,MAAMC,OAAOtD,OACjBxD,EAAM6G,MAAMC,OAAO7C,SAEpCgE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAAqoB,EAAAtJ,EAAA,OAAAta,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAY9D,aAAavB,GAAQ,KAAD,EAK3B,OAJvBG,GADIA,EAAK+E,EAAAI,MACKC,KACd2qB,EAAa/vB,GACTqoB,EAASroB,EAAM0f,QACnBwH,EAAQmB,GACR5kB,QAAQC,IAAI,IAAKujB,GAAMliB,EAAAE,KAAA,GAEH2M,GAAY3D,QAAQpO,GAAQ,KAAD,GAA3Ckf,EAAOha,EAAAI,KACXqiB,EAAWzI,EAAQ3Z,MAEnB,yBAAAL,EAAAM,UAAAV,OACD,kBAZa,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAcdkuB,KACC,CAACnwB,IAwGJ,IAAIopB,EAAO,EAGX,OACEnuB,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CAACE,UAAU,mBACtBZ,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGyrB,EAAQjV,WAAalX,IAAI,SACjDF,cAAA,QAAAD,UAAO,IAAII,MAAO0X,mBAAmB,cAEjB,IAArB+c,EAAU/tB,QACT7G,cAAA,OAAKH,UAAU,eAAcE,SAC3BC,cAAC6d,KAAe,CACdlW,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,yBACNgW,eAAe,wBACfC,QAAyB,IAAhB7T,EAAKrD,WAInB+tB,EAAU/tB,OAAS,GAAKklB,EAAKrpB,KAC5B1C,cAAA,OAAKH,UAAU,kBAAkBC,GAAG,UAASC,SAC3CH,eAAA,MAAIC,UAAU,YAAWE,SAAA,CACvBH,eAAA,MACEC,UAAU,gCACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,4BAA2B,MAEtDb,SAAA,CAEFH,eAAA,OAAKC,UAAU,sBAAsBC,GAAG,kBAAiBC,SAAA,CACvDC,cAAA,OAAKH,UAAU,MAAKE,SAAC,OACrBC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoBmrB,EAAKrpB,IAAIsnB,WAAalqB,GAAG,WAAUC,SAC5D60B,EAAU/tB,OAAS,EAAIklB,EAAKrpB,IAAIS,KAAO,KAE1CvD,eAAA,OAAKE,GAAG,SAASD,UAAU,YAAWE,SAAA,CACpCC,cAAA,OAAKH,UAAU,cAAaE,SAAC,kBAC7BC,cAAA,OAAKH,UAAU,eAAcE,SAAEgsB,EAAKgJ,iBAEtCn1B,eAAA,OAAKE,GAAG,SAASD,UAAU,YAAWE,SAAA,CACpCC,cAAA,KAAGH,UAAU,kBAAiBE,SAAC,qBAC/BH,eAAA,KAAGC,UAAU,kBAAiBE,SAAA,CAC3B,IACA60B,EAAU/tB,OAAS,EAAIklB,EAAKxD,cAAgB,SAGjD3oB,eAAA,OAAKE,GAAG,SAASD,UAAU,YAAWE,SAAA,CACpCC,cAAA,KAAGH,UAAU,kBAAiBE,SAAC,sBAC/BH,eAAA,KAAGC,UAAU,kBAAiBE,SAAA,CAC3B,IACA60B,EAAU/tB,OAAS,EAAIklB,EAAKiJ,eAAiB,YAIpDh1B,cAAA,OAAKH,UAAU,mBAAkBE,SAC/BC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoBmrB,EAAKrpB,IAAIsnB,WAAalqB,GAAG,WAAUC,SAC7DC,cAAA,OACEC,IACE20B,EAAU/tB,OAAS,EAAC,GAAAjG,OAAMC,KAAQD,OAAGmrB,EAAKrpB,IAAIQ,OAAU,GAE1DhD,IAAI,YAMZN,eAAA,MAAIC,UAAU,0DAAyDE,SAAA,CACrEC,cAAA,OAAAD,SAAK,SACLC,cAAA,OAAAD,SAAK,UACLC,cAAA,OAAAD,SAAK,WACLC,cAAA,OAAAD,SAAK,iBACLC,cAAA,OAAAD,SAAK,oBACLC,cAAA,OAAAD,SAAK,wBAEN60B,EAAUtqB,KAAI,SAACwN,GAAM,OACpBlY,eAAA,MAAIC,UAAU,WAAUE,SAAA,CACtBH,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAAEguB,IAAO,OACvC/tB,cAACU,IAAI,CACHb,UAAU,kBACVc,GAAE,kBAAAC,OAAoBkX,EAAOpV,IAAIsnB,WAAYjqB,SAE7CC,cAAA,OACEC,IACE20B,EAAU/tB,OAAS,EAAC,GAAAjG,OACbC,KAAQD,OAAGkX,EAAOpV,IAAIQ,OACzB,GAENhD,IAAI,OAGRF,cAAA,OAAKH,UAAU,iBAAgBE,SAC5B60B,EAAU/tB,OAAS,EAAIiR,EAAOpV,IAAIS,KAAO,KAE5CnD,cAAA,OAAKH,UAAU,WAAUE,SACtB60B,EAAU/tB,OAAS,EAAIiR,EAAOid,YAAc,KAE/C/0B,cAAA,OACEH,UACEiY,EAAOyQ,cAAgB,EACnB,gCACA,+BACLxoB,SAEA60B,EAAU/tB,OAAS,EAAIiR,EAAOyQ,cAAgB,KAEjDvoB,cAAA,OAAKH,UAAU,mBAAkBE,SAC9B60B,EAAU/tB,OAAS,EAAIiR,EAAOkd,eAAiB,oBCvLnDjY,GA7DG,SAAHxc,GAAuC,IAAjCmc,EAAMnc,EAANmc,OAAQvZ,EAAI5C,EAAJ4C,KAAM0P,EAAItS,EAAJsS,KAAM3N,EAAK3E,EAAL2E,MACjC+vB,GAAO,IAAI90B,MAAOC,cAGpB6c,EAFS,IAAI9c,KAAK+E,EAAMA,OAEJiE,eAAe,QAAS,CAAEjE,MAAO,SACrDqF,EAAUrF,EAAMqF,QAQpB,OADAA,EAAQ+K,MALQ,SAACC,EAAGC,GAClB,OAAID,EAAE/K,YAAcgL,EAAEhL,YAAoB,EACtC+K,EAAE/K,YAAcgL,EAAEhL,aAAqB,EACpC,KAIP5K,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BH,eAAA,OACEC,UAAU,QACVC,GAAG,YACH4X,MAAO,CACLC,gBAAgB,OAAD/W,OACY,2BAA0B,MAErDb,SAAA,CAEFC,cAAA,MAAIH,UAAU,wBAAuBE,SAAEwK,EAAQ,GAAG7H,IAAIS,OACtDnD,cAAA,OAAKH,UAAU,WAAUE,SACvBC,cAAA,OACEC,IACEsK,EAAQ,GAAG7H,IAAIQ,MAAK,GAAAtC,OACbC,KAAQD,OAAG2J,EAAQ,GAAG7H,IAAIQ,OAC7B,4KAENrD,UAAU,gBACVK,IAAKiD,MAGTnD,cAAA,OAAKH,UAAU,qBACfG,cAAA,OAAKH,UAAU,gBAAgBC,GAAG,gBAAeC,SAC/CH,eAAA,OAAKC,UAAU,YAAYC,GAAG,gBAAeC,SAAA,CAC3CC,cAAA,QAAAD,SAAO2c,IACP1c,cAAA,SACAJ,eAAA,OAAKC,UAAU,gCAA+BE,SAAA,CAC5CC,cAAA,QAAMF,GAAG,QAAOC,SAAEkd,GAA8B,KAChDjd,cAAA,QAAAD,SAAOwK,EAAUA,EAAQ,GAAGC,YAAc,eAKlD5K,eAACc,IAAI,CACHb,UAAU,6BACVC,GAAG,aACHa,GAAE,wBAAAC,OAA0Bq0B,EAAI,KAAAr0B,OAAIqc,EAAY,KAAArc,OAAIiS,EAAKnQ,KAAM3C,SAAA,CAChE,iBAECC,cAAC4c,IAAe,IAChB5c,cAAC6c,IAAoB,WCmEdqY,GAvHM,SAAC/zB,GACpB,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvB2R,GAAFzR,EAAA,GAASA,EAAA,IACpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAvBya,GAAFxa,EAAA,GAASA,EAAA,IACpBuD,EAA8BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAnCsX,EAAOrX,EAAA,GAAEsX,EAAUtX,EAAA,GAC1BwF,EAAwC9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAA7CjU,EAAYkU,EAAA,GAAE0a,EAAe1a,EAAA,GACpCoE,EAAsCnW,mBAAS,IAAGoW,EAAAlW,YAAAiW,EAAA,GAA3CuW,EAAWtW,EAAA,GAAEuW,EAAcvW,EAAA,GAClCG,EAAoCvW,mBAAS,IAAGwW,EAAAtW,YAAAqW,EAAA,GAAzCoK,EAAUnK,EAAA,GAAEoK,EAAapK,EAAA,GAChCyC,EAAwDjZ,mBAAS,IAAGkZ,EAAAhZ,YAAA+Y,EAAA,GAA7D2T,EAAoB1T,EAAA,GAAE2T,EAAuB3T,EAAA,GACpDG,EAA8BrZ,mBAAS,IAAGsZ,EAAApZ,YAAAmZ,EAAA,GAAnCzc,EAAO0c,EAAA,GAAEK,EAAUL,EAAA,GACtB/E,EAAe,IAAI9c,KACnBspB,EAAqBxM,EAAaoI,WAAa,EACnDpI,EAAeA,EAAa9T,eAAe,QAAS,CAAEjE,MAAO,SAE7D,IAAMP,EAASxD,EAAM6G,MAAMC,OAAOtD,OAElCyE,qBAAU,YACM,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA3E,EAAA0wB,EAAAC,EAAA9uB,EAAA0iB,EAAAxF,EAAAsJ,EAAA,OAAA5jB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAY/E,WAAWN,GAAQ,KAAD,EAC7B,OAAnBG,GADIA,EAAK+E,EAAAI,MACKC,KAAKL,EAAAE,KAAA,EACaC,EAAYzD,aAC1CpF,EAAM6G,MAAMC,OAAOtD,QACnB,KAAD,EASmC,OAX9B6wB,EAAiB3rB,EAAAI,KAGvBkrB,EAAgBK,EAAkBtrB,MAC9BurB,EAAsBjY,KAAEkY,MAAMnvB,GAG/BovB,QAAQ,mBAERrrB,KAAI,SAAC3I,EAAOD,GAAG,MAAM,CAAEwD,MAAOxD,EAAK6I,QAAS5I,MAC5CA,QACH0zB,EAAeI,GAAqB5rB,EAAAE,KAAA,GAElBC,EAAYxD,gBAAgB7B,GAAQ,KAAD,GAGlC,OAHfgC,EAAKkD,EAAAI,KACTsrB,EAAwB5uB,EAAMuD,MAE1Bmf,EAAa,GAAExf,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAEXqrB,EAAYnL,SAAQ,SAAC3d,GAAC,OAC1B+c,EAAWlQ,KACT,IAAIhZ,KAAKmM,EAAEpH,OAAOiE,eAAe,QAAS,CAAEjE,MAAO,cAErD,KAAD,GAAA2E,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgG,GAAAhG,EAAA,UAEDtB,QAAQC,IAAI,QAAQ,eAAAqB,EAAAE,KAAA,GAGF2M,GAAY3D,QAAQpO,GAAQ,KAAD,GAA3Ckf,EAAOha,EAAAI,KACXqiB,EAAWzI,EAAQ3Z,MAEnBpF,EAAQA,EAAMsQ,QACZ,SAAClQ,GAAK,OAAKA,EAAMxC,IAAI4iB,cAAgBmE,KAEnC0D,EAASroB,EAAM0f,QACnBwH,EAAQmB,GACR/S,EAAQtV,GACRwkB,EAAcD,GACdhH,EAAWiT,GAAsB,yBAAAzrB,EAAAM,UAAAV,EAAA,oBAClC,kBAzCa,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EA2Cdke,KACC,CACD1K,EACAzV,EACA8kB,EACAljB,EAAaM,OACbuuB,EAAYvuB,OACZyuB,EAAqBzuB,SAGvB,IAcI+uB,EAAe,GAcnB,OAbAA,EAAapL,OAASnB,EACtBuM,EAAanL,SAAW,GACxBnlB,EAAQ2kB,SAAQ,SAAC3d,GACfspB,EAAanL,SAAStR,KAAK,CACzBvO,MAAO0B,EAAE,GACTpC,KAAMoC,EAAE,GACRoe,MAAM,EACN3D,gBAAiB,QACjB4D,YAAY,IAAD/pB,OAAM2e,KAAKC,MAAsB,SAAhBD,KAAKsW,UAAqBC,SAAS,UAGnEvtB,QAAQC,IAAI,eAAgBotB,GAG1Bh2B,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CAACE,UAAU,2BACtBZ,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGyrB,EAAQjV,WAAalX,IAAI,KACjDF,cAAA,QAAAD,UAAO,IAAII,MAAO0X,mBAAmB,cAEvC7X,cAAA,OAAKH,UAAU,4BAA2BE,SACvCq1B,EAAYvuB,OAAS,GACpBuuB,EAAY9qB,KAAI,SAACpF,GAAK,OACpBlF,cAAA,OAAKH,UAAU,QAAOE,SACpBC,cAAC+1B,GAAY,CAAC7wB,MAAOA,EAAO2N,KAAMwZ,WAI1CrsB,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAC6rB,KAAI,CAAC3hB,KAAM0rB,EAAchL,QA5ChB,CACdoL,qBAAqB,EACrBC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACNtf,SAAU,OAEZd,MAAO,CACLqgB,SAAS,EACTpgB,KAAM,oCC7CCqgB,GAvCc,SAAH91B,GAA2B,IAArB+1B,EAAa/1B,EAAb+1B,cAC9B,OACE12B,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAAA,KAAGH,UAAWy2B,EAAcC,OAAS,gBAAkB,eAAex2B,SACnEu2B,EAAcC,OAAS,SAAW,KAErCv2B,cAAA,OAAKH,UAAU,mEAAkEE,SAC/EC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAG01B,EAAc5zB,IAAIsuB,aACrC9wB,IAAI,mBAGRF,cAAA,KAAGH,UAAU,eAAcE,SACzBC,cAAA,KAAAD,SACEC,cAAA,KAAAD,SAAIu2B,EAAc5zB,IAAIuR,iBAG1BjU,cAAA,KAAGH,UAAU,gBAAeE,SAC1BC,cAAA,KAAAD,SAAG,aAELC,cAAA,KAAGH,UAAU,iCAAgCE,SAC1Cu2B,EAAc9rB,cAEjBxK,cAAA,KAAGH,UAAU,gBAAeE,SAC1BC,cAAA,KAAAD,SAAG,kBAELC,cAAA,KAAGH,UAAU,kCAAiCE,SAC3Cu2B,EAActwB,aAEjBhG,cAAA,KAAGH,UAAU,gBAAeE,SAC1BC,cAAA,KAAAD,SAAG,qBAELC,cAAA,KAAGH,UAAU,kCAAiCE,SAC3Cu2B,EAAc5R,cA/BkB4R,EAAc5zB,IAAI2Q,WCmC5CmjB,GAnCQ,SAAHj2B,GAAsB,IAAhBkG,EAAQlG,EAARkG,SACxBgC,EAA4CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjDguB,EAAc9tB,EAAA,GAAE+tB,EAAiB/tB,EAAA,GAgBxC,OAfAS,qBAAU,YACkB,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAktB,EAAA,OAAAptB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFoc,GAAgBhK,eACvC1V,EAAS9B,OACT8B,EAAS2f,aAAa1jB,IACtB+D,EAASshB,YAAYrlB,IACrB+D,EAASM,UACTN,EAASO,SACT,KAAD,EANG2vB,EAAY9sB,EAAAI,KAQhBysB,EAAkBC,EAAazsB,MAAM,wBAAAL,EAAAM,UAAAV,OACtC,kBAVyB,OAAAsD,EAAA3C,MAAA,KAAAxD,aAAA,EAW1BgwB,KACC,IAGD52B,cAAA,OACEH,UAAU,iEACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OAASC,IAAQ,mBAChCd,SAED02B,EAAe5vB,OAAS,GACvB4vB,EAAensB,KAAI,SAACgsB,GAAa,OAC/Bt2B,cAACq2B,GAAoB,CACnBC,cAAeA,GACVA,EAAc9rB,mBC6DhBqsB,GAxFM,SAAC11B,GACpB,IAAAsH,EAAgDC,mBAAS,gBAAeC,EAAAC,YAAAH,EAAA,GAAjEquB,EAAgBnuB,EAAA,GAAEouB,EAAmBpuB,EAAA,GAC5C4I,EAAkD7I,mBAAS,gBAAe8I,EAAA5I,YAAA2I,EAAA,GAAnEylB,EAAiBxlB,EAAA,GAAEylB,EAAoBzlB,EAAA,GAExC7M,EAASxD,EAAM6G,MAAMC,OAAOtD,OAalC,OAZAyE,qBAAU,YACS,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAhD,EAAAuwB,EAAA,OAAAztB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACKoc,GAAgBjK,uBAAuBvX,GAAQ,KAAD,EAClC,OAD7B8B,EAAQoD,EAAAI,KACd8sB,EAAoBtwB,EAASyD,MAAML,EAAAE,KAAA,EACHoc,GAAgB3J,wBAC9C7X,GACA,KAAD,EAFKqyB,EAAiBntB,EAAAI,KAGvBgtB,EAAqBD,EAAkB9sB,MAAM,wBAAAL,EAAAM,UAAAV,OAC9C,kBAPgB,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAQjBswB,KACC,IAGDt3B,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,cACtBR,cAAA,OAAKH,UAAU,0CAAyCE,SACtDC,cAACU,IAAI,CAACC,GAAE,0BAAAC,OAA4BO,EAAM6G,MAAMC,OAAOtD,QAAS5E,SAC9DC,cAAA,OAAKH,UAAU,uBAAsBE,SAAC,8BAG1CH,eAAA,OAAKC,UAAU,cAAaE,SAAA,CAC1BC,cAAA,KAAGH,UAAU,gCAA+BE,SACrB,oBAApB+2B,EAAyCA,EAAmB,KAE/D92B,cAAA,OAAKH,UAAU,gCAA+BE,SACvB,gBAApB+2B,GACC92B,cAACsrB,KAAe,CACd3jB,KAAM,IACNC,UAAW,IACXC,MAAO,GACPC,MAAM,wBACNgW,eAAe,yBACfC,SAAS,MAKd1S,MAAM8rB,QAAQL,IACbA,EAAiBxsB,KAAI,SAACsR,GAAO,OAC3Bhc,eAAAw3B,WAAA,CAAAr3B,SAAA,CACEH,eAAA,KAAGC,UAAU,6BAA4BE,SAAA,CAAC,YAC9B6b,EAAQyK,WAAW,kBAE/BzmB,eAAA,OAAKC,UAAU,8CAA6CE,SAAA,CAC1DH,eAAA,KAAGC,UAAU,aAAYE,SAAA,CAAC,cACZ,IACX,IAAII,KAAKyb,EAAQ7U,WAAW8Q,mBAAmB,YAElDjY,eAAA,KAAGC,UAAU,aAAYE,SAAA,CAAC,YACd,IACT,IAAII,KAAKyb,EAAQ5U,SAAS6Q,mBAAmB,eAGlD7X,cAACw2B,GAAc,CAAC/vB,SAAUmV,GAAcA,EAAQlZ,KAChD1C,cAAA,KAAGH,UAAU,SAAQE,SACnBC,cAAA,KAAGK,KAAK,uCAAsCN,SAAC,8DAMtDsL,MAAM8rB,QAAQH,IACbA,EAAkB1sB,KAAI,SAACsR,GAAO,OAC5Bhc,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAAA,KAAGH,UAAU,2BAA0BE,SAAC,mBACxCC,cAAA,MAAAD,SACEH,eAAA,MAAIC,UAAU,cAAaE,SAAA,CAAC,eACb6b,EAAQwK,aAAahjB,SAAS,OAC1C,IAAIjD,KAAKyb,EAAQhE,WAAWC,mBAAmB,SAAS,UACvD+D,EAAQyK,WAAW,eAAErmB,cAAA,SAAS,gBAAc,IAC7C4b,EAAQmM,YAAY3kB,SAAS,KAC7B,IAAIjD,KACHyb,EAAQmM,YAAYsP,cACpBxf,mBAAmB,2BC9DxByf,GAlBM,SAAH/2B,GAAkB,IAAZiC,EAAIjC,EAAJiC,KACtB,OACExC,cAAA,OAAKH,UAAU,0CAAyCE,SACtDC,cAACU,IAAI,CAACC,GAAE,kBAAAC,OAAoB4B,EAAKE,KAAM3C,SACrCH,eAAA,OACEC,UAAU,0EACV6X,MAAO,CACLC,gBAAgB,OAAD/W,OAASC,IAAQ,yBAChCd,SAAA,CAEFC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG4B,EAAKU,OAAShD,IAAI,KAC1CF,cAAA,KAAGH,UAAU,MAAKE,SAAEyC,EAAKY,mBCApBm0B,GAZM,SAACp2B,GACpB,IAAI2W,EAAS3W,EAAM2W,OACnB,OACE9X,cAAA,OAAKH,UAAU,eAAesC,QAAS,kBAAMhB,EAAMq2B,aAAa1f,IAAQ/X,SACtEH,eAAA,OAAKC,UAAU,iCAAgCE,SAAA,CAC7CC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAAShD,IAAI,KAC5CF,cAAA,KAAGH,UAAU,MAAKE,SAAE+X,EAAO1U,iB,oBCoLpBq0B,GArLQ,SAACt2B,GACtB,IAAMu2B,EAAUv2B,EAAM2W,OAChBnT,EAASxD,EAAMwD,OAErB8D,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzC4d,EAAU1d,EAAA,GAAEgvB,EAAahvB,EAAA,GAChC4I,EAAkC7I,mBAAS,SAAD9H,QAC/B,IAAIT,MAAOC,gBACrBoR,EAAA5I,YAAA2I,EAAA,GAFMxK,EAASyK,EAAA,GAAEomB,EAAYpmB,EAAA,GAG9BuD,EAA8BrM,mBAAS,SAAD9H,QAAU,IAAIT,MAAOC,gBAAgB4U,EAAApM,YAAAmM,EAAA,GAApE/N,EAAOgO,EAAA,GAAE6iB,EAAU7iB,EAAA,GAC1BwF,EAAwC9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAA7C4L,EAAY3L,EAAA,GAAEqd,EAAerd,EAAA,GAEpCrR,qBAAU,YACa,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAmH,EAAA,OAAArH,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACP2F,EAAYX,iBAAiB,KAAD,SAAvC6B,EAAE/G,EAAAI,MACIC,KAAKwD,gBACRkD,EAAG1G,KAAKuD,MACfqqB,EAAgBlnB,EAAG1G,MAAM,wBAAAL,EAAAM,UAAAV,OAC1B,kBALoB,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAOrBmxB,KACC,IAkFH,OACEn4B,eAAA,OAAKC,UAAU,aAAYE,SAAA,CACzBC,cAAA,KAAGH,UAAU,2BAA0BE,SAAC,gCACxCC,cAAA,OAAKH,UAAU,mDAAkDE,SAC/DC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG82B,EAAQx0B,OAAShD,IAAI,OAE/CF,cAAA,KAAGH,UAAU,8BAA6BE,SAAE23B,EAAQt0B,WACpDxD,eAAA,OAAKC,UAAU,+CAA8CE,SAAA,CAC3DC,cAAA,KAAGH,UAAU,oBAAmBE,SAAC,eACjCC,cAAA,SACEoN,KAAK,SACLvN,UAAU,OACV8B,MAAO0kB,EACP2R,YAAY,YACZ1qB,SAAU,SAAChB,GAAC,OA/FE,SAACA,GACrBqrB,EAAcrrB,EAAE6F,OAAOxQ,OA8FAs2B,CAAc3rB,SAGnCtM,cAAA,OAAKH,UAAU,gBAAeE,SAC5BH,eAAA,OAAKC,UAAU,4CAA2CE,SAAA,CACxDC,cAAA,KAAGH,UAAU,gCAA+BE,SAAC,gBAC7CC,cAAA,QAAMH,UAAU,cAAaE,SAAC,wBAC9BC,cAAA,OAAKH,UAAU,0CAAyCE,SACtDC,cAAA,SACEoN,KAAK,OACLvN,UAAU,OACV8B,MAAOoF,EACPwI,IAAG,SAAA3O,QAAW,IAAIT,MAAOC,eACzBkN,SAAU,SAAChB,GAAC,OAzGH,SAACA,GACpBsrB,EAAatrB,EAAE6F,OAAOxQ,OAwGKu2B,CAAa5rB,QAGlCtM,cAAA,KAAGH,UAAU,gCAA+BE,SAAC,aAC7CC,cAAA,QAAMH,UAAU,cAAaE,SAAC,wBAE9BC,cAAA,OAAKH,UAAU,wCAAuCE,SACpDC,cAAA,SACEoN,KAAK,OACLvN,UAAU,OACV8B,MAAOqF,EACP6R,IAAG,SAAAjY,QAAW,IAAIT,MAAOC,eACzBkN,SAAU,SAAChB,GAAC,OAlHL,SAACA,GAClBurB,EAAWvrB,EAAE6F,OAAOxQ,OAiHOw2B,CAAW7rB,aAKpC1M,eAAA,OAAKC,UAAU,sCAAqCE,SAAA,CAClDC,cAAA,UAAQH,UAAU,iBAAiBsC,QAjDvB,WAChBiG,OAAOC,SAAQ,gBAAAzH,OAAmB+D,IAgDwB5E,SAAC,WAGvDC,cAAA,UAAQH,UAAU,kBAAkBsC,QAzDzB,YA9DO,SAACi2B,EAAkBrxB,EAAWC,GACpD,GACEoxB,EAAmB,IAClBA,GACoBC,MAArBD,IACCE,OAAOC,UAAUH,GAElBl0B,IAAMF,MAAM,qDAGd,GACGw0B,KAAOzxB,EAAW,cAAc,GAAMsL,WACtCtL,GACDyxB,KAAOzxB,GAAWkuB,UAAW,IAAI90B,MAAOC,cAO1C,GACGo4B,KAAOxxB,EAAS,cAAc,GAAMqL,WACpCrL,GACDwxB,KAAOxxB,GAASiuB,UAAW,IAAI90B,MAAOC,cAOxC,GAAI2G,EAAYC,EACd9C,IAAMF,MAAM,0CADd,CAKA,IAAM4X,EAAU,CACdyK,WAAY+R,EACZrxB,UAAWA,EACXC,QAASA,EACTof,aAAcA,EACd2B,YAAa2P,EACbe,uBAAuB,EACvB9zB,OAAQA,GAEVkR,KAAKC,KAAK,CACRC,MAAM,0BAADnV,OAA4B82B,EAAQt0B,SAAQ,KACjD6tB,SAAS,GAADrwB,OAAKC,KAAQD,OAAG82B,EAAQx0B,OAChCguB,WAAY,IACZC,YAAa,IACbC,SAAU,eACVlb,kBAAkB,EAClBC,mBAAoB,UACpBE,kBAAmB,QAClBC,MAAK,SAACE,GACHA,EAAOC,cACT0P,GAAgBxK,cAAcC,GAC9B1X,IAAM0S,QAAQ,oBACdxO,OAAOC,SAAQ,iBAAAzH,OAAoB+D,YAhCrCT,IAAMF,MACJ,uEAXFE,IAAMF,MACJ,oEAgDJ00B,CADyB9G,SAASvL,GACAtf,EAAWC,IAuDajH,SAAC,kBAIzDH,eAAA,OAAKC,UAAU,aAAYE,SAAA,CACzBC,cAAA,KAAGH,UAAU,iCAAgCE,SAC3CC,cAAA,KAAAD,SACEC,cAAA,KAAAD,SAAG,6BAGPH,eAAA,MAAAG,SAAA,CACEC,cAAA,MAAAD,SAAI,wHAIJC,cAAA,MAAAD,SAAI,8OAMJC,cAAA,MAAAD,SAAI,2FCnHC44B,GAxDI,SAACx3B,GAClB,IAAAsH,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BjG,EAAImG,EAAA,GAAE2P,EAAO3P,EAAA,GACpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7BsB,EAAIrB,EAAA,GAAEonB,EAAOpnB,EAAA,GACpBuD,EAA4CrM,qBAAUsM,EAAApM,YAAAmM,EAAA,GAA/C8jB,EAAc7jB,EAAA,GAAE8jB,EAAiB9jB,EAAA,GACxCwF,EAA0C9R,qBAAU+R,EAAA7R,YAAA4R,EAAA,GAA7Cue,EAAate,EAAA,GAAEue,EAAgBve,EAAA,GAEhC+c,EAAe,SAAC1f,UACbA,EAAOpK,gBACPoK,EAAOrK,MACdqrB,EAAkBhhB,IAoBpB,OAjBA1O,qBAAU,YACS,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAmH,EAAAjM,EAAAs0B,EAAA,OAAA1vB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACD2F,EAAYX,iBAAiB,KAAD,EAGpB,OAHnB6B,EAAE/G,EAAAI,KACRqO,EAAQ1H,EAAG1G,MACLvF,EAASxD,EAAM6G,MAAMC,OAAOtD,OAClCq0B,EAAiBr0B,GAAQkF,EAAAE,KAAA,EACE2M,GAAYpD,mBACrC3O,EACAiM,EAAG1G,KAAKxH,KACR,KAAD,EACDu2B,GAJIA,EAAcpvB,EAAAI,MAIcC,KAAK,GAAGK,QACxCquB,EAAQK,GAAgB,yBAAApvB,EAAAM,UAAAV,OACzB,kBAXgB,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAajBswB,KACC,IAGDt3B,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBC,cAACM,EAAU,CAACE,UAAU,iBACtBR,cAACs3B,GAAY,CAAC90B,KAAMA,KAClBq2B,GACAj5B,eAAA,OAAKC,UAAU,4CAA2CE,SAAA,CACxDC,cAAA,KAAGH,UAAU,2BAA0BE,SAAC,wCAGvC8S,EAAKhM,OAAS,GACbgM,EAAKvI,KAAI,SAACwN,GAAM,OACd9X,cAACu3B,GAAY,CACXzf,OAAQA,EAER0f,aAAcA,EACd7yB,OAAQo0B,GAFHjhB,EAAOpV,WAOrBm2B,GACC74B,cAACy3B,GAAc,CAAC3f,OAAQ+gB,EAAgBl0B,OAAQo0B,QCjCzC,QACbG,qBAvBK,SAA8BC,GACnC,OAAOv0B,EAAKN,KAAK,GAAD1D,OAAIiE,IAAM,uCAAuCs0B,IAuBjEC,sBApBK,SAA+Bz0B,GACpC,OAAOC,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,yCAAAjE,OAAwC+D,KAoBjE00B,qBAjBK,SAA8B3zB,GACnC,OAAOd,EAAKP,IAAI,GAADzD,OAAIiE,IAAM,wCAAAjE,OAAuC8E,KAiBhE4zB,oBAdK,SAA6BH,GAClC,OAAOv0B,EAAKL,IAAI,GAAD3D,OACViE,IAAM,uCAAAjE,OAAsCu4B,EAASzzB,QACxDyzB,IAYFI,WARK,SAAoBC,EAAOC,GAChC,OAAO70B,EAAKL,IAAI,GAAD3D,OAAIiE,IAAM,8BAAAjE,OAA6B44B,EAAK,KAAA54B,OAAI64B,MC6BlDC,GAlDI,SAAHn5B,GAAkB,IAADo5B,EAAAC,EAAAC,EAAAC,EAAAC,EAAXv0B,EAAIjF,EAAJiF,KAChBw0B,GACE,OAAJx0B,QAAI,IAAJA,GAA0B,QAAtBm0B,EAAJn0B,EAAMy0B,4BAAoB,IAAAN,OAAtB,EAAJA,EAA4B9yB,QAAS,IACjC,OAAJrB,QAAI,IAAJA,GAA6B,QAAzBo0B,EAAJp0B,EAAMy0B,qBAAqB,UAAE,IAAAL,GAAM,QAANC,EAA7BD,EAA+BI,YAAI,IAAAH,OAA/B,EAAJA,EAAqCz2B,UAGvC,OADA42B,EAAgB,QAATA,EAAiB,eAAc,SAAAp5B,OAAYo5B,GAEhDh6B,cAAA,OAAKH,UAAU,aAAYE,SACzBH,eAAA,OAAKC,UAAU,mBAAkBE,SAAA,CAC/BH,eAAA,OAAKC,UAAU,yBAAwBE,SAAA,CACrCH,eAAA,KAAGC,UAAU,cAAaE,SAAA,CAAC,gBAA+B,QAAlB+5B,EAACt0B,EAAKwV,oBAAY,IAAA8e,OAAA,EAAjBA,EAAmB32B,QAC5DnD,cAAA,KAAGH,UAAU,cAAaE,SAAEyF,EAAKyD,OACjCrJ,eAAA,OAAKC,UAAU,gCAA+BE,SAAA,CAC5CH,eAAA,KAAGC,UAAU,IAAGE,SAAA,CAAEyF,EAAK00B,UAAU,SACjCl6B,cAAA,KAAAD,SAAIyF,EAAK20B,aAEXv6B,eAAA,KAAGC,UAAU,2BAA0BE,SAAA,EAChC,OAAJyF,QAAI,IAAJA,GAA0B,QAAtBu0B,EAAJv0B,EAAMy0B,4BAAoB,IAAAF,OAAtB,EAAJA,EAA4BlzB,QAAS,GAAKmzB,EAAM,UAGrDp6B,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CH,eAAA,OAAKC,UAAU,sDAAqDE,SAAA,CAClEC,cAAA,KAAAD,SAAG,SACHC,cAAA,KAAAD,SAAG,UACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,WACHC,cAAA,KAAAD,SAAG,eAEJyF,EAAK+E,QAAQD,KAAI,SAACwN,GAAM,OACvBlY,eAAA,OAEEC,UAAU,8DAA6DE,SAAA,CAEvEC,cAAA,KAAAD,SAAI+X,EAAOgJ,WACX9gB,cAAA,OAAKH,UAAU,uBAAsBE,SACnCC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAAShD,IAAI,OAE9CF,cAAA,KAAAD,SAAI+X,EAAO3U,OACXnD,cAAA,KAAGH,UAAWiY,EAAO0D,OAAS,EAAI,QAAU,MAAMzb,SAC/C+X,EAAO0D,SAEVxb,cAAA,KAAAD,SAAI+X,EAAOnE,YAXNmE,EAAOhY,YAtBmB0F,EAAK9C,QCmCnC03B,GAxCM,SAAH75B,GAAiC,IAA3BoE,EAAMpE,EAANoE,OAAQuD,EAAW3H,EAAX2H,YAC9BO,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArC4W,EAAQ1W,EAAA,GAAE0xB,EAAW1xB,EAAA,GAE5B4I,EAAwB7I,mBAAS,GAAE8I,EAAA5I,YAAA2I,EAAA,GAA5BjK,EAAIkK,EAAA,GAAEkN,EAAOlN,EAAA,GAEpBpI,qBAAU,WACkB,SAAAkxB,IAQzB,OARyBA,EAAAhxB,YAAAC,IAAAC,MAA1B,SAAAC,IAAA,IAAAC,EAAA2V,EAAA,OAAA9V,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACmCC,EAAY5C,kBAC3CzC,EAJa,EAMb2C,EACAY,GACA,KAAD,EAAAwB,EAAAG,EAAAI,KALaoV,EAAQ3V,EAAdQ,KAMRmwB,EAAYhb,GAAU,wBAAAxV,EAAAM,UAAAV,QACvBW,MAAA,KAAAxD,YATc,WACW0zB,EAAAlwB,MAAC,KAADxD,WAS1B2zB,KACC,CAACryB,EAAaZ,IAMjB,OACE1H,eAAA,OAAAG,SAAA,CACEC,cAAA,MAAIH,UAAU,4BAA2BE,SAAC,cAC1CC,cAAC+f,KAAa,CACZC,cAAe,OACfC,UAAW,OACXC,UAAWb,EAASxY,OAxBP,IAwB+B,EAAIS,EAAO,EAAIA,EAC3D6Y,aAXkB,SAAClO,GACvB,IAAImO,EAAQnO,EAAMgI,SAAW,EACfyE,EAAJ,IAAV0B,EAAsB,EAAaA,IAU/BC,mBAAoB,+CACpBE,cAAe,YACfC,kBAAmB,cAEpBnB,EAASxY,OAAS,GACjBwY,EAAS/U,KAAI,SAAC9E,GAAI,OAAKxF,cAAC05B,GAAU,CAACl0B,KAAMA,GAAWA,EAAK9C,YC6ClD83B,GA/EC,SAAHj6B,GAA8F,IAAxFoE,EAAMpE,EAANoE,OAAQ6oB,EAASjtB,EAATitB,UAAWtmB,EAAK3G,EAAL2G,MAAOgD,EAAI3J,EAAJ2J,KAAMuwB,EAAWl6B,EAAXk6B,YAAa5H,EAAUtyB,EAAVsyB,WAAYS,EAAU/yB,EAAV+yB,WAAYprB,EAAW3H,EAAX2H,YACpFO,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvC8qB,EAAS5qB,EAAA,GAAE+xB,EAAY/xB,EAAA,GAS9B,OARAS,qBAAU,WACqB,SAAAuxB,IAG1B,OAH0BA,EAAArxB,YAAAC,IAAAC,MAA3B,SAAAC,IAAA,IAAAC,EAAA6pB,EAAA,OAAAhqB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACsCC,EAAY/C,aAAatC,EAAQuC,EAAO,KAAMgB,GAAa,KAAD,EAAAwB,EAAAG,EAAAI,KAA9EspB,EAAS7pB,EAAfQ,KACRwwB,EAAanH,GAAW,wBAAA1pB,EAAAM,UAAAV,QAC3BW,MAAA,KAAAxD,YAJY,WACc+zB,EAAAvwB,MAAC,KAADxD,WAI3BK,KACD,CAACiB,IAGAlI,cAAAo3B,WAAA,CAAAr3B,SACKwzB,EAAU1sB,OAAS,GAChBjH,eAAA,OAAKC,UAAU,uBAAsBE,SAAA,CACjCC,cAAA,KAAGH,UAAU,gCAA+BE,SAAEytB,IAC9CxtB,cAAA,OAAKH,UAAU,oBAAmBE,SAC9BH,eAAA,OAAKC,UAAU,iDAAgDE,SAAA,CAC3DC,cAAA,OAAKH,UAAU,kBAAiBE,SAC5BC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG2yB,EAAU,GAAG7wB,IAAIQ,OAAShD,IAAI,aAE1DN,eAAA,OAAKC,UAAU,oBAAmBE,SAAA,CAC9BC,cAAA,KAAAD,SAAG,OACHC,cAAA,KAAGH,UAAU,aAAYE,SAAEwzB,EAAU,GAAG7wB,IAAIS,OAC5CvD,eAAA,KAAGC,UAAU,eAAcE,SAAA,CACtB8yB,EAAW,GAAG,KAAE7yB,cAAA,QAAAD,SAAOwzB,EAAU,GAAGrpB,EAAK,SAE9CtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,KAAGU,EAAU,GAAGrpB,EAAK,OAExCtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,IAAEU,EAAU,GAAGrpB,EAAK,OAEvCtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,KAAGU,EAAU,GAAGrpB,EAAK,OAExCtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,KAAGU,EAAU,GAAGrpB,EAAK,eAKpDtK,eAAA,MAAIg0B,MAAM,IAAI/zB,UAAU,sCAAqCE,SAAA,CACzDH,eAAA,MAAIC,UAAU,kBAAiBE,SAAA,CAAC,KAE5BC,cAAA,OAAKH,UAAU,qBAAoBE,SAC/BC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG2yB,EAAU,GAAG7wB,IAAIQ,OAAShD,IAAI,OAE1DN,eAAA,QAAMC,UAAU,OAAME,SAAA,CAAEwzB,EAAU,GAAG7wB,IAAIS,KAAK,QAC7Cs3B,EAAY,GAAG,IAACz6B,cAAA,QAAMH,UAAU,wBAAuBE,SAAEwzB,EAAU,GAAGrpB,EAAK,MAAY,IACvFuwB,EAAY,GAAG,IAAElH,EAAU,GAAGrpB,EAAK,IAAI,IAAEuwB,EAAY,GAAG,IAAElH,EAAU,GAAGrpB,EAAK,IAAK,IACjFuwB,EAAY,GAAG,IAAElH,EAAU,GAAGrpB,EAAK,IAAI,IAAEuwB,EAAY,GAAG,IAAElH,EAAU,GAAGrpB,EAAK,OAEjFtK,eAAA,MAAIC,UAAU,uBAAsBE,SAAA,CAAC,KAEjCC,cAAA,OAAKH,UAAU,qBAAoBE,SAC/BC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG2yB,EAAU,GAAG7wB,IAAIQ,OAAShD,IAAI,OAE1DN,eAAA,QAAMC,UAAU,OAAME,SAAA,CAAEwzB,EAAU,GAAG7wB,IAAIS,KAAK,QAC7Cs3B,EAAY,GAAG,IAACz6B,cAAA,QAAMH,UAAU,wBAAuBE,SAAEwzB,EAAU,GAAGrpB,EAAK,MAAY,IACvFuwB,EAAY,GAAG,IAAElH,EAAU,GAAGrpB,EAAK,IAAI,IAAEuwB,EAAY,GAAG,IAAElH,EAAU,GAAGrpB,EAAK,IAAK,IACjFuwB,EAAY,GAAG,IAAElH,EAAU,GAAGrpB,EAAK,IAAI,IAAEuwB,EAAY,GAAG,IAAElH,EAAU,GAAGrpB,EAAK,UAGrFlK,cAAA,KAAGH,UAAU,qBAAoBE,SAC7BH,eAACc,IAAI,CACDb,UAAU,gBACVc,GAAE,8BAAAC,OAAgC+D,EAAM,WAAA/D,OAAUsG,EAAK,eAAAtG,OAAc4sB,EAAS,UAAA5sB,OAASsJ,EAAI,gBAAAtJ,OAAeiyB,EAAU,gBAAAjyB,OAAe0yB,EAAU,iBAAA1yB,OAAgB8yB,KAAKkH,UAC9J1yB,IACAnI,SAAA,CACP,mBACmBC,cAAC0K,IAAmB,eC3DjDmwB,GAbO,SAAHt6B,GAAoB,IAAduX,EAAMvX,EAANuX,OACvB,OACElY,eAACc,IAAI,CAACC,GAAE,kBAAAC,OAAoBkX,EAAOpV,KAAM3C,SAAA,CACvCC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGkX,EAAO5U,OAC1BhD,IAAI,eACJL,UAAU,mBAEZG,cAAA,KAAGH,UAAU,yBAAwBE,SAAE+X,EAAO1U,eCqGrC03B,GA3GG,SAAHv6B,GAUR,IATHoE,EAAMpE,EAANoE,OACA6oB,EAASjtB,EAATitB,UACAtmB,EAAK3G,EAAL2G,MACAgD,EAAI3J,EAAJ2J,KACAuwB,EAAWl6B,EAAXk6B,YACA5H,EAAUtyB,EAAVsyB,WAAUkI,EAAAx6B,EACVy6B,mBAAW,IAAAD,EAAG,KAAIA,EAClBzH,EAAU/yB,EAAV+yB,WACAprB,EAAW3H,EAAX2H,YAEAO,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvC8qB,EAAS5qB,EAAA,GAAE+xB,EAAY/xB,EAAA,GAQ9B,OAPAS,qBAAU,WACqB,SAAAuxB,IAG1B,OAH0BA,EAAArxB,YAAAC,IAAAC,MAA3B,SAAAC,IAAA,IAAAC,EAAA6pB,EAAA,OAAAhqB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACsCC,EAAY/C,aAAatC,EAAQuC,EAAO,KAAMgB,GAAa,KAAD,EAAAwB,EAAAG,EAAAI,KAA9EspB,EAAS7pB,EAAfQ,KACRwwB,EAAanH,GAAW,wBAAA1pB,EAAAM,UAAAV,QAC3BW,MAAA,KAAAxD,YAJY,WACc+zB,EAAAvwB,MAAC,KAADxD,WAI3BK,KACD,CAACiB,IAEAlI,cAAAo3B,WAAA,CAAAr3B,SAMKwzB,EAAU1sB,OAAS,GAAKwE,MAAM8rB,QAAQ5D,IACnC3zB,eAAA,OAAKC,UAAU,qBAAoBE,SAAA,CAC/BC,cAAA,KAAGH,UAAU,iCAAgCE,SAAEytB,IAC/CxtB,cAAA,OAAKH,UAAU,oBAAmBE,SAC9BH,eAAA,OAAKC,UAAU,QAAOE,SAAA,CAClBC,cAAA,OAAKH,UAAU,2BAA0BE,SACrCC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG2yB,EAAU,GAAG7wB,IAAIQ,OAAShD,IAAI,SAASL,UAAU,WAE5Em7B,GACGh7B,cAAA,OAAKH,UAAU,+BAA8BE,SACzCC,cAAA,QAAAD,SAAOi7B,MAGfp7B,eAAA,OAAKC,UAAU,yDAAwDE,SAAA,CACnEH,eAAA,KAAGC,UAAU,aAAYE,SAAA,CAAC,KAAGwzB,EAAU,GAAG7wB,IAAIS,QAC9CvD,eAAA,KAAGC,UAAU,eAAcE,SAAA,CACtB8yB,EAAW,GAAG,KAAE7yB,cAAA,QAAAD,SAAOwzB,EAAU,GAAGrpB,EAAK,SAE9CtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,KAAGU,EAAU,GAAGrpB,EAAK,OAExCtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,IAAEU,EAAU,GAAGrpB,EAAK,OAEvCtK,eAAA,KAAGC,UAAU,GAAEE,SAAA,CACV8yB,EAAW,GAAG,KAAGU,EAAU,GAAGrpB,EAAK,eAKpDtK,eAAA,MAAIg0B,MAAM,IAAI/zB,UAAU,sCAAqCE,SAAA,CACzDH,eAAA,MAAIC,UAAU,uBAAsBE,SAAA,CAAC,KAEjCC,cAAA,OAAKH,UAAU,qBAAoBE,SAC/BC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG2yB,EAAU,GAAG7wB,IAAIQ,OAAShD,IAAI,OAE1DN,eAAA,QAAMC,UAAU,OAAME,SAAA,CAAEwzB,EAAU,GAAG7wB,IAAIS,KAAK,QAC7Cs3B,EAAY,GACbz6B,cAAA,QAAMH,UAAU,wBAAuBE,SAAEwzB,EAAU,GAAGrpB,EAAK,MAAY,IACvEtK,eAAA,KAAGC,UAAU,sBAAqBE,SAAA,CAC7B,IACA06B,EAAY,GACZlH,EAAU,GAAGrpB,EAAK,UAG3BtK,eAAA,MAAIC,UAAU,uBAAsBE,SAAA,CAAC,KAEjCC,cAAA,OAAKH,UAAU,oBAAmBE,SAC9BC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAG2yB,EAAU,GAAG7wB,IAAIQ,OAAShD,IAAI,OAE1DN,eAAA,QAAMC,UAAU,OAAME,SAAA,CAAEwzB,EAAU,GAAG7wB,IAAIS,KAAK,QAC7Cs3B,EAAY,GACbz6B,cAAA,QAAMH,UAAU,wBAAuBE,SAAEwzB,EAAU,GAAGrpB,EAAK,MAAY,IACvEtK,eAAA,KAAGC,UAAU,sBAAqBE,SAAA,CAC7B06B,EAAY,GACZlH,EAAU,GAAGrpB,EAAK,aAI/BlK,cAAA,KAAGH,UAAU,qBAAoBE,SAO7BH,eAACc,IAAI,CACDb,UAAU,gBACVc,GAAE,8BAAAC,OAAgC+D,EAAM,WAAA/D,OAAUsG,EAAK,eAAAtG,OAAc4sB,EAAS,UAAA5sB,OAASsJ,EAAI,gBAAAtJ,OAAeiyB,EAAU,gBAAAjyB,OAAe0yB,EAAU,mDAAA1yB,OAC1H8yB,KAAKkH,UAAU1yB,IAAenI,SAAA,CACpD,mBACmBC,cAAC0K,IAAmB,eClBjDqW,GA/EM,SAAHxgB,GAAoB,IAAdoE,EAAMpE,EAANoE,OACtB8D,EAAgDC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArDquB,EAAgBnuB,EAAA,GAAEouB,EAAmBpuB,EAAA,GAU5C,OATAS,qBAAU,WAC0B,SAAA6xB,IAKjC,OALiCA,EAAA3xB,YAAAC,IAAAC,MAAlC,SAAAC,IAAA,IAAAyxB,EAAApE,EAAA,OAAAvtB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEUoc,GAAgBjK,uBAAuBvX,GAAQ,KAAD,EAAAu2B,EAAArxB,EAAAI,KADxC6sB,EAAgBoE,EAAtBhxB,KAER6sB,EAAoBD,GACpBvuB,QAAQC,IAAI,mBAAoBsuB,GAAkB,wBAAAjtB,EAAAM,UAAAV,QACnDW,MAAA,KAAAxD,YANc,WACmBq0B,EAAA7wB,MAAC,KAADxD,WAMlCu0B,KACC,IAEDv7B,eAAA,OAAKC,UAAU,GAAEE,SAAA,CACd+2B,EAAiBjwB,OAAS,GAAKwE,MAAM8rB,QAAQL,IAC5Cl3B,eAAA,OAAKC,UAAU,oBAAmBE,SAAA,CAChCH,eAAA,OAAKC,UAAU,+BAA8BE,SAAA,CAC3CC,cAAA,KAAGH,UAAU,iCAAgCE,SAAC,uCAC9CH,eAAA,OAAKC,UAAU,iCAAgCE,SAAA,CAC7CC,cAAA,OAAKH,UAAU,mBAAkBE,SAC/BC,cAAA,OAAKH,UAAU,2BAA0BE,SACvCC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGk2B,EAAiB,GAAG1Q,aAAaljB,OACpDhD,IAAI,SACJL,UAAU,aAIhBG,cAAA,OAAKH,UAAU,mBAAkBE,SAC/BC,cAAA,OAAKH,UAAU,2BAA0BE,SACvCC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGk2B,EAAiB,GAAG/O,YAAY7kB,OACnDhD,IAAI,SACJL,UAAU,gBAKlBD,eAAA,OAAKC,UAAU,gCAA+BE,SAAA,CAC5CC,cAAA,OAAKH,UAAU,iBAAgBE,SAC7BC,cAAA,KAAAD,SAAI+2B,EAAiB,GAAG1Q,aAAahjB,aAEvCxD,eAAA,OAAKC,UAAU,sBAAqBE,SAAA,CAClCC,cAAA,KAAAD,SAAG,OACHH,eAAA,KAAAG,SAAA,CAAG,WAAS+2B,EAAiB,GAAGzQ,cAChCzmB,eAAA,KAAAG,SAAA,CAAG,cAEA,IAAII,KAAK22B,EAAiB,GAAG/vB,WAAW8Q,mBACvC,YAGJjY,eAAA,KAAAG,SAAA,CAAG,YAEA,IAAII,KAAK22B,EAAiB,GAAG9vB,SAAS6Q,mBACrC,eAIN7X,cAAA,OAAKH,UAAU,iBAAgBE,SAC7BC,cAAA,KAAAD,SAAI+2B,EAAiB,GAAG/O,YAAY3kB,mBAI1CpD,cAAA,KAAGH,UAAU,qBAAoBE,SAC/BH,eAACc,IAAI,CAACb,UAAU,gBAAgBc,GAAE,cAAAC,OAAgB+D,GAAS5E,SAAA,CAAC,mBAC1CC,cAAC0K,IAAmB,aAK1CW,MAAM8rB,QAAQL,IACdl3B,eAAA,OAAKC,UAAU,aAAYE,SAAA,CACzBC,cAAA,KAAGH,UAAU,cAAaE,SAAE+2B,IAC5B92B,cAAA,UAAQH,UAAU,kBAAiBE,SAAC,+BCnD/Bq7B,GAzBW,SAAH76B,GAAwB,IAAlB86B,EAAU96B,EAAV86B,WAC3B,OACEr7B,cAAA,OAAKH,UAAU,0BAAyBE,SACtCH,eAAA,OAAKC,UAAU,wBAAuBE,SAAA,CACpCH,eAAA,OAAKC,UAAU,SAAQE,SAAA,CAAC,cACXC,cAAA,SACVq7B,EAAW,GAAGrT,aAAa,kBAE9BpoB,eAAA,OAAKC,UAAU,QAAOE,SAAA,CAAC,eACTC,cAAA,SACXq7B,EAAW,GAAGC,iBAAiB,YAElC17B,eAAA,OAAKC,UAAU,QAAOE,SAAA,CAAC,eACTC,cAAA,SACXq7B,EAAW,GAAGr1B,WAAW,kBAE5BpG,eAAA,OAAKC,UAAU,QAAOE,SAAA,CAAC,aACXC,cAAA,SACTq7B,EAAW,GAAGE,eAAe,wBCmEzBC,GAlFI,SAAHj7B,GAAuC,IAAjCoE,EAAMpE,EAANoE,OAAQ82B,EAAiBl7B,EAAjBk7B,kBAC1BhzB,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCizB,EAAO/yB,EAAA,GAAEgzB,EAAUhzB,EAAA,GAC1B4I,EAAoC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAzCqqB,EAAUpqB,EAAA,GAAEqqB,EAAarqB,EAAA,GAChCuD,EAAkCrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAAvChO,EAASiO,EAAA,GAAE4iB,EAAY5iB,EAAA,GAC9BwF,EAA8B9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAAnCxT,EAAOyT,EAAA,GAAEod,EAAUpd,EAAA,GAC1BrR,qBAAU,WACmB,SAAA0yB,IAGxB,OAHwBA,EAAAxyB,YAAAC,IAAAC,MAAzB,SAAAC,IAAA,IAAAsyB,EAAAL,EAAA,OAAAnyB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoCC,EAAYzC,eAAe5C,GAAQ,KAAD,EAAAo3B,EAAAlyB,EAAAI,KAApDyxB,EAAOK,EAAb7xB,KACRyxB,EAAWD,GAAS,wBAAA7xB,EAAAM,UAAAV,QACvBW,MAAA,KAAAxD,YAJY,WACYk1B,EAAA1xB,MAAC,KAADxD,WAIzBo1B,KACD,IAyBH,OACIp8B,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACtBC,cAAA,KAAGH,UAAU,yBAAwBE,SAAC,oBACtCC,cAAA,OAAKH,UAAU,uCAAsCE,SACjDC,cAAA,OAAKH,UAAU,aAAYE,SACvBC,cAAA,UAAQH,UAAU,cAAc+nB,aAAW,yBAAyBta,SA7B3D,SAAChB,GACtBuvB,EAAcvvB,EAAE6F,OAAOxQ,QA4BoF5B,UACzFyd,KAAE6N,QAAQqQ,IACRA,EAAQpxB,KAAI,SAAC2xB,GAAM,OACfj8B,cAAA,UAAQ2B,MAAOs6B,EAAOv5B,IAAI3C,SACrBk8B,EAAOv5B,KADoBu5B,EAAOv5B,cAO1Dk5B,GACGh8B,eAAA,OAAKC,UAAU,4CAA2CE,SAAA,CACtDH,eAAA,OAAKC,UAAU,qCAAoCE,SAAA,CAC/CC,cAAA,KAAGH,UAAU,eAAcE,SAAC,eAC5BC,cAAA,SACIoN,KAAK,OACLvN,UAAU,QACV8B,MAAOoF,GAAS,GAAAnG,OAAOg7B,EAAU,UACjCrsB,IAAG,GAAA3O,OAAKg7B,EAAU,UAClB/iB,IAAG,GAAAjY,OAAKg7B,EAAU,UAClBtuB,SAAU,SAAChB,GAAC,OA7Cf,SAACA,GAClBsrB,EAAatrB,EAAE6F,OAAOxQ,OA4Ceu2B,CAAa5rB,SAGtC1M,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC1BC,cAAA,KAAGH,UAAU,eAAcE,SAAC,aAC5BC,cAAA,SACIoN,KAAK,OACLvN,UAAU,QACV8B,MAAOqF,GAAO,GAAApG,OAAOg7B,EAAU,UAC/BrsB,IAAG,GAAA3O,OAAKg7B,EAAU,UAClB/iB,IAAG,GAAAjY,OAAKg7B,EAAU,UAClBtuB,SAAU,SAAChB,GAAC,OApDjB,SAACA,GAChBurB,EAAWvrB,EAAE6F,OAAOxQ,OACpB4G,QAAQC,IAAI,WAAY8D,EAAE6F,OAAOxQ,OACjC4G,QAAQC,IAAI,aAAczB,GACtBA,EACIuF,EAAE6F,OAAOxQ,OAASoF,GAClB7C,IAAMF,MAAM,+DAGZsI,EAAE6F,OAAOxQ,OAAK,GAAAf,OAAOg7B,EAAU,WAC/B13B,IAAMF,MAAM,+DAGpBy3B,EAAkB10B,EAAWuF,EAAE6F,OAAOxQ,MAAOi6B,GAuCRzD,CAAW7rB,MAEhCtM,cAAA,KAAAD,SAAG,yCC4BZm8B,GArGS,SAAH37B,GAAiC,IAA3BoE,EAAMpE,EAANoE,OAAQuD,EAAW3H,EAAX2H,YAC/BO,EAAsCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAiB5BwzB,EAhBa,CACf,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAEM,IAAIh8B,MACOklB,YAUrB,OARAjc,qBAAU,WACqB,SAAAuxB,IAG1B,OAH0BA,EAAArxB,YAAAC,IAAAC,MAA3B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC4CC,EAAYxC,gBAAgB7C,EAAQuD,GAAa,KAAD,EAAAwB,EAAAG,EAAAI,KAA1EN,EAAeD,EAArBQ,KACRpB,EAAea,GAAiB,wBAAAE,EAAAM,UAAAV,QACnCW,MAAA,KAAAxD,YAJY,WACc+zB,EAAAvwB,MAAC,KAADxD,WAI3BK,KACD,CAACiB,IAGAlI,cAAAo3B,WAAA,CAAAr3B,SACK8I,EAAYhC,OAAS,GAClBjH,eAAA,OAAKC,UAAU,qBAAoBE,SAAA,CAC/BC,cAAA,KAAGH,UAAU,iCAAgCE,SAAC,iCAC9CC,cAAA,OAAKH,UAAU,oBAAmBE,SAC9BH,eAAA,OAAKC,UAAU,QAAOE,SAAA,CAClBC,cAAA,OAAKH,UAAU,2BAA0BE,SACrCC,cAAA,OACIC,IAAG,GAAAW,OAAKC,KAAQD,OAAGiI,EAAY,GAAG0B,QAAQ,GAAGrH,OAC7ChD,IAAI,SACJL,UAAU,WAIlBG,cAAA,OAAKH,UAAU,+BAA8BE,SACzCC,cAAA,QAAAD,SAAOo8B,MAGXv8B,eAAA,OAAKC,UAAU,yDAAwDE,SAAA,CACnEH,eAAA,KAAGC,UAAU,aAAYE,SAAA,CAAC,KAAG8I,EAAY,GAAG0B,QAAQ,GAAGpH,QACvDvD,eAAA,KAAGC,UAAU,eAAcE,SAAA,CAAC,iBACVC,cAAA,QAAAD,SAAO8I,EAAY,GAAG0B,QAAQ,GAAGC,iBAEnD5K,eAAA,KAAGC,UAAU,GAAEE,SAAA,CAAC,eAAa8I,EAAY,GAAG0B,QAAQ,GAAG6xB,oBACvDx8B,eAAA,KAAGC,UAAU,GAAEE,SAAA,CAAC,eAAa8I,EAAY,GAAG0B,QAAQ,GAAGvE,cACvDpG,eAAA,KAAGC,UAAU,GAAEE,SAAA,CAAC,gBAAc8I,EAAY,GAAG0B,QAAQ,GAAGE,6BAIpE7K,eAAA,MAAIg0B,MAAM,IAAI/zB,UAAU,sCAAqCE,SAAA,CACzDH,eAAA,MAAIC,UAAU,uBAAsBE,SAAA,CAAC,KAEjCC,cAAA,OAAKH,UAAU,qBAAoBE,SAC/BC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGiI,EAAY,GAAG0B,QAAQ,GAAGrH,OAAShD,IAAI,OAEnEN,eAAA,QAAMC,UAAU,OAAME,SAAA,CAAE8I,EAAY,GAAG0B,QAAQ,GAAGpH,KAAK,QAAS,SAEhEnD,cAAA,QAAMH,UAAU,wBAAuBE,SAAE8I,EAAY,GAAG0B,QAAQ,GAAGC,cAAoB,IACvF5K,eAAA,KAAGC,UAAU,sBAAqBE,SAAA,CAC7B,IAAI,KAEJ8I,EAAY,GAAG0B,QAAQ,GAAG6xB,uBAGnCx8B,eAAA,MAAIC,UAAU,uBAAsBE,SAAA,CAAC,KAEjCC,cAAA,OAAKH,UAAU,qBAAoBE,SAC/BC,cAAA,OAAKC,IAAG,GAAAW,OAAKC,KAAQD,OAAGiI,EAAY,GAAG0B,QAAQ,GAAGrH,OAAShD,IAAI,OAEnEN,eAAA,QAAMC,UAAU,OAAME,SAAA,CAAE8I,EAAY,GAAG0B,QAAQ,GAAGpH,KAAK,QAAS,SAEhEnD,cAAA,QAAMH,UAAU,wBAAuBE,SAAE8I,EAAY,GAAG0B,QAAQ,GAAGC,cAAoB,IACvF5K,eAAA,KAAGC,UAAU,sBAAqBE,SAAA,CAC7B,IAAI,KAEJ8I,EAAY,GAAG0B,QAAQ,GAAG6xB,0BAIvCp8B,cAAA,KAAGH,UAAU,qBAAoBE,SAC7BH,eAACc,IAAI,CACDb,UAAU,gBACVc,GAAE,6BAAAC,OAA+B+D,EAAM,iBAAA/D,OAAgB8yB,KAAKkH,UAAU1yB,IAAenI,SAAA,CACxF,mBACmBC,cAAC0K,IAAmB,eCyNjD2xB,GAtSM,SAACl7B,GAAW,IAADm7B,EACxB33B,EAASxD,EAAM6G,MAAMC,OAAOtD,OAClC8D,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BoK,EAAIlK,EAAA,GAAEiwB,EAAOjwB,EAAA,GACpB4I,EAAoC7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAzC8pB,EAAU7pB,EAAA,GAAE+qB,EAAa/qB,EAAA,GAChCuD,EAAsCrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAA3C7M,EAAW8M,EAAA,GAAEwnB,EAAcxnB,EAAA,GAClCwF,EAAsD9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAA3DiiB,EAAmBhiB,EAAA,GAAEiiB,EAAsBjiB,EAAA,GAElDrR,qBAAU,WACc,SAAAuzB,IAGrB,OAHqBA,EAAArzB,YAAAC,IAAAC,MAAtB,SAAAC,IAAA,IAAAmzB,EAAA/pB,EAAA,OAAAtJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC+B2M,GAAYlD,WAAW7O,GAAQ,KAAD,EAAAi4B,EAAA/yB,EAAAI,KAA7C4I,EAAI+pB,EAAV1yB,KACR0uB,EAAQ/lB,GAAM,wBAAAhJ,EAAAM,UAAAV,QACfW,MAAA,KAAAxD,WAEkC,SAAAi2B,IAMlC,OANkCA,EAAAvzB,YAAAC,IAAAC,MAAnC,SAAAuE,IAAA,IAAA+uB,EAAAzB,EAAA,OAAA9xB,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACqCgzB,EAAar2B,qBAC9C/B,EACAuD,GACA,KAAD,EAAA40B,EAAA7uB,EAAAhE,KAHaoxB,EAAUyB,EAAhB5yB,KAIRqyB,EAAclB,GAAY,wBAAAptB,EAAA9D,UAAA4D,QAC3B3D,MAAA,KAAAxD,YAZc,WACO+1B,EAAAvyB,MAAC,KAADxD,WAItBmM,GAAU,WACyB8pB,EAAAzyB,MAAC,KAADxD,WAOnCF,KACC,CAACwB,IAEJkB,qBAAU,YACoB,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAmM,IAAA,IAAAqnB,EAAAC,EAAA,OAAA1zB,IAAAK,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,cAAA6L,EAAA7L,KAAA,EAErBmzB,GAAoB9D,sBAAsBz0B,GAAQ,KAAD,EAAAq4B,EAAApnB,EAAA3L,KAD3CgzB,EAAYD,EAAlB9yB,KAERwyB,EAAuBO,GAAc,wBAAArnB,EAAAzL,UAAAwL,OACtC,kBAJ2B,OAAApV,EAAA6J,MAAA,KAAAxD,aAAA,EAK5Bu2B,KACC,IAQH,OACEv9B,eAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CACTT,UAAU,OACVW,WAAW,IAAIL,MAAOC,cAAgB,eAEvCod,KAAE6N,QAAQgQ,IAAer7B,cAACyH,EAAY,KAErC+V,KAAE6N,QAAQxY,IACVjT,eAAA,OAAKC,UAAU,cAAaE,SAAA,CAC1BC,cAAA,OAAKH,UAAU,+CAA8CE,SAC3DC,cAAC4mB,KAAOC,IAAG,CACTnP,MAAO,CACLL,MAAO,IACPC,OAAQ,IACRwP,aAAc,GACdC,gBAAiB,OACjBqW,OAAQ,kBAEVpW,QAAS,CAAEC,OAAQ,KACnBC,WAAY,CACV9Z,KAAM,SACN+Z,SAAU,EACVC,OAAQ,IAEVnnB,IAAG,GAAAW,OAAKC,KAAQD,OAAGiS,EAAKuE,WACxBlX,IAAI,WAGRF,cAAA,KAAGH,UAAU,mBAAmBC,GAAG,WAAUC,SAC1C8S,EAAK1P,OAERvD,eAAA,OAAKC,UAAU,QAAOE,SAAA,CACpBC,cAAA,OAAKH,UAAU,cAAc6X,MAAO,CAAEJ,OAAQ,OAAQvX,SACpDC,cAAA,OACEC,IAAG,GAAAW,OAAKC,IAAQ,6BAChBX,IAAI,GACJL,UAAU,kBAGdG,cAAA,OAAKH,UAAU,cAAaE,SAC1BC,cAAA,OACEC,IAAG,GAAAW,OAAKC,IAAQ,2BAChBhB,UAAU,QACVK,IAAI,UAIVF,cAAA,OAAKH,UAAU,qBAAoBE,SACjCC,cAAA,OAAKH,UAAU,MAAKE,SACjB8S,EAAKtI,QAAQD,KAAI,SAACwN,GAAM,OACvB9X,cAAA,OACEH,UAAU,2DAA0DE,SAGpEC,cAAC66B,GAAa,CAAC/iB,OAAQA,KAFlBA,EAAOpV,gBAStB8a,KAAE6N,QAAQgQ,IACVz7B,eAAAw3B,WAAA,CAAAr3B,SAAA,CACEC,cAACo7B,GAAiB,CAACC,WAAYA,IAC/Bz7B,eAAA,OAAKC,UAAU,wCAAuCE,SAAA,CACnD08B,EAAoB51B,OAAS,GAC5BjH,eAACc,IAAI,CACHb,UAAU,sBACV0X,cAAY,UACZC,iBAAe,MACf7W,GAAE,iBAAAC,OAAmBiS,EAAKnQ,KAAM3C,SAAA,CACjC,sBAECC,cAAC+X,KAAW,CAAClY,UAAU,SACvBG,cAAA,KAAGH,UAAU,sCAGhB48B,EAAoB51B,OAAS,GAC5BjH,eAACc,IAAI,CACHb,UAAU,sBACV0X,cAAY,UACZC,iBAAe,MACf7W,GAAE,sBAAAC,OAA8C,QAA9C07B,EAAwBG,EAAoB,UAAE,IAAAH,OAAA,EAAtBA,EAAwB55B,KAAM3C,SAAA,CACzD,wBAECC,cAAC+X,KAAW,CAAClY,UAAU,SACvBG,cAAA,KAAGH,UAAU,yCAInBG,cAAA,OAAKH,UAAU,mBAAkBE,SAC/BC,cAAA,KACEK,KAAK,+DACL8R,OAAO,SAAQpS,SAChB,4BAKHC,cAACw7B,GAAU,CAAC72B,OAAQA,EAAQ82B,kBA1GV,SAAC10B,EAAWC,EAAS40B,GAC7C70B,EAAYA,GAAS,GAAAnG,OAAOg7B,EAAU,UAEtCY,EADc,CAAEz1B,YAAWC,kBA2GV,kCAAdq0B,GACCr7B,cAAA,KAAGH,UAAU,0BAAyBE,SAAEs7B,KAExC7d,KAAE6N,QAAQgQ,IAAehwB,MAAM8rB,QAAQkE,IACvCr7B,cAAA,OAAKH,UAAU,4BAA2BE,SACxCH,eAAA,OAAKC,UAAU,WAAUE,SAAA,CACvBC,cAACw6B,GAAO,CACN71B,OAAQA,EACR6oB,UAAU,4BACVtmB,MAAM,eACNgD,KAAM,CACJ,cACA,aACA,gBACA,YACA,cAEFuwB,YAAa,CAAC,eAAgB,KAAM,MAAO,KAAM,MACjD5H,WAAY,CACV,SACA,cACA,gBACA,iBACA,mBAEFS,WAAY,CAAC,IAAK,KAAM,MAAO,KAAM,MACrCprB,YAAaA,IAEflI,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAC86B,GAAS,CACRn2B,OAAQA,EACR6oB,UAAU,8BACVtmB,MAAM,gBACNgD,KAAM,CAAC,SAAU,OAAQ,aAAc,WACvCuwB,YAAa,CAAC,KAAM,KAAM,MAAO,KACjC5H,WAAY,CAAC,SAAU,OAAQ,eAAgB,WAC/CS,WAAY,CAAC,IAAK,IAAK,MAAO,KAC9BprB,YAAaA,MAGjBlI,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAC86B,GAAS,CACRn2B,OAAQA,EACR6oB,UAAU,4BACVtmB,MAAM,YACNgD,KAAM,CACJ,cACA,aACA,YACA,qBAEFuwB,YAAa,CAAC,WAAY,OAAQ,GAAI,IACtC5H,WAAY,CACV,eACA,cACA,aACA,aAEFS,WAAY,CAAC,KAAM,KAAM,KAAM,QAC/BprB,YAAaA,MAGjBlI,cAACw6B,GAAO,CACN71B,OAAQA,EACR6oB,UAAU,sBACVtmB,MAAM,iBACNgD,KAAM,CACJ,gBACA,iBACA,cACA,aACA,kBAEFuwB,YAAa,CAAC,WAAY,MAAO,KAAM,KAAM,QAC7C5H,WAAY,CACV,kBACA,mBACA,eACA,cACA,yBAEFS,WAAY,CAAC,MAAO,MAAO,KAAM,KAAM,QACvCprB,YAAaA,IAEflI,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAACk8B,GAAe,CAACv3B,OAAQA,EAAQuD,YAAaA,MAqBhDlI,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAC86B,GAAS,CACRn2B,OAAQA,EACR6oB,UAAU,mBACVtmB,MAAM,kBACNgD,KAAM,CAAC,UAAW,SAAU,OAAQ,cACpCuwB,YAAa,CAAC,YAAa,MAAO,GAAI,IACtC5H,WAAY,CAAC,UAAW,SAAU,OAAQ,gBAC1CS,WAAY,CAAC,IAAK,IAAK,IAAK,OAC5BprB,YAAaA,MAGjBlI,cAAA,OAAKH,UAAU,cAAaE,SAC1BC,cAAC+gB,GAAY,CAACpc,OAAQA,MAExB3E,cAAA,OAAKH,UAAU,aAAYE,SACzBC,cAAC86B,GAAS,CACRn2B,OAAQA,EACR6oB,UAAU,8BACVtmB,MAAM,kBACNgD,KAAM,CACJ,eACA,gBACA,oBACA,OAEFuwB,YAAa,CAAC,QAAS,QAAS,GAAI,IACpC5H,WAAY,CACV,iBACA,qBACA,YACA,uBAEFS,WAAY,CAAC,MAAO,MAAO,KAAM,QACjCprB,YAAaA,MAGjBlI,cAAA,OAAKH,UAAU,cAAaE,SAC1BC,cAACo6B,GAAY,CAACz1B,OAAQA,EAAQuD,YAAaA,e,8BC/H1Cm1B,GAxKU,SAACl8B,GACxB,IAAMwD,EAASxD,EAAM6G,MAAMC,OAAOtD,OAClC8D,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BoK,EAAIlK,EAAA,GAAEiwB,EAAOjwB,EAAA,GACpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7B/O,EAAIgP,EAAA,GAAE8G,EAAO9G,EAAA,GAcpB,OAZApI,qBAAU,YACK,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAmzB,EAAA/pB,EAAA,OAAAtJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACe2M,GAAYlD,WAAW7O,GAAQ,KAAD,EAAAi4B,EAAA/yB,EAAAI,KAA7C4I,EAAI+pB,EAAV1yB,KACR0uB,EAAQ/lB,GAAM,wBAAAhJ,EAAAM,UAAAV,OACf,kBAHY,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAIbmM,GACe,eAAAhG,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAA6C,EAAA,OAAArH,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACC2F,EAAYX,iBAAiB,KAAD,EAAvC6B,EAAE3C,EAAAhE,KACRqO,EAAQ1H,EAAG1G,MAAM,wBAAA+D,EAAA9D,UAAA4D,OAClB,kBAHc,OAAAhB,EAAA3C,MAAA,KAAAxD,YAAA,EAIf02B,KACC,IAGD19B,cADA,CACA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CAACE,UAAU,kBAEtBR,cAACyR,KAAM,CACLE,cAAe,CACb1I,KAAM,GACN+wB,KAAM,MACNuD,MAAO,IAET/xB,SAAU,SAACwF,GACT,IAAMzF,EAAS,GAQf,OAPKyF,EAAO/H,OACVsC,EAAOtC,KAAO,oBAGX+H,EAAOusB,QACVhyB,EAAOgyB,MAAQ,sBAEVhyB,GAET4E,SAAQ,eAAAuF,EAAApM,YAAAC,IAAAC,MAAE,SAAAmM,EAAO3E,GAAM,IAAAwsB,EAAAC,EAAAT,EAAA,OAAAzzB,IAAAK,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,OAaM,OAVrByzB,EAAS,IACRE,SAAW1sB,EAAO/H,KACzBu0B,EAAO/D,OAASzoB,EAAOgpB,KAAOhpB,EAAOgpB,KAAO,MAC5CwD,EAAO74B,OAASA,EAChB64B,EAAOniB,SAAWxI,EAAK1P,KACvBq6B,EAAOpmB,UAAYvE,EAAKuE,UACxBomB,EAAOG,OAAS,IACVF,EAAS,IACRG,QAAUp7B,EAAKE,IACtB+6B,EAAOI,YAAc7sB,EAAOusB,MAC5BC,EAAOG,OAAOxkB,KAAKskB,GAAQ7nB,EAAA7L,KAAA,GAEJmzB,GAAoBhE,qBACzCsE,GACA,KAAD,GAAAR,EAAApnB,EAAA3L,KAFW+yB,EAAJ9yB,KAGCxH,KACPwB,IAAM0S,QAAQ,+BACdzV,EAAM6X,QAAQG,KAAK,kBAADvY,OAAmB+D,KAErCT,IAAMF,MAAM,wBACb,yBAAA4R,EAAAzL,UAAAwL,OACF,gBAAAxH,GAAA,OAAAuH,EAAAtL,MAAA,KAAAxD,YAxBO,GAwBN7G,SAEFH,eAAA,OAAKC,UAAU,MAAKE,SAAA,CAClBC,cAAA,OACEH,UAAU,gDACVC,GAAG,gBAAeC,SAElBC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGiS,EAAKuE,WACxBlX,IAAI,WACJL,UAAU,mBAGdG,cAAA,OAAKH,UAAU,uCAAsCE,SACnDH,eAACqL,KAAI,CAAAlL,SAAA,CACHH,eAACk+B,KAAS,CAACj+B,UAAU,qBAAoBE,SAAA,CACvCC,cAAC+9B,KAAS,CAAChzB,QAAQ,OAAOlL,UAAU,WAAUE,SAAC,gBAG/CC,cAAC8R,KAAK,CACJ1E,KAAK,OACLjK,KAAK,OACLrD,GAAG,OACHD,UAAU,eACV0P,KAAK,IAAIpP,MAAO69B,cAAcvK,MAAM,KAAK,KAE3CzzB,cAAC+R,KAAY,CACX5O,KAAK,OACL6O,UAAU,MACVnS,UAAU,mBAGdD,eAACk+B,KAAS,CAACj+B,UAAU,qBAAoBE,SAAA,CACvCC,cAAC+9B,KAAS,CAAChzB,QAAQ,OAAOlL,UAAU,WAAUE,SAAC,kBAG/CH,eAACkS,KAAK,CAACmsB,GAAG,SAAS96B,KAAK,OAAOrD,GAAG,OAAMC,SAAA,CACtCC,cAAA,UAAQ2B,MAAM,GAAE5B,SAAC,oBAChB8S,EAAKtI,SACJsI,EAAKtI,QAAQD,KAAI,SAACwN,GAAM,OACtB9X,cAAA,UAAyB2B,MAAOmW,EAAOpV,IAAI3C,SACxC+X,EAAO1U,UADG0U,EAAOpV,WAK1B1C,cAAC+R,KAAY,CACX5O,KAAK,OACL6O,UAAU,MACVnS,UAAU,mBAGdD,eAACk+B,KAAS,CAACj+B,UAAU,0BAAyBE,SAAA,CAC5CC,cAAC+9B,KAAS,CAAChzB,QAAQ,QAAQlL,UAAU,WAAUE,SAAC,0CAGhDH,eAAA,OAAKC,UAAU,4CAA2CE,SAAA,CACxDC,cAACgD,IAAM,CAAC/C,IAAG,GAAAW,OAAKC,KAAQD,OAAG4B,EAAKU,OAAShD,IAAKsC,EAAKW,OACnDnD,cAAA,KAAGH,UAAU,oBAAmBE,SAAEyC,EAAKY,cAEzCxD,eAAA,OAAKC,UAAU,2CAA0CE,SAAA,CACvDC,cAAC8R,KAAK,CACJ1E,KAAK,QACLjK,KAAK,QACLrD,GAAG,YACHD,UAAU,mBACV8B,MAAM,QAER3B,cAAA,SACE+K,QAAQ,YACRlL,UAAU,6BAA4BE,SACvC,QAGDC,cAAC8R,KAAK,CACJ1E,KAAK,QACLjK,KAAK,QACLrD,GAAG,WACHD,UAAU,mBACV8B,MAAM,OAER3B,cAAA,SACE+K,QAAQ,WACRlL,UAAU,4BAA2BE,SACtC,UAIHC,cAAC+R,KAAY,CACX5O,KAAK,QACL6O,UAAU,MACVnS,UAAU,mBAIdG,cAACk+B,KAAM,CAAC9wB,KAAK,SAAStF,MAAM,UAAS/H,SAAC,yBCyCrCo+B,GAtMM,SAACh9B,GAAW,IAADi9B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxBj6B,GAAc,OAALxD,QAAK,IAALA,GAAY,QAAPi9B,EAALj9B,EAAO6G,aAAK,IAAAo2B,GAAQ,QAARC,EAAZD,EAAcn2B,cAAM,IAAAo2B,OAAf,EAALA,EAAsB15B,UAAe,OAALxD,QAAK,IAALA,OAAK,EAALA,EAAOwD,QAEtD8D,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BoK,EAAIlK,EAAA,GAAEiwB,EAAOjwB,EAAA,GACpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7B/L,EAAIgM,EAAA,GAAE4e,EAAO5e,EAAA,GACpBjJ,QAAQC,IAAI,oDAA2ChD,GACvD,IAAAuP,EAAwBrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAA7BilB,EAAIhlB,EAAA,GAAE6pB,EAAO7pB,EAAA,GAEpB5L,qBAAU,YACK,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAmzB,EAAA/pB,EAAA,OAAAtJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACe2M,GAAYlD,WAAW7O,GAAQ,KAAD,EAAAi4B,EAAA/yB,EAAAI,KAA7C4I,EAAI+pB,EAAV1yB,KACR0uB,EAAQ/lB,GAAM,wBAAAhJ,EAAAM,UAAAV,OACf,kBAHY,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAIbmM,GAE2B,eAAAhG,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAAivB,EAAAC,EAAA,OAAA1zB,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EAEpBmzB,GAAoB9D,sBAAsBz0B,GAAQ,KAAD,EAAAq4B,EAAA/uB,EAAAhE,KAD3CgzB,EAAYD,EAAlB9yB,KAERkmB,EAAQ6M,EAAa,IAAI,wBAAAhvB,EAAA9D,UAAA4D,OAC1B,kBAJ0B,OAAAhB,EAAA3C,MAAA,KAAAxD,YAAA,EAK3BwyB,KACC,IAEH,IAAMG,EAAU,eAAA7jB,EAAApM,YAAAC,IAAAC,MAAG,SAAAmM,IAAA,IAAA8jB,EAAAF,EAAA,OAAAhwB,IAAAK,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,OACM,OAAjB0vB,EAASO,EAAKt3B,IAAGkT,EAAA7L,KAAA,EACEmzB,GAAoB3D,WAAW/zB,EAAK9C,IAAK+2B,GAAQ,KAAD,EAC/C,OADpBF,EAAU3jB,EAAA3L,MACDhG,SACG66B,SAASC,cAAc,gBAC/BC,UAAUC,IAAI,UACtB/6B,IAAM0S,QAAQ,6BACdwZ,EAAQmJ,EAAWrvB,OACpB,wBAAA0L,EAAAzL,UAAAwL,OACF,yBAAAD,EAAAtL,MAAA,KAAAxD,YATe,GA0BhB,OAEEhH,cADA,CACA,OAAKC,UAAU,iBAAgBE,SAAA,CAC7BC,cAACM,EAAU,CAACE,UAAU,oBACrBgd,KAAE6N,QAAQ7lB,IAASxF,cAACyH,EAAY,IACjCzH,cAAA,OAAKH,UAAU,MAAKE,SAClBC,cAAA,OAAKH,UAAU,kBAAiBE,SAC7ByF,GACC5F,eAAA,OAAKC,UAAU,OAAME,SAAA,CACnBC,cAAA,OACEH,UAAU,+CACVC,GAAG,gBAAeC,SAElBC,cAAA,OACEC,IAAG,GAAAW,OAAKC,KAAQD,OAAGiS,EAAKuE,WACxBvX,UAAU,eACVK,IAAI,eAGRN,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACxBH,eAAA,MAAIC,UAAU,sDAAqDE,SAAA,CAAC,SAC3D,IAAII,KAAKqF,EAAKk4B,UAAU7lB,wBAEjC7X,cAAA,MAAIH,UAAU,cAAaE,SAAC,UAC5BH,eAAA,OAAKC,UAAU,iEAAgEE,SAAA,CAC7EC,cAACgD,IAAM,CACL9C,IAAS,OAAJsF,QAAI,IAAJA,GAAU,QAAN84B,EAAJ94B,EAAMw0B,YAAI,IAAAsE,OAAN,EAAJA,EAAYl7B,SACjBnD,IAC2B,SAArB,OAAJuF,QAAI,IAAJA,GAAU,QAAN+4B,EAAJ/4B,EAAMw0B,YAAI,IAAAuE,OAAN,EAAJA,EAAYn7B,UAAkB,GAAAxC,OACvBC,IAAQ,yBAAAD,OACRC,KAAQD,OAAO,OAAJ4E,QAAI,IAAJA,GAAU,QAANg5B,EAAJh5B,EAAMw0B,YAAI,IAAAwE,OAAN,EAAJA,EAAYt7B,OAEhCrD,UAAU,UACV6X,MAAO,CAAEL,MAAO,MAAOC,OAAQ,SAEP,SAArB,OAAJ9R,QAAI,IAAJA,GAAU,QAANi5B,EAAJj5B,EAAMw0B,YAAI,IAAAyE,OAAN,EAAJA,EAAYr7B,UACXpD,cAAA,MAAIH,UAAU,cAAaE,SAAC,oBAE5BC,cAAA,MAAIH,UAAU,cAAaE,SAAM,OAAJyF,QAAI,IAAJA,GAAU,QAANk5B,EAAJl5B,EAAMw0B,YAAI,IAAA0E,OAAN,EAAJA,EAAYt7B,cAG7CxD,eAAA,OAAKC,UAAU,gCAA+BE,SAAA,CAAC,mBAE7CH,eAAA,UAAQuD,KAAK,OAAOrD,GAAG,OAAOwN,SAzD3B,SAAChB,GAClB,IAAI4yB,EAAa,GACXzF,EAASntB,EAAE6F,OAAOxQ,MAEtBu9B,EADa,QAAXzF,EACW,CAAE/2B,IAAK,MAAOU,SAAU,MAAOF,MAAO,OAEtC2P,EAAKtI,QAAQ2P,MAAK,SAACpC,GAAM,OAAKA,EAAOpV,MAAQ+2B,KAE5DoF,EAAQK,GAEQJ,SAASC,cAAc,gBAC/BC,UAAUG,OAAO,WA8CwCp/B,SAAA,CACjDC,cAAA,UAAQ2B,MAAM,MAAK5B,SAAC,oBACnB8S,EAAKtI,SACJsI,EAAKtI,QAAQD,KAAI,SAACwN,GAAM,OACtB9X,cAAA,UAAyB2B,MAAOmW,EAAOpV,IAAI3C,SACxC+X,EAAO1U,UADG0U,EAAOpV,cAM5B1C,cAAA,OAAKH,UAAU,sCAAqCE,SAClDC,cAAA,UACEH,UAAU,yBACVsC,QAASo3B,EAAWx5B,SACrB,sBAKLC,cAAA,KAAGH,UAAU,6DAA4DE,SAAC,sBAG1EC,cAAA,MAAIH,UAAU,8BAA6BE,SACpC,OAAJyF,QAAI,IAAJA,GAAY,QAARm5B,EAAJn5B,EAAMm4B,cAAM,IAAAgB,OAAR,EAAJA,EAAcr0B,KAAI,SAACizB,GAClB,MAA0B,QAAtBA,EAAMM,YAENj+B,eAAA,MACEC,UAAU,qEAAoEE,SAAA,CAG7E,IACDH,eAAA,QAAMC,UAAU,4BAA2BE,SAAA,CAAC,SAE1CC,cAACgD,IAAM,CACL9C,IAAKq9B,EAAMn6B,SACXnD,IAAG,GAAAW,OAAKC,KAAQD,OAAG28B,EAAMr6B,OACzBrD,UAAU,SAEX09B,EAAMn6B,YAETpD,cAAA,QAAAD,SACG,IAAII,KAAKo9B,EAAM3lB,WAAWzO,eAAe,QAAS,CACjDi2B,IAAK,UACLl6B,MAAO,UACP+vB,KAAM,UACN7gB,KAAM,UACNC,OAAQ,gBAlBPkpB,EAAM76B,KAwBV,UAGX1C,cAAA,KAAGH,UAAU,6DAA4DE,SACvEC,cAAA,KAAAD,SAAG,wBAELC,cAAA,MAAIH,UAAU,8BAA6BE,SACpC,OAAJyF,QAAI,IAAJA,GAAY,QAARo5B,EAAJp5B,EAAMm4B,cAAM,IAAAiB,OAAR,EAAJA,EAAct0B,KAAI,SAACizB,GAClB,MAA0B,OAAtBA,EAAMM,YAENj+B,eAAA,MACEC,UAAU,qEAAoEE,SAAA,CAG9EH,eAAA,QAAMC,UAAU,6BAA4BE,SAAA,CAAC,SAE3CC,cAACgD,IAAM,CACL9C,IAAKq9B,EAAMn6B,SACXnD,IAAG,GAAAW,OAAKC,KAAQD,OAAG28B,EAAMr6B,OACzBrD,UAAU,SAEX09B,EAAMn6B,YAETpD,cAAA,QAAAD,SACG,IAAII,KAAKo9B,EAAM3lB,WAAWzO,eAAe,QAAS,CACjDi2B,IAAK,UACLl6B,MAAO,UACP+vB,KAAM,UACN7gB,KAAM,UACNC,OAAQ,gBAjBPkpB,EAAM76B,KAuBV,iBAOnB1C,cAACU,IAAI,CACHC,GAAE,iBAAAC,OAAmBiS,EAAKnQ,KAC1B7C,UAAU,mHACV0X,cAAY,UACZC,iBAAe,MAAKzX,SACrB,0BClDQs/B,GA9IW,SAACl+B,GACzB,IAAMm+B,EAASn+B,EAAM6G,MAAMC,OAAOtD,OAClC8D,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BjD,EAAImD,EAAA,GAAEynB,EAAOznB,EAAA,GAEpB4I,EAAwB7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAA7B/O,EAAIgP,EAAA,GAAE8G,EAAO9G,EAAA,GACpBuD,EAA0BrM,mBAAS,IAAGsM,EAAApM,YAAAmM,EAAA,GAA/BwoB,EAAKvoB,EAAA,GAAEuqB,EAAQvqB,EAAA,GA8BtB,OA5BA5L,qBAAU,YACO,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAuzB,EAAAx3B,EAAA,OAAA+D,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACamzB,GAAoB7D,qBAC/CiG,GACA,KAAD,EAAAtC,EAAAnzB,EAAAI,KAFazE,EAAIw3B,EAAV9yB,KAGRkmB,EAAQ5qB,GAAM,wBAAAqE,EAAAM,UAAAV,OACf,kBALc,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAMf44B,GAEe,eAAAzyB,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAA6C,EAAA,OAAArH,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACC2F,EAAYX,iBAAiB,KAAD,EAAvC6B,EAAE3C,EAAAhE,KACRqO,EAAQ1H,EAAG1G,MAAM,wBAAA+D,EAAA9D,UAAA4D,OAClB,kBAHc,OAAAhB,EAAA3C,MAAA,KAAAxD,YAAA,EAIf02B,KACC,IACHl0B,qBAAU,WACJ5D,GAAQA,EAAKm4B,QACfn4B,EAAKm4B,OAAO1T,SAAQ,SAACsT,GACfA,EAAMK,UAAYp7B,EAAKE,IAEzB68B,EAAShC,GAETgC,EAAS,CAAC,CAAE1B,YAAa,WAI9B,CAACr4B,EAAMhD,IAGR5C,eAAA,OAAKC,UAAU,YAAWE,SAAA,CACvByF,EAAKb,QAAU3E,cAACm+B,GAAY,CAACx5B,OAAQa,EAAKb,SAC1C44B,GACCv9B,cAACyR,KAAM,CACLE,cAAe,CAEb4rB,MAAOA,EAAQA,EAAMM,iBAAc/2B,GAErC0E,SAAU,SAACwF,GACT,IAAMzF,EAAS,GAKf,OAHKyF,EAAOusB,QACVhyB,EAAOgyB,MAAQ,sBAEVhyB,GAET4E,SAAQ,eAAAuF,EAAApM,YAAAC,IAAAC,MAAE,SAAAmM,EAAO3E,GAAM,IAAAwsB,EAAAiC,EAAA,OAAAl2B,IAAAK,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,OAOpB,OAJKyzB,EAAS,CACbK,YAAa7sB,EAAOusB,MACpBK,QAASp7B,EAAKE,IACdgD,OAAQF,EAAK9C,KACdkT,EAAA7L,KAAA,EAEsBmzB,GAAoB5D,oBACzCkE,GACA,KAAD,EAAAiC,EAAA7pB,EAAA3L,KAFWw1B,EAAJv1B,MAKNhG,IAAM0S,QAAQ,sCACdzV,EAAM6X,QAAQG,KAAK,kBAADvY,OAAmB4E,EAAKb,UAE1CT,IAAMF,MAAM,wBACb,wBAAA4R,EAAAzL,UAAAwL,OACF,gBAAAxH,GAAA,OAAAuH,EAAAtL,MAAA,KAAAxD,YAnBO,GAmBN7G,SAED,SAAAwW,GAAA,IAAGjE,EAAYiE,EAAZjE,aAAY,OACdtS,cAACiL,KAAI,CAAAlL,SACHC,cAAA,OAAKH,UAAU,MAAKE,SAClBC,cAAA,OAAKH,UAAU,gDAA+CE,SAC5DH,eAACk+B,KAAS,CAACj+B,UAAU,0BAAyBE,SAAA,CAC5CC,cAAC+9B,KAAS,CAAChzB,QAAQ,QAAQlL,UAAU,WAAUE,SAAC,0CAGhDH,eAAA,OAAKC,UAAU,mEAAkEE,SAAA,CAC/EC,cAACgD,IAAM,CACL/C,IAAG,GAAAW,OAAKC,KAAQD,OAAG4B,EAAKU,OACxBhD,IAAKsC,EAAKW,OAEZnD,cAAA,KAAGH,UAAU,oBAAmBE,SAAEyC,EAAKY,cAEzCxD,eAAA,OAAKC,UAAU,gCAA+BE,SAAA,CAC5CH,eAAA,OAAKC,UAAU,2CAA0CE,SAAA,CACvDC,cAAC8R,KAAK,CACJ1E,KAAK,QACLjK,KAAK,QACLrD,GAAG,YACHD,UAAU,mBACV8B,MAAM,QAER3B,cAAA,SACE+K,QAAQ,YACRlL,UAAU,6BAA4BE,SACvC,QAGDC,cAAC8R,KAAK,CACJ1E,KAAK,QACLjK,KAAK,QACLrD,GAAG,WACHD,UAAU,mBACV8B,MAAM,OAER3B,cAAA,SACE+K,QAAQ,WACRlL,UAAU,4BAA2BE,SACtC,UAIHC,cAAC+R,KAAY,CACX5O,KAAK,QACL6O,UAAU,MACVnS,UAAU,mBAGdG,cAACk+B,KAAM,CACLwB,QAAQ,UACR7/B,UAAU,4BACVuN,KAAK,SACLD,SAAUmF,EAAavS,SACxB,2B,UC5FrB4/B,KAAQC,WAAW,gBACnBD,KAAQE,SAASz3B,OAAOC,SAASC,SAAWF,OAAOC,SAASmrB,QA0J7CsM,OAxJf,WACE,IAAAr3B,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BjG,EAAImG,EAAA,GAAE2P,EAAO3P,EAAA,GACpB4I,EAA8B7I,mBAAS,IAAG8I,EAAA5I,YAAA2I,EAAA,GAAnCtO,EAAOuO,EAAA,GAAE0X,EAAU1X,EAAA,GAqB1B,OApBApI,qBAAU,YACO,eAAA7I,EAAA+I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAmH,EAAA,OAAArH,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACC2F,EAAYlB,iBAAiB,KAAD,EAAvCoC,EAAE/G,EAAAI,KACRqO,EAAQ1H,GAAI,wBAAA/G,EAAAM,UAAAV,OACb,kBAHc,OAAAlJ,EAAA6J,MAAA,KAAAxD,aAAA,EAIf02B,KACC,IAEHl0B,qBAAU,YACO,eAAA2D,EAAAzD,YAAAC,IAAAC,MAAG,SAAAuE,IAAA,IAAA6C,EAAA,OAAArH,IAAAK,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACC2F,EAAYX,iBAAiB,KAAD,EAAvC6B,EAAE3C,EAAAhE,KACRif,EAAWtY,EAAG1G,MAAM,wBAAA+D,EAAA9D,UAAA4D,OACrB,kBAHc,OAAAhB,EAAA3C,MAAA,KAAAxD,aAAA,EAIf02B,KACC,IAOD19B,eAACgD,IAAMC,SAAQ,CAAA9C,SAAA,CACbC,cAAC+/B,IAAc,IAEf//B,cAAA,UAAAD,SACEC,cAACggC,EAAU,CACTx9B,KAAMA,EACNS,QAASA,EACTg9B,WAAY,YACZC,iBAAkB,UAGtBlgC,cAAA,QAAMH,UAAU,OAAME,SACpBC,cAACmgC,IAAU,CAAC39B,KAAMA,EAAKzC,SACrBH,eAACwgC,IAAM,CAAArgC,SAAA,CACLC,cAACuS,GAAc,CAACpG,KAAK,qBAAqB6F,UAAW2G,KACrD3Y,cAACuS,GAAc,CACbpG,KAAK,4BACL6F,UAAWrB,GACXnO,KAAMA,IAERxC,cAACuS,GAAc,CACbpG,KAAK,gBACL6F,UAAW+W,GACXvmB,KAAMA,IAERxC,cAACuS,GAAc,CACbpG,KAAK,yBACL6F,UAAWquB,KAEbrgC,cAACuS,GAAc,CACbpG,KAAK,YACL6F,UAAWmG,GACX3V,KAAMA,EACN8c,EAAGrc,IAELjD,cAACuS,GAAc,CACbpG,KAAK,eACL3J,KAAMA,EACNwP,UAAWqiB,KAEbr0B,cAACuS,GAAc,CACbpG,KAAK,oBACL6F,UAAWmI,KAEbna,cAACuS,GAAc,CACbpG,KAAK,aACL6F,UAAW0J,GACXlZ,KAAMA,IAERxC,cAACuS,GAAc,CAACpG,KAAK,sBAAsB6F,UAAWwiB,KACtDx0B,cAACuS,GAAc,CAACpG,KAAK,iBAAiB6F,UAAWwe,KACjDxwB,cAACuS,GAAc,CAACpG,KAAK,qBAAqB6F,UAAW+hB,KACrD/zB,cAACuS,GAAc,CAACpG,KAAK,sBAAsB6F,UAAWoiB,KACtDp0B,cAACuS,GAAc,CAACpG,KAAK,sBAAsB6F,UAAWiP,KACtDjhB,cAACuS,GAAc,CACbpG,KAAK,0BACL6F,UAAW2c,KAEb3uB,cAACuS,GAAc,CACbpG,KAAK,mDACL6F,UAAW4c,KAEb5uB,cAACuS,GAAc,CACbpG,KAAK,+BACL6F,UAAWkjB,KAEbl1B,cAACuS,GAAc,CACbpG,KAAK,kCACL6F,UAAWgd,KAEbhvB,cAACuS,GAAc,CACbpG,KAAK,4BACL6F,UAAW8Z,KAEb9rB,cAACuS,GAAc,CAACpG,KAAK,qBAAqB6F,UAAW0iB,KACrD10B,cAACuS,GAAc,CACbpG,KAAK,0BACL6F,UAAW2iB,KAEb30B,cAACuS,GAAc,CACbpG,KAAK,iCACL6F,UAAW2mB,KAEb34B,cAACuS,GAAc,CACbpG,KAAK,qBACL6F,UAAWsuB,KAEbtgC,cAACuS,GAAc,CACbpG,KAAK,qCACL6F,UAAWwgB,KAEbxyB,cAACuS,GAAc,CACbpG,KAAK,oCACL6F,UAAWjK,IAEb/H,cAACuS,GAAc,CACbpG,KAAK,wBACL6F,UAAWqqB,KAEbr8B,cAACuS,GAAc,CACbpG,KAAK,wBACL6F,UAAWqrB,KAEbr9B,cAACuS,GAAc,CACbpG,KAAK,yBACL6F,UAAWmsB,KAEbn+B,cAACuS,GAAc,CACbpG,KAAK,6BACL6F,UAAWqtB,KAEbr/B,cAAC0S,IAAK,CAACvG,KAAK,QAAQ6F,UAAWyW,KAC/BzoB,cAAC0S,IAAK,CAACvG,KAAK,SAAS6F,UAAW6W,KAChC7oB,cAAC0S,IAAK,CAACvG,KAAK,UAAU6F,UAAWxB,KACjCxQ,cAAC0S,IAAK,CAACvG,KAAK,UAAU6F,UAAW7C,IACjCnP,cAAC0S,IAAK,CAACvG,KAAK,UAAU6F,UAAWwd,GAAQhtB,KAAMA,IAC/CxC,cAAC0S,IAAK,CAAC6tB,OAAK,EAACp0B,KAAK,IAAI6F,UAAWvR,EAAM+B,KAAMA,EAAM8c,EAAGrc,WAK5DjD,cAAA,UAAAD,SACEC,cAACL,EAAM,UCvLA6gC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpqB,MAAK,SAAA/V,GAAkD,IAA/CogC,EAAMpgC,EAANogC,OAAQC,EAAMrgC,EAANqgC,OAAQC,EAAMtgC,EAANsgC,OAAQC,EAAMvgC,EAANugC,OAAQC,EAAOxgC,EAAPwgC,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,4BCKdO,IAASxuB,OACPxS,cAAC4C,IAAMq+B,WAAU,CAAAlhC,SACfC,cAACmgC,IAAU,CAAApgC,SACTC,cAAC8/B,GAAG,QAGRhB,SAASoC,eAAe,SAM1BV,M","file":"static/js/main.b6aedbfe.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div\n      className=\"d-flex flex-wrap justify-content-around align-items-center\"\n      id=\"footer\"\n    >\n      <div className=\"logoImage \">\n        <img src={process.env.PUBLIC_URL + \"newIcon.jpeg\"} alt=\"logo\" />\n      </div>\n      <div className=\"copyrights \">\n        <p className=\"w-100\">\n          Poker-Underdog was created by Nadav Galili &copy;{\" \"}\n          {new Date().getFullYear()}\n        </p>\n        <a href=\"https://www.nadav-galili.com\">www.nadav-galili.com</a>\n      </div>\n\n      <div className=\"social-icons \">\n        {/* <p className=\"mb-2\">Contact me at:</p> */}\n        <ul className=\"d-flex justify-content-around mt-4 p-0 \">\n          <li>\n            <a href=\"https://www.facebook.com/nadav.galili\">\n              <img\n                src=\"https://img.icons8.com/doodle/50/000000/facebook-new.png\"\n                alt=\"facebook\"\n              />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://twitter.com/nadavgalili\">\n              <img\n                src=\"https://img.icons8.com/doodle/50/000000/twitter--v1.png\"\n                alt=\"twitter\"\n              />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.linkedin.com/in/nadav-galili/\">\n              <img\n                src=\"https://img.icons8.com/doodle/50/000000/linkedin--v2.png\"\n                alt=\"linkedin\"\n              />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://github.com/nadav-galili\">\n              <img\n                src=\"https://img.icons8.com/doodle/50/000000/github.png\"\n                alt=\"github\"\n              />\n            </a>\n          </li>\n\n          <li>\n            <a href=\"mailto:nadavg1000@gmail.com\">\n              <img\n                src=\"https://img.icons8.com/plasticine/50/000000/email.png\"\n                alt=\"email\"\n              />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst PageHeader = ({ titleText }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mt-4 mb-0\">\n        <h1 className=\"m-0 pb-2 pt-2\">{titleText}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default PageHeader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PageHeader from \"./common/pageHeader\";\nimport { apiImage } from \"../config.json\";\nconst Home = () => {\n  return (\n    <section>\n      <div className=\"container pt-3\">\n        <PageHeader titleText=\"Poker-Underdog\" />\n        <div className=\"row home\">\n          <div className=\"col-12 col-md-6 homeText\" id=\"homeText\">\n            <p className=\"mt-4\">\n              Poker Underdog is an interactive platform for poker groups playing\n              together home games.\n            </p>\n            <p className=\"mt-4\">\n              In this app you can keep scores for your games and display\n              statistics for the whole group or individual stats.\n            </p>\n            <p className=\"mt-4\">\n              You can open or join as many groups as you like and stay updated\n              on each group individually and all these features are FREE!\n            </p>\n\n            <p>\n              Join us now and <br />\n              <Link to=\"/signup\" id=\"create\">\n                Create A New Account For Free\n              </Link>\n            </p>\n            <p>Already registerd?</p>\n            <p>\n              <Link to=\"/my-teams\" id=\"join\">\n                Pick a team and start a new game...ALL IN!\n              </Link>\n            </p>\n          </div>\n          <div className=\"col-md-3 col-12\" id=\"homeImg\">\n            <div className=\"homeImg1\">\n              <img src={`${apiImage}images/flying_cards.jpg`} alt=\"poker\" />\n            </div>\n            <div className=\"homeImg2\">\n              <img\n                src=\"https://www.telegraph.co.uk/content/dam/betting/Better-Collective/8-Classic-xlarge.jpg\"\n                alt=\"poker-cards\"\n              />\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"col-md-3 col-12 text-primary \">\n        <div className=\"vh-25 wh-25\">\n              <img\n                src={ process.env.PUBLIC_URL + \"/demo/dash3.JPG\"}\n                alt=\"poker-cards\"\n              />\n            </div>\n            </div> */}\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { apiImage } from \"../config.json\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { GiPokerHand } from \"react-icons/gi\";\nimport { HiOutlineUserGroup } from \"react-icons/hi\";\nimport { ImStatsBars } from \"react-icons/im\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport { VscSignIn } from \"react-icons/vsc\";\nimport { FiUserPlus } from \"react-icons/fi\";\n\nclass SideNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false,\n    };\n  }\n\n  // This keeps your state in sync with the opening/closing of the menu\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\n  handleStateChange(state) {\n    this.setState({ menuOpen: state.isOpen });\n  }\n\n  // This can be used to close the menu, e.g. when a user clicks a menu item\n  closeMenu() {\n    this.setState({ menuOpen: false });\n  }\n\n  // This can be used to toggle the menu, e.g. when using a custom icon\n  // Tip: You probably want to hide either/both default icons if using a custom icon\n  // See https://github.com/negomi/react-burger-menu#custom-icons\n  toggleMenu() {\n    this.setState((state) => ({ menuOpen: !state.menuOpen }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu\n          isOpen={this.state.menuOpen}\n          onStateChange={(state) => this.handleStateChange(state)}\n        >\n          <Link\n            className=\"navbar-brand\"\n            to=\"/#\"\n            onClick={() => this.closeMenu()}\n          >\n            <img src={process.env.PUBLIC_URL + `newIcon.jpeg`} alt=\"logo\"></img>\n          </Link>\n          <NavLink\n            className=\"nav-link active d-flex\"\n            to=\"/about\"\n            onClick={() => this.closeMenu()}\n          >\n            <AiOutlineInfoCircle className=\"mt-2 me-2\" />\n            <p className=\"m-0\">About</p>\n          </NavLink>\n          <Link\n            onClick={() => this.closeMenu()}\n            className=\"nav-link d-flex\"\n            to=\"/demo\"\n          >\n            <GiPokerHand className=\"mt-2 me-2\" />\n            <p className=\"m-0\">Game Demo</p>\n          </Link>\n          {this.props.user && (\n            <NavLink\n              className=\"nav-item nav-link d-flex\"\n              onClick={() => this.closeMenu()}\n              to=\"/my-teams\"\n            >\n              <HiOutlineUserGroup className=\"mt-2 me-2\" />\n              <p className=\"m-0\">My Teams</p>\n            </NavLink>\n          )}\n\n          {this.props.user && (\n            <NavLink\n              className=\"nav-item nav-link d-flex\"\n              onClick={() => this.closeMenu()}\n              to={`/my-stats/${this.props.user._id}`}\n            >\n              <ImStatsBars className=\"mt-2 me-2\" />\n              <p className=\"m-0\">Personal Stats</p>\n            </NavLink>\n          )}\n          {!this.props.user && (\n            <React.Fragment>\n              <NavLink\n                className=\"nav-item nav-link d-flex\"\n                to=\"/signin\"\n                onClick={() => this.closeMenu()}\n              >\n                <VscSignIn className=\"mt-2 me-2\" />\n                <p className=\"m-0\">Sign-In</p>\n              </NavLink>\n              <NavLink\n                className=\"nav-item nav-link d-flex\"\n                to=\"/signup\"\n                onClick={() => this.closeMenu()}\n              >\n                <FiUserPlus className=\"mt-2 me-2\" />\n                <p className=\"m-0\">Sign-Up</p>\n              </NavLink>\n            </React.Fragment>\n          )}\n          {this.props.user && (\n            <React.Fragment>\n              <div className=\"userDetails nav-item nav-link d-flex pb-0\">\n                <Avatar\n                  src={`${apiImage}${this.props.details.image}`}\n                  alt={this.props.details.name}\n                />\n                <p className=\"ms-2 text-primary\">\n                  {this.props.details.nickName}\n                </p>\n              </div>\n              <NavLink\n                className=\"nav-item nav-link d-flex pt-0\"\n                to=\"/logout\"\n                onClick={() => this.closeMenu()}\n              >\n                <FiLogOut className=\"mt-2 me-2\" />\n                <p className=\"m-0\">Log out</p>\n              </NavLink>\n            </React.Fragment>\n          )}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default SideNavBar;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nfunction getJwt() {\n  return localStorage.getItem(\"token\");\n}\n\naxios.defaults.headers.common[\"x-auth-token\"] = getJwt();\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError = error.response && error.response.status >= 403;\n\n  if (expectedError) toast.error(\"An unexpected error occurrred.\");\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  patch: axios.patch,\n  delete: axios.delete,\n};\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function lastGame(teamId) {\n  return http.get(`${apiUrl}/games/last-game/${teamId}`);\n}\n\nexport function table(teamId) {\n  return http.get(`${apiUrl}/games/table/${teamId}`);\n}\n\nexport function personal(uId) {\n  return http.get(`${apiUrl}/games/personal/${uId}`);\n}\n\nexport function personalGames(uId) {\n  return http.get(`${apiUrl}/games/personalGames/${uId}`);\n}\n\nexport function monthsData(teamId, month) {\n  return http.get(`${apiUrl}/games/byMonths/${month}/${teamId}`);\n}\n\nexport function statsPerHour(teamId) {\n  return http.get(`${apiUrl}/games/statsPerHour/${teamId}`);\n}\nexport function successp(teamId) {\n  return http.get(`${apiUrl}/games/success-p/${teamId}`);\n}\nexport function cardsData(teamId, cardName) {\n  return http.get(`${apiUrl}/games/${cardName}/${teamId}`);\n}\n\nexport function profits(teamId) {\n  return http.get(`${apiUrl}/games/profits/top-ten/${teamId}`);\n}\n\nexport function agg_profits(teamId) {\n  return http.get(`${apiUrl}/games/agg_profits/top-ten/${teamId}`);\n}\n\nexport function newGame(game) {\n  return http.post(`${apiUrl}/games`, game);\n}\n\nexport function gameById(gameId) {\n  return http.get(`${apiUrl}/games/${gameId}`);\n}\n\nexport function updateGame(gameId, game) {\n  return http.put(`${apiUrl}/games/${gameId}`, game);\n}\nexport function inProgress(teamId) {\n  return http.get(`${apiUrl}/games/true/${teamId}`);\n}\n\nexport function totalCash(teamId) {\n  return http.get(`${apiUrl}/games/total/cash/${teamId}`);\n}\n\nexport function allGamesByTeam(teamId) {\n  return http.get(`${apiUrl}/games/teams/byTeamId/${teamId}`);\n}\n\nexport function totalGames(teamId) {\n  return http.get(`${apiUrl}/games/totalGames/${teamId}`);\n}\n\nexport function updateManager(id, manager) {\n  return http.put(`${apiUrl}/games/updateManager/${id}`, manager);\n}\n\nexport function fetchCashingDetails(gameId) {\n  return http.get(`${apiUrl}/games/cashingDetails/${gameId}`);\n}\n\nexport function previousRank(teamId) {\n  return http.get(`${apiUrl}/games/previousRank/${teamId}`);\n}\n\nexport function monthlyStats(teamId) {\n  return http.get(`${apiUrl}/games/monthlyStats/${teamId}`);\n}\n\nexport function monthlyByPlayer(teamId) {\n  return http.get(`${apiUrl}/games/monthlyByPlayer/${teamId}`);\n}\n\nexport function sideBets(teamId) {\n  return http.get(`${apiUrl}/games/sideBets/riko/${teamId}`);\n}\n\n//NEW SERVICES\n////////////////**************** */\n\nexport function getTotalStatsForTeam(\n  teamId,\n  dates = { startDate: null, endDate: null }\n) {\n  return http.get(\n    `${apiUrl}/games/newMainStats/totalStatsForTeam/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\n  );\n}\n\nexport function getCardStats(\n  teamId,\n  stats,\n  month = null,\n  dates = { startDate: null, endDate: null }\n) {\n  if (stats === \"profitsStats\") {\n    return http.get(\n      `${apiUrl}/games/newMainStats/profitsStats/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\n    );\n  }\n  if (stats === \"topTenProfits\") {\n    return http.get(\n      `${apiUrl}/games/newMainStats/topTenProfits/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\n    );\n  }\n  if (stats === \"head2head\") {\n    return http.get(\n      `${apiUrl}/h2h/newMainStats/head2head/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\n    );\n  }\n\n  if (stats === \"getHourlyStats\") {\n    return http.get(\n      `${apiUrl}/games/newMainStats/getHourlyStats/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\n    );\n  }\n\n  if (stats === \"getTopComebacks\") {\n    return http.get(\n      `${apiUrl}/games/newMainStats/getTopComebacks/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\n    );\n  }\n  if (stats === \"getWiningStreak\") {\n    return http.get(\n      `${apiUrl}/games/newMainStats/getWiningStreak/${teamId}?startDate=${dates.startDate}&endDate=${dates.endDate}`\n    );\n  }\n  if (stats === \"getThisMonthStats\") {\n    return http.get(\n      `${apiUrl}/games/newMainStats/getThisMonthStats/${teamId}/${month}`\n    );\n  }\n}\n\nexport function getStatsByMonth(\n  teamId,\n  dates = { startDate: null, endDate: null }\n) {\n  return http.get(\n    `${apiUrl}/games/newMainStats/getStatsByMonth/${teamId}?startDate=${dates?.startDate}&endDate=${dates?.endDate}`\n  );\n}\n\nexport function getAllMonthsByMonth(teamId) {\n  return http.get(`${apiUrl}/games/newMainStats/getAllMonthsByMonth/${teamId}`);\n}\n\nexport function getAllGamesByTeam(\n  teamId,\n  pagination,\n  page,\n  dates = { startDate: null, endDate: null }\n) {\n  return http.get(\n    `${apiUrl}/games/newMainStats/getAllGamesByTeam/${teamId}?pagination=${pagination}&page=${page}&startDate=${dates.startDate}&endDate=${dates.endDate}`\n  );\n}\n\nexport function GetSeasonYears(teamId) {\n  return http.get(`${apiUrl}/games/newMainStats/GetSeasonYear/${teamId}`);\n}\n\nexport default {\n  lastGame,\n  table,\n  personal,\n  monthsData,\n  cardsData,\n  successp,\n  profits,\n  newGame,\n  gameById,\n  updateGame,\n  inProgress,\n  totalCash,\n  personalGames,\n  allGamesByTeam,\n  totalGames,\n  agg_profits,\n  statsPerHour,\n  updateManager,\n  fetchCashingDetails,\n  previousRank,\n  monthlyStats,\n  monthlyByPlayer,\n  sideBets,\n  getTotalStatsForTeam,\n  getCardStats,\n  getAllMonthsByMonth,\n  getAllGamesByTeam,\n  GetSeasonYears,\n  getStatsByMonth,\n};\n","import React, { Component } from \"react\";\nimport { SpinnerDotted } from \"spinners-react\";\n\nconst ClockSpinner = () => {\n    return (\n        <div className=\"spinner my-5\">\n            <SpinnerDotted size={50} thickness={100} speed={100} color=\"rgba(0, 157, 255, 1)\" />\n        </div>\n    );\n};\n\nexport default ClockSpinner;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport { apiImage } from \"../../config.json\";\nimport PageHeader from \"../common/pageHeader\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\nimport ClockSpinner from \"./clockSpinner\";\n\nconst ByMonthsDashboard = (props) => {\n    const teamId = props.match.params.teamId;\n    // const [wholeYear, setWholeYear] = useState({});\n    const params = new URLSearchParams(window.location.pathname);\n    const seasonDates = params.get(\"seasonDates\");\n    console.log(\"🚀 ~ file: byMonthsDashboard.jsx:14 ~ ByMonthsDashboard ~ seasonDates\", seasonDates);\n    const [monthsStats, setMonthsStats] = useState([]);\n    const getMonthName = (monthNumber) => {\n        const date = new Date();\n        date.setMonth(monthNumber - 1);\n\n        return date.toLocaleString(\"en-US\", { month: \"long\" });\n    };\n\n    useEffect(() => {\n        async function getAllMonthsStats() {\n            const { data: allGamesByMonth } = await gameService.getStatsByMonth(teamId, seasonDates);\n            console.log(\"🚀 ~ file: byMonthsDashboard.jsx:12 ~ getAllMonthsStats ~ allGamesByMonth\", allGamesByMonth);\n            setMonthsStats(allGamesByMonth);\n        }\n        getAllMonthsStats();\n    }, []);\n\n    return (\n        <div className=\"container pb-5\">\n            <PageHeader titleText=\"Stats By Months\" />\n            {monthsStats.length > 0 && (\n                <div className=\"row\">\n                    {monthsStats.map((month) => (\n                        <div className=\"col-4 mt-4\">\n                            <div className=\"smallCardContainer\">\n                                <p className=\"text-center pt-2 bg-white newSmallCard\">{getMonthName(month._id)}</p>\n                                <div className=\"col-12 profitCard\">\n                                    <div className=\"Small\">\n                                        <div className=\"leaderImageSmall mx-auto\">\n                                            <img\n                                                src={`${apiImage}${month.players[0].image}`}\n                                                alt=\"leader\"\n                                                className=\"mt-1\"\n                                            />\n                                        </div>\n                                        <div className=\"leaderDetailSmall d-flex  flex-column text-center mt-1\">\n                                            <p className=\"leaderName\">1.{month.players[0].name}</p>\n                                            <p className=\"leaderProfit\">\n                                                Total Profit: <span>{month.players[0].totalProfit}</span>\n                                            </p>\n                                            <p className=\"\">Total Games: {month.players[0].totalGames}</p>\n                                            <p className=\"\">Avg Cashing: {month.players[0].roundedAvgCashing}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <p className=\"bg-white fullTable\">\n                                    <Link\n                                        className=\"linkToNewCard\"\n                                        to={`/newMainTable/newStatsCard/${teamId}/?month=${\n                                            month._id\n                                        }&stats=getThisMonthStats&cardTitle=${getMonthName(\n                                            month._id\n                                        )} Stats&data=totalProfit,totalGames,avgCashing&leaderData=Total Profit, Total Games, Avg Cashing&&headerData=TP,TG,AC`}\n                                    >\n                                        View Full Table <AiOutlineArrowRight />\n                                    </Link>\n                                </p>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            )}\n            {/* <PageHeader titleText=\"Stats By Months\" />\n            {wholeYear.length === 0 && <ClockSpinner />}\n            {wholeYear.length > 0 && wholeYear[0].length > 0 && (\n                <div className=\"row\">\n                    {wholeYear.map((month) => (\n                        <div className=\"col-4\">\n                            <div className=\"smallCardContainer\">\n                                <p className=\"text-center pt-2 bg-white newSmallCard\">\n                                    {new Date(month[0].monthPlayed).toLocaleDateString(\"en-US\", {\n                                        month: \"long\",\n                                    })}\n                                </p>\n                                <div className=\"col-12 profitCard\">\n                                    <div className=\"Smalll\">\n                                        <div className=\"leaderImageSmall mx-auto\">\n                                            <img\n                                                src={`${apiImage}${month[0]._id.image}`}\n                                                alt=\"leader\"\n                                                className=\"mt-1\"\n                                            />\n                                        </div>\n\n                                        <div className=\"leaderDetailSmall d-flex  flex-column text-center mt-1\">\n                                            <p className=\"leaderName\">1.{month[0]._id.name}</p>\n                                            <p className=\"leaderProfit\">\n                                                Total Profit: <span>{month[0].totalProfit}</span>\n                                            </p>\n                                            <p className=\"\">Total Games: {month[0].totalGames}</p>\n                                            <p className=\"\">Avg Cashing: {month[0].avgCashing}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <p className=\"bg-white fullTable\">\n                                    <Link\n                                        className=\"linkToNewCard\"\n                                        to={`/newMainTable/newStatsCard/${teamId}/?month=${\n                                            month[0].monthPlayed\n                                        }&stats=getThisMonthStats&cardTitle=${new Date(\n                                            month[0].monthPlayed\n                                        ).toLocaleDateString(\"en-US\", {\n                                            month: \"long\",\n                                        })} Stats&data=totalProfit,totalGames,avgCashing&leaderData=Total Profit, Total Games, Avg Cashing&&headerData=TP,TG,AC`}\n                                    >\n                                        View Full Table <AiOutlineArrowRight />\n                                    </Link>\n                                </p>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            )} */}\n        </div>\n    );\n};\n\nexport default ByMonthsDashboard;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group \">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\";\n\nconst tokenKey = \"token\";\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getUserDetails() {\n  return http.get(`${apiUrl}/users/me`);\n}\n\n//get other player stats for players-stats component\nexport function getPlayerDetails(uId) {\n  return http.get(`${apiUrl}/users/player-stats/${uId}`);\n}\n\nexport function editUserDetails(user) {\n  const uId = user._id;\n  // delete user._id;\n  return http.put(`${apiUrl}/users/${uId}`, user);\n}\n\nexport function editUserForUpdate(user, data) {\n  console.log(`sds`, user._id);\n  return http.put(`${apiUrl}/users/edit-user/${user._id}`, data);\n}\n\nexport async function login(email, password) {\n  const { data } = await http.post(`${apiUrl}/auth`, { email, password });\n  localStorage.setItem(tokenKey, data.token);\n}\n\nexport async function loginGoogle(email, token) {\n  const { data } = await http.post(`${apiUrl}/auth/google`, { email, token });\n  localStorage.setItem(tokenKey, data.token);\n}\n\nexport default {\n  login,\n  loginGoogle,\n  getCurrentUser,\n  logout,\n  getJwt,\n  getUserDetails,\n  editUserDetails,\n  editUserForUpdate,\n  getPlayerDetails,\n};\n","import React from \"react\";\nimport PageHeader from \"./common/pageHeader\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport userService from \"../services/userService\";\nimport { Redirect } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\n\nclass Signin extends Form {\n  state = {\n    data: { email: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    email: Joi.string().required().email().label(\"Email\"),\n    password: Joi.string().required().min(6).label(\"Password\"),\n  };\n\n  handleLogin = async (googleData) => {\n    try {\n      await userService.loginGoogle(\n        googleData.profileObj.email,\n        googleData.tokenId\n      );\n\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        this.setState({ errors: { email: ex.response.data } });\n      }\n    }\n  };\n\n  doSubmit = async () => {\n    const { email, password } = this.state.data;\n    try {\n      await userService.login(email, password);\n      //let details = await userService.getCurrentUser();\n\n      window.location = \"/\";\n\n      // setTimeout(() => {\n      //   this.props.history.replace(`/#/my-stats/${details._id}`);\n      // }, 5000);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        this.setState({ errors: { email: ex.response.data } });\n      }\n    }\n  };\n\n  render() {\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <PageHeader titleText=\"Sign-In\" />\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p className=\"text-primary\">\n              You can sign-in here with your account!\n            </p>\n          </div>\n        </div>\n        <GoogleLogin\n          clientId=\"310842465793-hdu8fm8luvho3qds0ce4chg9c3696d4d.apps.googleusercontent.com\"\n          onSuccess={this.handleLogin}\n        />\n        <div className=\"row\">\n          <div className=\"col-lg-3\">\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\n              {this.renderInput(\"email\", \"Email\", \"email\")}\n              {this.renderInput(\"password\", \"Password\", \"password\")}\n              {this.renderButton(\"Sign-In\")}\n            </form>\n            <p className=\"selectP mt-5\">\n              *you can try a demo account-\n              <br />\n              Email:test@test.com\n              <br />\n              Password:123456\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","import { Component } from \"react\";\nimport userService from \"../services/userService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    userService.logout();\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React, { useState, useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport PageHeader from \"../common/pageHeader\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport userService from \"../../services/userService\";\nimport { apiImage } from \"../../config.json\";\nimport { Link } from \"react-router-dom\";\n\nconst validationSchema = Yup.object({\n  nickName: Yup.string().required(\"Required\"),\n  image: Yup.string(),\n});\n\nconst EditUser = () => {\n  const [me, setMe] = useState({});\n  useEffect(() => {\n    const meData = async () => {\n      let getUser = await userService.getUserDetails();\n      getUser = getUser.data;\n      setMe(getUser);\n    };\n    meData();\n  }, []);\n\n  const onSubmit = async (values, onSubmitProps) => {\n    onSubmitProps.setSubmitting(false);\n    let data = new FormData();\n    data.append(\"_id\", values._id);\n    data.append(\"nickName\", values.nickName);\n\n    if (values.image) {\n      data.append(\"image\", values.image);\n    }\n\n    try {\n      await userService.editUserForUpdate(values, data);\n      window.location = `#/my-stats/${values._id}`;\n      toast(\"The user has been updated!\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        setErrors({ email: \"Something went wrong\" });\n        console.error(ex);\n      }\n    }\n  };\n\n  const savedValues = {\n    nickName: me.nickName,\n    image: me.image,\n    _id: me._id,\n  };\n\n  const [errors, setErrors] = useState({ nickName: \"\", image: \"\" });\n\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"Edit User\" />\n      <Formik\n        enableReinitialize\n        initialValues={savedValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        validateOnMount\n      >\n        {(formik) => {\n          return (\n            <div className=\"row mt-2\">\n              <div className=\"col-10 col-lg-4\">\n                <Form>\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\n                    <label htmlFor=\"Nick Name\">Nick Name</label>\n                    <Field type=\"text\" id=\"nickName\" name=\"nickName\" />\n                    <ErrorMessage\n                      name=\"nickName\"\n                      component=\"div\"\n                      className=\"error\"\n                    />\n                  </div>\n                  <div className=\"oldImage w-25 mb-2 \">\n                    <img\n                      src={`${apiImage}${savedValues.image}`}\n                      alt=\"user\"\n                      className=\"w-100 h-100\"\n                    />\n                  </div>\n                  <div className=\"form-control d-flex flex-column bg-primary mb-3\">\n                    <label htmlFor=\"image\">Change Image</label>\n                    <input\n                      className=\"row mb-4 inputFile\"\n                      type=\"file\"\n                      name=\"image\"\n                      onChange={(event) => {\n                        formik.setFieldValue(\"image\", event.target.files[0]);\n                      }}\n                    ></input>\n                    <span className=\"error\">{errors.image}</span>\n                  </div>\n                  <div className=\"buttons d-flex justify-content-between\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n                      disabled={!formik.isValid || formik.isSubmitting}\n                    >\n                      Update Details\n                    </button>\n                    <Link\n                      type=\"button\"\n                      className=\"btn btn-secondary  m-0\"\n                      to={`/my-stats/${me._id}`}\n                    >\n                      Not right now\n                    </Link>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditUser;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport userService from \"../../services/userService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  const currentUser = userService.getCurrentUser();\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!currentUser)\n          return (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: { from: props.location },\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function getTeam(teamId) {\n  return http.get(`${apiUrl}/teams/${teamId}`);\n}\n\n//\nexport function getTeamByNumber(teamNumber) {\n  return http.get(`${apiUrl}/teams/numbers/${teamNumber}`);\n}\n\nexport function editTeam(team) {\n  const teamId = team._id;\n  delete team._id;\n  return http.put(`${apiUrl}/teams/${teamId}`, team);\n}\n\nexport function createTeam(team) {\n  return http.post(`${apiUrl}/teams`, team);\n}\n\nexport function getMyTeam() {\n  return http.get(`${apiUrl}/teams/my-teams`);\n}\n// export function getTeam() {\n//   return http.get(`${apiUrl}/teams/my-teams`);\n// }\n\nexport function deleteTeam(teamId) {\n  return http.delete(`${apiUrl}/teams/${teamId}`);\n}\n\nexport function removePlayerFromTeam(teamNumber, playerId, teamId) {\n  return http.delete(\n    `${apiUrl}/teams/removePlayerFromTeam/${teamNumber}/${playerId}`,\n    { data: { teamId: teamId } }\n  );\n}\n\nexport function getTeamForSideBets(teamId, userId) {\n  return http.get(`${apiUrl}/teams/teamForSideBets/${teamId}/${userId}`);\n}\n\n///NEW SERVICES\n// ////**************************** */\n\nexport function newGetTeam(teamId) {\n  return http.get(`${apiUrl}/teams/newGetTeam/${teamId}`);\n}\n\nexport default {\n  createTeam,\n  getMyTeam,\n  getTeam,\n  editTeam,\n  deleteTeam,\n  getTeamByNumber,\n  removePlayerFromTeam,\n  getTeamForSideBets,\n  newGetTeam,\n};\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport PageHeader from \"../common/pageHeader\";\n\nconst CashingDetails = ({ gameId, updated }) => {\n  const [cashing, setCashing] = useState([]);\n  useEffect(() => {\n    const getCashingDetails = async () => {\n      const fetchDetails = await gameService.fetchCashingDetails(gameId);\n      setCashing(fetchDetails.data);\n    };\n    getCashingDetails();\n  }, [updated.cashing_details.length]);\n\n  return (\n    <div className=\"col-10 col-lg-6 p-2\">\n      <PageHeader titleText=\"Cashing Details\" />\n      {cashing.length > 0 && (\n        <ul className=\" cashingDetails bg-white p-0\">\n          {cashing.map((cash) => (\n            <li className=\"d-flex\" id=\"cashingList\" key={cash.time}>\n              <p id=\"cashingName\">{cash.playerName}</p>\n              <p id=\"cashingAmmount\">{cash.playerCashing}</p>\n              <p id=\"cashingTime\">\n                {new Date(cash.time).toLocaleString(\"en-US\", {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  second: \"2-digit\",\n                  hour12: false,\n                })}\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {cashing.length < 1 && <p className=\"text-primary\">No Cashing Yet</p>}\n    </div>\n  );\n};\n\nexport default CashingDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"../config.json\";\nimport { GiCardKingClubs } from \"react-icons/gi\";\nimport { IoMdStats } from \"react-icons/io\";\nimport { MdDateRange } from \"react-icons/md\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport gameService from \"../services/gameService\";\nimport teamService from \"../services/teamService\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { toast } from \"react-toastify\";\nimport Swal from \"sweetalert2\";\nimport CashingDetails from \"./games/cashingDetails\";\n\nconst Team = ({ team, removeTeam, teamid, user, teamNumber }) => {\n  const [livePlayers, setLivePlayers] = useState([]);\n  const [liveGame, setliveGame] = useState({});\n  const [buttons, setButtons] = useState(false);\n  let captain = team.players.filter((e) => e._id === team.user_id);\n\n  useEffect(() => {\n    const getLiveGame = async () => {\n      let game = await gameService.inProgress(teamid);\n      game = await game.data[0];\n      setliveGame(game);\n      game ? setLivePlayers(game.players) : setLivePlayers([]);\n      if (game && (game.isOpen || game.isOpen == null))\n        game = game.players.sort((a, b) => b.cashing - a.cashing);\n    };\n\n    getLiveGame();\n  }, []);\n\n  const displayRemoveButtons = () => {\n    setButtons(!buttons);\n  };\n\n  const removePlayerFromTeam = async (teamNumber, playerId, teamId) => {\n    Swal.fire({\n      title: \"Are you sure you want to remove this player from team?\",\n      text: \"you wont be able to cancel\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        await teamService.removePlayerFromTeam(teamNumber, playerId, teamid);\n        window.location.reload();\n        toast.success(\"Player removed from team:)\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    });\n  };\n  return (\n    <div className=\"col-12 col-md-6 col-lg-4 mt-3 text-center mb-4\">\n      <div className=\"card\">\n        <img\n          className=\"card-img-top\"\n          src={`${apiImage}${team.teamImage}`}\n          alt={team.name}\n          width={150}\n          height={150}\n        />\n        <div className=\"card-body pt-0\">\n          <h3 className=\"text-primary\">{team.name}</h3>\n          <p className=\"card-text info\">\n            <strong>\n              <u>Team Number:</u>\n              <span className=\"text-primary\">{team.teamNumber}</span>\n            </strong>\n            <br />\n            <span id=\"share\">\n              *Share this number with your friends and let them join your team\n            </span>\n          </p>\n          <p className=\"mb-2\">\n            <b>\n              <u className=\"text-dark \">Team Manager:</u>\n              <span className=\"text-primary captain \">\n                {captain[0].nickName}\n              </span>\n            </b>\n          </p>\n\n          {liveGame && (\n            <div className=\"liveGames \">\n              <Link\n                className=\"\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title=\"Only Team Manger can edit games details\"\n                to={`/games/${liveGame._id}`}\n                takecontrol=\"yes\"\n              >\n                Take Control Of Game\n                <i className=\"ps-2 fas fa-angle-double-right\"></i>\n              </Link>\n              <br></br>\n              <span className=\"display-6 \">\n                <u>Live Game</u>\n              </span>\n              <div className=\"col-12 border border-primary my-2\" id=\"card-top\">\n                <ol className=\"statsList m-0\">\n                  <li\n                    id=\"lastGameHero\"\n                    className=\"statsHero d-flex flex-column h-50\"\n                    style={{\n                      backgroundImage: `url(${\n                        process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                      })`,\n                    }}\n                  >\n                    <p>Game No. {liveGame._id}</p>\n                    <p>\n                      {`${new Date(liveGame.createdAt).toLocaleDateString(\n                        \"en-GB\",\n                        { hour: \"2-digit\", minute: \"2-digit\", hour12: false }\n                      )}`}\n                    </p>\n                    <div\n                      className=\"stats d-flex w-75 justify-content-between\"\n                      id=\"lGame\"\n                    >\n                      <p>Player</p>\n                      <p>Name</p>\n                      <p>Cashing</p>\n                    </div>\n                  </li>\n                  {livePlayers &&\n                    livePlayers.length > 1 &&\n                    livePlayers.map((player) => (\n                      <li className=\"statsRow\" key={player.id} id=\"liveGameRow\">\n                        <div className=\"rowImage ms-5\">\n                          <img\n                            src={\n                              livePlayers.length > 0\n                                ? `${apiImage}${player.image}`\n                                : \"\"\n                            }\n                            alt=\"player list row\"\n                          />\n                        </div>\n                        <div className=\"rowName ms-4\" id=\"lGameName\">\n                          {livePlayers.length > 1 ? player.name : \"\"}\n                        </div>\n                        <div className=\"rowCashing\">\n                          {livePlayers.length > 1 ? player.cashing : \"\"}\n                        </div>\n                      </li>\n                    ))}\n                </ol>\n                {liveGame._id && (\n                  <CashingDetails gameId={liveGame._id} updated={liveGame} />\n                )}\n              </div>\n            </div>\n          )}\n          <div className=\"d-flex flex-column col-10 m-auto justify-content-around\">\n            <Link\n              className=\"button-73 py-2 mb-2\"\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              to={`/scheduleGame/${team._id}`}\n            >\n              Schedule A New Game\n              <MdDateRange className=\"ms-2\" />\n              <i className=\"ps-2 fas fa-angle-double-right\"></i>\n            </Link>\n            <Link\n              className=\"button-72 py-2\"\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              to={`/newMainTable/${team._id}`}\n            >\n              Team Stats\n              <IoMdStats className=\"ms-2\" />\n              <i className=\"ps-2 fas fa-angle-double-right\"></i>\n            </Link>\n            {captain[0]._id === user._id && (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-danger mt-2\"\n                onClick={() => displayRemoveButtons()}\n              >\n                <AiFillEdit color=\"red\" className=\"\" />\n                Remove Players From Team\n              </button>\n            )}\n          </div>\n\n          <div className=\"card-text \">\n            <strong>\n              <u>Players:</u>\n            </strong>\n            <ul className=\"row  ps-0\" id=\"playersList\">\n              {team.players.map((player) => (\n                <li\n                  key={player._id}\n                  className=\"col-3 col-lg-3 teams \"\n                  id=\"playerAvatar\"\n                >\n                  <p id=\"playerPersonalInfo\">{player.nickName}</p>\n\n                  <Avatar\n                    src={`${apiImage}${player.image}`}\n                    alt={player.name}\n                  />\n\n                  {captain[0]._id === user._id &&\n                    buttons &&\n                    player._id !== captain[0]._id && (\n                      <p\n                        className=\"text-danger  text-wrap mb-2\"\n                        onClick={() =>\n                          removePlayerFromTeam(teamNumber, player._id, teamid)\n                        }\n                      >\n                        <i className=\"fas fa-trash-alt \"></i>\n                        remove player from team\n                      </p>\n                    )}\n                </li>\n              ))}\n            </ul>\n          </div>\n          {!liveGame && (\n            <Link\n              className=\"mb-2 button-71 w-75 py-2\"\n              to={`/new-game/${team._id}`}\n            >\n              Start a new game\n              <GiCardKingClubs className=\"ms-2\" />\n              <i className=\"ps-2 fas fa-angle-double-right\"></i>\n            </Link>\n          )}\n\n          <p className=\"card-text border-top pt-2\">\n            Created At:{new Date(team.createdAt).toLocaleDateString(\"en-GB\")}\n          </p>\n          <p className=\"text-primary\">\n            <Link onClick={removeTeam} to=\"/my-teams\" className=\"text-danger\">\n              <i className=\"fas fa-trash-alt me-2\"></i>\n              Delete Team\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Team;\n","import React, { useState, useEffect } from \"react\";\nimport PageHeader from \"./common/pageHeader\";\nimport teamService from \"../services/teamService\";\nimport userService from \"../services/userService\";\nimport Team from \"./team\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\nimport { apiImage } from \"../config.json\";\n\nconst MyTeams = () => {\n  const [teams, setTeams] = useState([]);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const fetchTeams = async () => {\n      const { data } = await teamService.getMyTeam();\n      setTeams(data);\n      const me = await userService.getCurrentUser();\n      setUser(me);\n    };\n    fetchTeams();\n  }, []);\n\n  let removeTeam = (teamid) => {\n    let chosenTeam = teams.filter((team) => team._id === teamid);\n\n    if (user._id !== chosenTeam[0].user_id) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Only team manager can delete a team\",\n      });\n    } else {\n      Swal.fire({\n        title: \"Are you sure you want to delete this team?\",\n        text: \"you wont be able to cancel\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          let myTeams = teams.filter((team) => team._id !== teamid);\n          teamService.deleteTeam(teamid);\n          setTeams(myTeams);\n          toast(\"This team was deleted succesfully\");\n        }\n      });\n    }\n  };\n  return (\n    <div className=\"container about\">\n      <PageHeader titleText=\"My Teams Page\" />\n\n      <div className=\"myTeamsContainer col-6 my-3\">\n        <img src={apiImage + \"images/teamsPage.png\"} alt=\"teams icon\" />\n      </div>\n\n      <div className=\"row\">\n        <div className=\" d-flex justify-content-around\">\n          <Link className=\"btn btn-primary\" to=\"/create-team\">\n            +Add A New Team\n          </Link>\n          <Link className=\"btn btn-primary\" to=\"/join-team\">\n            Join An Existing Team\n          </Link>\n        </div>\n        <p className=\"text-white teamText mt-2 text-center\">\n          You can try a test team. enter \"Join an existing team\" and try out\n        </p>\n        <p className=\"mt-3 team-list text-center\">\n          {teams.length > 0 && <span>Your teams are in the list below:</span>}\n        </p>\n      </div>\n      <div className=\"row\">\n        {teams.length > 0 &&\n          teams.map((team) => (\n            <Team\n              key={team._id}\n              team={team}\n              teamid={team._id}\n              user={user}\n              teamNumber={team.teamNumber}\n              removeTeam={() => removeTeam(team._id)}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MyTeams;\n","import React from \"react\";\nimport PageHeader from \"./common/pageHeader\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport userService from \"../services/userService\";\nimport { toast } from \"react-toastify\";\n\nclass EditPlayer extends Form {\n  state = {\n    data: {\n      name: \"\",\n      userImage: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    name: Joi.string().min(2).max(255).required(),\n    userImage: Joi.string().min(11).max(1024).uri().allow(\"\"),\n  };\n  async componentDidMount() {\n    const { data } = await userService.getUserDetails();\n\n    this.setState({ data: this.mapToViewModel(data) });\n  }\n\n  mapToViewModel(player) {\n    return {\n      _id: player._id,\n      name: player.name,\n      userImage: player.userImage,\n    };\n  }\n\n  doSubmit = async () => {\n    const { data } = this.state;\n\n    await userService.editUserDetails(data);\n    toast(\"User is updated\");\n    this.props.history.replace(`/my-stats/${data._id}`);\n  };\n\n  handleCancel = () => {\n    this.props.history.push(\"/my-teams\");\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <PageHeader titleText=\"Edit Player Form\" />\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p>Edit your player details here</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\n              {this.renderInput(\"name\", \"Player Name\")}\n              {/* {this.renderInput(\"players\", \"Players\")} */}\n              {this.renderInput(\"userImage\", \"Player Image\")}\n              {this.renderButton(\"Update Player\")}\n              <button\n                className=\"btn-lg btn-secondary ms-4 \"\n                onClick={this.handleCancel}\n              >\n                Cancel\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditPlayer;\n","import React from \"react\";\nimport PageHeader from \"./common/pageHeader\";\n\nconst editTeam = () => {\n  return ( \n    <div className=\"container\">\n      <PageHeader titleText=\"Edit Games\"/>\n          <iframe title=\"edit games\" src=\"https://nadav.retool.com/apps/REST%20API%20Admin%20Panel\" width=\"100%\" height=\"800px\"></iframe>\n    </div>\n   );\n}\n \nexport default editTeam;\n\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function newH2h(game) {\n  return http.post(`${apiUrl}/h2h`, game);\n}\n\nexport function getByGameId(gameId) {\n  return http.get(`${apiUrl}/h2h/${gameId}`);\n}\n\nexport function updateH2h(gameId) {\n  return http.put(`${apiUrl}/h2h/updateh2h/${gameId}`);\n}\n\nexport function getPointsByPlayer(pId) {\n  return http.get(`${apiUrl}/h2h/byPlayer/${pId}`);\n}\n\nexport function getPointsByTeam(teamId) {\n  return http.get(`${apiUrl}/h2h/byTeam/${teamId}`);\n}\n\nexport function teamAllGames(teamId) {\n  return http.get(`${apiUrl}/h2h/teamAllGames/${teamId}`);\n}\n\nexport function addPlayersH2h(gameId, game) {\n  return http.put(`${apiUrl}/h2h/addPlayersH2h/${gameId}`, game);\n}\nexport default {\n  newH2h,\n  getByGameId,\n  updateH2h,\n  getPointsByPlayer,\n  getPointsByTeam,\n  teamAllGames,\n  addPlayersH2h,\n};\n","import React from \"react\";\nimport { apiImage } from \"../config.json\";\n\nconst Player = ({ player, selectPlayers, selected }) => {\n  return (\n    <div className=\"col-md-6 col-lg-2 col-3 \" id=\"players_select\">\n      <div className=\"card align-items-center playersCard\">\n        <div className=\"card-head d-flex justify-content-center\">\n          <img\n            className=\"m-2 playerImage\"\n            width=\"1em\"\n            height=\"1em\"\n            src={`${apiImage}${player.image}`}\n            alt=\"\"\n          />\n        </div>\n\n        <div\n          className={\n            selected.find((e) => player._id === e.id)\n              ? \"card-body selected d-flex flex-column p-0 mw-100\"\n              : \"card-body d-flex flex-column p-0 \"\n          }\n        >\n          <h5\n            className=\"card-title d-flex m-0 justify-content-center\"\n            id=\"selectTitle\"\n          >\n            {player.nickName}\n          </h5>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary col-8 d-flex w-100 justify-content-center\"\n          id=\"selectButton\"\n          onClick={selectPlayers}\n        >\n          +Add/Remove player\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useState, useEffect } from \"react\";\nimport PageHeader from \"./common/pageHeader\";\nimport teamService from \"../services/teamService\";\nimport gameService from \"../services/gameService\";\nimport userService from \"../services/userService\";\nimport h2hService from \"../services/h2hService\";\nimport Player from \"./player\";\nimport { apiImage } from \"../config.json\";\n\nconst SelectPlayers = (props) => {\n  const [data, setData] = useState([props.match.params.teamId]);\n  const [selected, setSelected] = useState([]);\n  const [started, setStarted] = useState(\"\");\n  const [me, setMe] = useState({});\n\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      if (data.length > 0) {\n        const players = await teamService.getTeam(data);\n        const game = await gameService.inProgress(props.match.params.teamId);\n        const getGameManager = await userService.getUserDetails();\n        me.id = getGameManager.data._id;\n        me.name = getGameManager.data.nickName;\n        setMe(me);\n        if (game.data.length > 0) {\n          setSelected(game.data[0].players);\n          setStarted(game.data[0]);\n        }\n\n        setData(players.data);\n      }\n    };\n    fetchPlayers();\n  }, [props.match.params.teamId, data]);\n\n  function selectPlayers(playerId, name, image) {\n    const push = new Audio(process.env.PUBLIC_URL + `sounds/push.mp3`);\n    push.play();\n    const player = {\n      id: playerId,\n      name: name,\n      image: image,\n      cashing: 0,\n      cashInHand: 0,\n      numOfCashing: 0,\n      profit: 0,\n    };\n    selected.find((e) => player.id === e.id)\n      ? setSelected(selected.filter((item) => item.id !== player.id))\n      : setSelected([...selected, player]);\n  }\n\n  async function shuffle() {\n    const shuffle = new Audio(process.env.PUBLIC_URL + \"sounds/Shuffle.mp3\");\n    shuffle.play();\n    if (!started) {\n      let game = {\n        isOpen: true,\n        players: selected,\n        team_name: data.name,\n        team_id: data._id,\n        game_manager: me,\n        cashing_details: [],\n      };\n      await gameService.newGame(game).then((res) => {\n        let newGame = { ...res.data };\n        newGame.gameId = newGame._id;\n        delete newGame._id;\n        h2hService.newH2h(newGame);\n        props.history.push(`/games/${res.data._id}`);\n      });\n    } else {\n      let game = {\n        players: selected,\n        team_name: started.team_name,\n        team_id: started.team_id,\n        gameId: started._id,\n        cashing_details: started.cashing_details,\n      };\n      await gameService.updateGame(started._id, game).then((res) => {\n        res.data.gameId = res.data._id;\n        // h2hService.newH2h(res.data);\n        h2hService.addPlayersH2h(started._id, game);\n        props.history.push(`/games/${res.data._id}`);\n      });\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"Start A New Game\" />\n      <h2 className=\"teamName\">{data.name}</h2>\n      <h3>Team Number:{data.teamNumber}</h3>\n      <img\n        src={`${apiImage}${data.teamImage}`}\n        alt={data.name}\n        width=\"120\"\n        height=\"120\"\n      ></img>\n      <h3 className=\"p-2 text-primary\">Select players for current game</h3>\n      <div className=\"row container\">\n        {data.players &&\n          data.players.map((player) => (\n            <Player\n              teamName={data.name}\n              selected={selected}\n              player={player}\n              key={player._id}\n              selectPlayers={() => {\n                selectPlayers(player._id, player.nickName, player.image);\n              }}\n            />\n          ))}\n      </div>\n      {selected.length > 1 && (\n        <button className=\"btn btn-primary btn-lg m-3\" onClick={shuffle}>\n          Continue to game\n        </button>\n      )}\n      {selected.length <= 1 && (\n        <p className=\"selectP\">*Please select at least 2 players</p>\n      )}\n    </div>\n  );\n};\n\nexport default SelectPlayers;\n","import React from \"react\";\nimport PageHeader from \"./common/pageHeader\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport teamService from \"../services/teamService\";\nimport userService from \"../services/userService\";\nimport { Link } from \"react-router-dom\";\n\nclass JoinTeam extends Form {\n  state = {\n    data: { teamNumber: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    teamNumber: Joi.string().required().min(6).max(6).label(\"Team Number\"),\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n\n    try {\n      const team = await teamService.getTeamByNumber(data.teamNumber);\n      //get user details from token\n      let user = await userService.getCurrentUser();\n      //get full user details\n      user = await userService.getUserDetails();\n      //add the team id to the user in db\n      user.data.teams.push(team.data._id);\n      await userService.editUserDetails(user.data);\n      delete user.data.password;\n      //add the user details to team in db\n      await team.data.players.push(user.data);\n      await teamService.editTeam(team.data);\n      this.props.history.push(\"/my-teams\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        this.setState({\n          errors: { teamNumber: \"No team was found with this team number\" },\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <PageHeader titleText=\"Join an existing team\" />\n        <div className=\"row\">\n          <div className=\"col-12\" id=\"joinText\">\n            <p>\n              <strong>Please enter team number</strong> <br />\n              *Ask team members for the number\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-8\">\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"PUT\">\n              {this.renderInput(\"teamNumber\", \"Team Number\")}\n              <div className=\"d-flex justify-content-between\">\n                {this.renderButton(\"Join Team\")}\n                <Link\n                  type=\"button\"\n                  className=\"btn btn-secondary joinB\"\n                  to=\"/my-teams\"\n                >\n                  Not right now\n                </Link>\n              </div>\n            </form>\n            <p className=\"mt-2 join\">*To join a demo team, enter:976991</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JoinTeam;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function createSideBet(sideBet) {\n  return http.post(`${apiUrl}/sideBets`, sideBet);\n}\n\nexport function getSidebetsForMainTable(teamId) {\n  return http.get(`${apiUrl}/sideBets/getsidebetsForMainTable/${teamId}`);\n}\n\nexport function gotOfferedSidebet(userId) {\n  return http.get(`${apiUrl}/sideBets/gotOfferedSidebet/${userId}`);\n}\n\nexport function acceptSideBet(sideBetId) {\n  return http.put(`${apiUrl}/sideBets/acceptSideBet/${sideBetId}`);\n}\n\nexport function dismissSideBet(sideBetId) {\n  return http.put(`${apiUrl}/sideBets/dismissSideBet/${sideBetId}`);\n}\n\nexport function getAllApprovedSideBets(teamId) {\n  return http.get(`${apiUrl}/sideBets/getAllApprovedSideBets/${teamId}`);\n}\n\nexport function getExtraDetais(\n  teamId,\n  sideBetMasterPlayerId,\n  sideBetsSlavePlayerId,\n  sideBetStartDate,\n  sideBetEndDate\n) {\n  return http.post(`${apiUrl}/sideBets/getExtraDetais/${teamId}`, {\n    teamId,\n    sideBetMasterPlayerId,\n    sideBetsSlavePlayerId,\n    sideBetStartDate,\n    sideBetEndDate,\n  });\n}\n\nexport function getAllDismissedSideBets(teamId) {\n  return http.get(`${apiUrl}/sideBets/getAllDismissedSideBets/${teamId}`);\n}\n\nexport default {\n  createSideBet,\n  getSidebetsForMainTable,\n  gotOfferedSidebet,\n  acceptSideBet,\n  dismissSideBet,\n  getAllApprovedSideBets,\n  getExtraDetais,\n  getAllDismissedSideBets,\n};\n","import React from \"react\";\nimport { GiCardAceHearts } from \"react-icons/gi\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"./../../config.json\";\n\nconst PlayerCard = ({ header, data, name, image, cardName, team, teamimage }) => {\n  return (\n    <div className=\"cardDiv\">\n      <div className=\"card\" id=\"mainStats\"\n             style={{\n              backgroundImage: `url(${\n                process.env.PUBLIC_URL + \"/icons/diamond.svg\"\n              })`,\n            }}\n      >\n        <h5 className=\"card-title \">{name}</h5>\n        <div className=\"img-card\">\n          <img\n            src={\n              image\n                ? `${apiImage}${image}`\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }\n            className=\"card-img-top \"\n            alt={name}\n\n          />\n        </div>\n\n        <div className=\"card-body\" id=\"statsCardBody\">\n          <p className=\"card-text\" id=\"statsCardText\">\n            <span>{header}</span>\n            <br />\n            <span>{data ? data : 0}</span>\n            <br />\n          </p>\n        </div>\n      </div>\n      <Link\n        className=\"text-white btn btn-primary\"\n        id=\"cardFooter\"\n        to={`/tables/${cardName}/${team}`}\n        header={header}\n      >\n        See full table\n        <GiCardAceHearts />\n        <AiOutlineDoubleRight />\n      </Link>\n    </div>\n  );\n};\n\nexport default PlayerCard;\n","import React from \"react\";\nimport { GiCardAceHearts } from \"react-icons/gi\";\n\n\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"../../config.json\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\nconst SuccessP = ({ header, data, name, image, team, table }) => {\n  return (\n\n    <div className=\"cardDiv\">\n      <div className=\"card\" id=\"mainStats\"\n           style={{\n            backgroundImage: `url(${\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\n            })`,\n          }}>\n        <h5 className=\"card-title \">{name}</h5>\n        <div className=\"img-card\">\n          <img\n            src={\n              image\n                ? `${apiImage}${image}`\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }\n            className=\"card-img-top \"\n            alt={name}\n          />\n        </div>\n        <div className=\"card-img-overlay\"></div>\n        <div className=\"card-body\" id=\"statsCardBody\">\n          <p className=\"card-text\" id=\"statsCardText\">\n            <span>{header}</span>\n            <br />\n\n            <span>{data ? data : 0}</span>\n            <br />\n          </p>\n        </div>\n      </div>\n      <Link\n     className=\"text-white btn btn-primary\"\n     id=\"cardFooter\"\n        to={`/tables/success/${team}`}\n      >\n        See full table\n        <GiCardAceHearts />\n        <AiOutlineDoubleRight />\n      </Link>\n    </div>\n  );\n};\n\nexport default SuccessP;\n","import React from \"react\";\nimport { GiCardAceHearts } from \"react-icons/gi\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"../../config.json\";\n\nconst CurrMonth = ({ header, data, name, image, cMonth, team, month }) => {\n  const date = new Date();\n  let currentMonth = date.toLocaleString(\"en-US\", { month: \"long\" });\n\n  return (\n    <div className=\"cardDiv\">\n      <div\n        className=\"card \"\n        id=\"mainStats\"\n        style={{\n          backgroundImage: `url(${\n            process.env.PUBLIC_URL + \"/icons/diamond.svg\"\n          })`,\n        }}\n      >\n        <h5 className=\"card-title \">{name}</h5>\n        <div className=\"img-card\">\n          <img\n            src={\n              image\n                ? `${apiImage}${image}`\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }\n            className=\"card-img-top \"\n            alt={name}\n          />\n        </div>\n        <div className=\"card-img-overlay\"></div>\n        <div className=\"card-body p-0\" id=\"statsCardBody\">\n          <div className=\"card-text pt-3\" id=\"statsCardText\">\n            <span>{header}</span>\n            <br />\n            <div className=\"d-flex justify-content-around\">\n              <span id=\"month\">{currentMonth ? currentMonth : \"\"}</span>\n\n              <span>{data ? data : 0}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Link\n        className=\"text-white btn btn-primary\"\n        id=\"cardFooter\"\n        to={`/tables/monthlyStats/${team}`}\n      >\n        See full table\n        <GiCardAceHearts />\n        <AiOutlineDoubleRight />\n      </Link>\n    </div>\n  );\n};\n\nexport default CurrMonth;\n","import React from \"react\";\nimport { GiCardAceHearts } from \"react-icons/gi\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"../../config.json\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\n\nconst Profits = ({ header, data, name, image, team, table }) => {\n  return (\n    <div className=\"cardDiv\">\n      <div className=\"card\" id=\"mainStats\"\n           style={{\n            backgroundImage: `url(${\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\n            })`,\n          }}>\n        <h5 className=\"card-title\">{name}</h5>\n        <div className=\"img-card\">\n          <img\n            src={\n              image\n                ? `${apiImage}${image}`\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }\n            className=\"card-img-top \"\n            alt={name}\n          />\n        </div>\n        <div className=\"card-img-overlay\"></div>\n        <div className=\"card-body\" id=\"statsCardBody\">\n          <p className=\"card-text\" id=\"statsCardText\">\n            <span>{header}</span>\n            <br />\n\n            <span>{data ? data : 0}</span>\n            <br />\n          </p>\n        </div>\n      </div>\n      <Link\n     className=\"text-white btn btn-primary\"\n     id=\"cardFooter\"\n        to={`/tables/profits/top-ten/${team}`}\n      >\n        See full table\n        <GiCardAceHearts />\n        <AiOutlineDoubleRight/>\n      </Link>\n    </div>\n  );\n};\n\nexport default Profits;\n","import React, { useState, useEffect } from \"react\";\nimport h2hService from \"../../services/h2hService\";\nimport _ from \"lodash\";\nimport PageHeader from \"../common/pageHeader\";\nimport { apiImage } from \"../../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\n\nconst H2hGameEnd = ({ gameId, header }) => {\n  const [players, setPlayers] = useState([]);\n  const [ended, setEnded] = useState(false);\n  useEffect(() => {\n    const lastH2h = async () => {\n      try {\n        let last = await h2hService.getByGameId(gameId);\n        last = _.flattenDeep(last.data[0].players);\n        last.sort((a, b) => b.points - a.points);\n        setPlayers(last);\n        setEnded(true);\n      } catch (error) {\n        // console.log(\"error1\");\n      }\n    };\n    lastH2h();\n  }, [gameId]);\n  let Rank = 1;\n  return (\n    <div>\n      <SpinnerInfinity\n        size={130}\n        thickness={151}\n        speed={70}\n        color=\"rgba(252, 252, 252, 1)\"\n        secondaryColor=\"rgba(108, 20, 180, 1)\"\n        enabled={!ended}\n      />\n      {ended && (\n        <div className=\"contain\">\n          <PageHeader titleText={header} />\n          <div className=\"col-12\" id=\"card-top\">\n            <ol className=\"statsList\">\n              <li\n                id=\"lastGameHero\"\n                className=\"statsHero d-flex flex-column\"\n                style={{\n                  backgroundImage: `url(${\n                    process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                  })`,\n                }}\n              >\n                <div\n                  className=\"stats d-flex w-100 justify-content-between\"\n                  id=\"lGame\"\n                >\n                  <p className=\"ms-5\">Player</p>\n                  <p className=\"me-3\">Points</p>\n                </div>\n              </li>\n              <React.Fragment>\n                {players.map((player) => (\n                  <li\n                    className=\"statsRow w-100 justify-content-between\"\n                    key={player.id}\n                  >\n                    <div className=\"rowPos\">{Rank++}</div>\n                    <div className=\"rowImage\">\n                      <img\n                        src={`${apiImage}${player.image}`}\n                        alt=\"player list row\"\n                      />\n                    </div>\n                    <div className=\"rowName\" id=\"lGameName\">\n                      {player.name}\n                    </div>\n                    <div className=\"rowProfit\">{player.points}</div>\n                  </li>\n                ))}\n              </React.Fragment>\n            </ol>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default H2hGameEnd;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../services/gameService\";\nimport PageHeader from \"../components/common/pageHeader\";\nimport { apiImage } from \"../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport H2hGameEnd from \"./h2h/h2hGameEnd\";\n\nconst MainLastgame = ({ teamId }) => {\n  const [data, setData] = useState([]);\n  const [lastGame, setLastGame] = useState([]);\n  useEffect(() => {\n    const getLastGame = async () => {\n      let game = await gameService.lastGame(teamId);\n      game = game.data[0];\n      let last = game.players.sort((a, b) => b.profit - a.profit);\n      setData(last);\n      setLastGame(game);\n    };\n\n    getLastGame();\n  }, [teamId]);\n\n  let Rank = 1;\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"Last Game\" />\n\n      {!data && (\n        <div className=\"spinner pt-2\">\n          <SpinnerInfinity\n            size={130}\n            thickness={151}\n            speed={70}\n            color=\"rgba(252, 252, 252, 1)\"\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\n            enabled={!data ? true : false}\n          />\n        </div>\n      )}\n      {data && (\n        <div className=\"col-lg-4 col-12 pb-3\" id=\"card-top\">\n          <ol className=\"statsList\">\n            <li\n              id=\"lastGameHero\"\n              className=\"statsHero d-flex flex-column\"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <p>\n                {new Date(lastGame.createdAt).toLocaleDateString(\"en-GB\") +\n                  \"  \" +\n                  new Date(lastGame.createdAt).toLocaleString(\"en-US\", {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false,\n                  }) +\n                  \" - \" +\n                  new Date(lastGame.updatedAt).toLocaleString(\"en-US\", {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false,\n                  })}\n              </p>\n              <div className=\"stats d-flex  w-100\" id=\"lGameMain\">\n                <p>Rank</p>\n                <p>Player</p>\n                <p>Name</p>\n                <p>Cashing</p>\n                <p>Profit</p>\n              </div>\n            </li>\n            <React.Fragment>\n              {data.map((player) => (\n                <li className=\"statsRow\" key={player.id}>\n                  <div className=\"rowPos\">{Rank++}.</div>\n                  <div className=\"rowImagePerHour\">\n                    <img\n                      src={data.length > 0 ? `${apiImage}${player.image}` : \"\"}\n                      alt=\"player list row\"\n                    />\n                  </div>\n                  <div id=\"lGamePlayer\">\n                    {data.length > 1 ? player.name : \"\"}\n                  </div>\n                  <div className=\"rowCashingLastGame\">\n                    {data.length > 1 ? player.cashing : \"\"}\n                  </div>\n                  <div\n                    className={\n                      player.profit > 0\n                        ? \"rowProfit text-success\"\n                        : \"rowProfit text-danger\"\n                    }\n                  >\n                    {player.profit}\n                  </div>\n                </li>\n              ))}\n            </React.Fragment>\n          </ol>\n          <H2hGameEnd gameId={lastGame._id} header=\"Last H2H\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MainLastgame;\n","import React from \"react\";\nimport { GiCardAceHearts } from \"react-icons/gi\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"./../../config.json\";\n\nconst H2hCard = ({ header, data, name, image, cardName, team, teamimage }) => {\n  return (\n    <div className=\"cardDiv\">\n      <div className=\"card\" id=\"mainStats\"\n           style={{\n            backgroundImage: `url(${\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\n            })`,\n          }}>\n        <h5 className=\"card-title \">{name}</h5>\n        <div className=\"img-card\">\n          <img\n            src={\n              image\n                ? `${apiImage}${image}`\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }\n            className=\"card-img-top \"\n            alt={name}\n          />\n        </div>\n\n        <div className=\"card-body\" id=\"statsCardBody\">\n          <p className=\"card-text\" id=\"statsCardText\">\n            <span>{header}</span>\n            <br />\n            <span>{data ? data : 0}</span>\n            <br />\n          </p>\n        </div>\n      </div>\n      <Link\n        className=\"text-white btn btn-primary\"\n        id=\"cardFooter\"\n        to={`/tables/h2h/${team}`}\n        header={header}\n      >\n        See full table\n        <GiCardAceHearts />\n        <AiOutlineDoubleRight />\n      </Link>\n    </div>\n  );\n};\n\nexport default H2hCard;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport PageHeader from \"../common/pageHeader\";\nimport { apiImage } from \"../../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport _ from \"lodash\";\nimport ReactPaginate from \"react-paginate\";\n\nconst AllGames = ({ teamId }) => {\n  const [games, setGames] = useState(null);\n  const [gamesData, setGamesData] = useState([]);\n  const [page, setPage] = useState(0);\n  const [pages, setPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [perPage, setPerPage] = useState(3);\n  useEffect(() => {\n    const getGames = async () => {\n      const all = await gameService.allGamesByTeam(teamId);\n      setGamesData(all.data);\n      const allGames = all.data.map((d) => _.flattenDeep(d.players));\n      setGames(allGames);\n      setLoading(true);\n      try {\n        setPages(Math.floor(games.length / perPage));\n      } catch {\n        console.log(\"not yet logged\");\n      }\n    };\n\n    getGames();\n  }, [perPage, games ? games.length : \"\", teamId]);\n  let created = 0;\n  let items = [];\n  items = games ? games.slice(page * perPage, (page + 1) * perPage) : \"\";\n  let itemsDates = gamesData\n    ? gamesData.slice(page * perPage, (page + 1) * perPage)\n    : \"\";\n\n  const handlePageClick = (event) => {\n    let pageC = event.selected;\n    setPage(pageC);\n  };\n\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"All Games\" />\n      {!games && (\n        <div className=\"spinner pt-2\">\n          <SpinnerInfinity\n            size={130}\n            thickness={151}\n            speed={70}\n            color=\"rgba(252, 252, 252, 1)\"\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\n            enabled={true}\n          />\n        </div>\n      )}\n      <div className=\"row\">\n        {loading && (\n          <ReactPaginate\n            previousLabel={\"prev\"}\n            nextLabel={\"next\"}\n            pageCount={items.length % 3 === 0 ? pages + 1 : pages}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination text-white justify-content-center\"}\n            activeClassName={\"active\"}\n            pageClassName={\"page-item\"}\n            pageLinkClassName={\"page-link\"}\n            previousClassName={\"page-item\"}\n            previousLinkClassName={\"page-link\"}\n            nextClassName={\"page-item\"}\n            nextLinkClassName={\"page-link\"}\n          />\n        )}\n\n        {games &&\n          items.map((g) => (\n            <div\n              className=\"col-lg-4 col-12 \"\n              id=\"card-top\"\n              key={g[0].profit + g[0].image}\n            >\n              <ol className=\"statsList\">\n                <li\n                  id=\"lastGameHero\"\n                  className=\"statsHero d-flex flex-column\"\n                  style={{\n                    backgroundImage: `url(${\n                      process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                    })`,\n                  }}\n                >\n                  <p>\n                    {new Date(\n                      itemsDates[created++].createdAt\n                    ).toLocaleDateString(\"en-GB\") +\n                      \" \" +\n                      new Date(\n                        itemsDates[created - 1].createdAt\n                      ).toLocaleString(\"en-US\", {\n                        hour: \"2-digit\",\n                        minute: \"2-digit\",\n                        hour12: false,\n                      }) +\n                      \" - \" +\n                      new Date(\n                        itemsDates[created - 1].updatedAt\n                      ).toLocaleString(\"en-US\", {\n                        hour: \"2-digit\",\n                        minute: \"2-digit\",\n                        hour12: false,\n                      })}\n                  </p>\n                  <div className=\"stats d-flex w-100 \" id=\"lGameAllGames\">\n                    <p>Rank</p>\n                    <p>Player</p>\n                    <p>Name</p>\n                    <p>Cashing</p>\n                    <p>Profit</p>\n                  </div>\n                </li>\n\n                {g\n                  .sort((a, b) => b.profit - a.profit)\n                  .map((player) => (\n                    <li className=\"statsRowAllGames\" key={player.image}>\n                      <div className=\"rowPos\">{player.gameRank}.</div>\n                      <div className=\"rowImage\">\n                        <img\n                          src={`${apiImage}${player.image}`}\n                          alt=\"player list row\"\n                        />\n                      </div>\n                      <div className=\"rowName\" id=\"lGameName\">\n                        {player.name}\n                      </div>\n                      <div className=\"rowCashingAll\">{player.cashing}</div>\n                      <div\n                        className={\n                          player.profit > 0\n                            ? \"rowProfit text-success\"\n                            : \"rowProfit text-danger\"\n                        }\n                      >\n                        {player.profit}\n                      </div>\n                    </li>\n                  ))}\n              </ol>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AllGames;\n","import React from \"react\";\nimport { GiCardAceHearts } from \"react-icons/gi\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"../../config.json\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\n\nconst Profits = ({ header, data, name, image, team, table,path }) => {\n  return (\n    <div className=\"cardDiv\">\n      <div className=\"card\" id=\"mainStats\"\n           style={{\n            backgroundImage: `url(${\n              process.env.PUBLIC_URL + \"/icons/diamond.svg\"\n            })`,\n          }}>\n        <h5 className=\"card-title\">{name}</h5>\n        <div className=\"img-card\">\n          <img\n            src={\n              image\n                ? `${apiImage}${image}`\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }\n            className=\"card-img-top \"\n            alt={name}\n          />\n        </div>\n        <div className=\"card-img-overlay\"></div>\n        <div className=\"card-body\" id=\"statsCardBody\">\n          <p className=\"card-text\" id=\"statsCardText\">\n            <span>{header}</span>\n            <br />\n\n            <span>{data ? data : 0}</span>\n            <br />\n          </p>\n        </div>\n      </div>\n      <Link\n     className=\"text-white btn btn-primary\"\n     id=\"cardFooter\"\n        to={path}\n      >\n        See full table\n        <GiCardAceHearts />\n        <AiOutlineDoubleRight/>\n      </Link>\n    </div>\n  );\n};\n\nexport default Profits;\n","import React from \"react\";\nimport { GiCardAceHearts } from \"react-icons/gi\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"../../config.json\";\nimport { AiFillDollarCircle } from \"react-icons/ai\";\n\nconst SideBetsCard = ({ teamId }) => {\n  return (\n    <div className=\"cardDiv\">\n      <div\n        className=\"card\"\n        id=\"mainStats\"\n        style={{\n          backgroundImage: `url(${\n            process.env.PUBLIC_URL + \"/icons/diamond.svg\"\n          })`,\n        }}\n      >\n        <h5 className=\"card-title \">Poker @ Vasili</h5>\n        <div className=\"img-card\">\n          <img\n            src={`${apiImage}images/vsCard.jpg`}\n            className=\"card-img-top \"\n            alt=\"cards\"\n          />\n        </div>\n\n        <div className=\"card-body\" id=\"statsCardBody\">\n          <p className=\"card-text\" id=\"statsCardText\">\n            <span>$Side-Bets$</span>\n            <br />\n            <span>\n              <AiFillDollarCircle />\n            </span>\n            <br />\n          </p>\n        </div>\n      </div>\n      <Link\n        className=\"text-white btn btn-primary\"\n        id=\"cardFooter\"\n        to={`/side-bets/${teamId}`}\n      >\n        See full table\n        <GiCardAceHearts />\n        <AiOutlineDoubleRight />\n      </Link>\n    </div>\n  );\n};\n\nexport default SideBetsCard;\n","import React, { useState, useEffect } from \"react\";\nimport gameService from \"../services/gameService\";\nimport userService from \"../services/userService\";\nimport sideBetsService from \"../services/sideBetsService\";\nimport PageHeader from \"./common/pageHeader\";\nimport PlayerCard from \"./topStats/playerCard\";\nimport SuccessP from \"./topStats/successp\";\nimport CurrMonth from \"./topStats/currMonth\";\nimport Profits from \"./topStats/profits\";\nimport { SpinnerDiamond } from \"spinners-react\";\nimport MainLastgame from \"./mainLastGame\";\nimport teamService from \"../services/teamService\";\nimport { apiImage } from \"../config.json\";\nimport h2hService from \"../services/h2hService\";\nimport H2hCard from \"./h2h/h2hCard\";\nimport AllGames from \"./games/allGames\";\nimport { IoIosTrophy } from \"react-icons/io\";\nimport StatsPerHour from \"./topStats/statsPerHour\";\nimport SideBetsCard from \"./sidebets/sidebetsCard\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { MdDateRange } from \"react-icons/md\";\nimport Swal from \"sweetalert2\";\nimport * as dayjs from \"dayjs\";\nimport { toast } from \"react-toastify\";\n\nexport default function MainTable(props) {\n  //get the data for the table\n  const [data, setData] = useState(\"\");\n  const [avgprofit, setAvgprofit] = useState([]);\n  const [totalgames, setTotalgames] = useState([]);\n  const [avgcashing, setAvgcashing] = useState([]);\n  const [success, setSuccess] = useState([]);\n  const [gamesprofit, setGamesprofit] = useState([]);\n  const [h2h, setH2h] = useState([]);\n  const [monthleader, setMonthleader] = useState([]);\n  const [profits, setProfits] = useState([]);\n  const [teamImage, setTeamImage] = useState(\"\");\n  const [totalCash, setTotalCash] = useState({});\n  const [totalGames, setTotalGames] = useState(\"\");\n  const [statsPerHour, setstatsPerHour] = useState([]);\n  const teamId = props.match.params.teamId;\n  const [teams, setTeams] = useState([]);\n  const [lastGame, setLastGame] = useState([]);\n  const [user, setUser] = useState({});\n  const [sideBets, setSideBets] = useState([]);\n  var relativeTime = require(\"dayjs/plugin/relativeTime\");\n\n  const alertGotOfferedSideBet = (sideBetData) => {\n    sideBetData.map((sideBet) => {\n      Swal.fire({\n        title: `You got offered a side bet from ${sideBet.masterPlayer.nickName}!`,\n        text: `  for ${sideBet.sideBetSum}$ from ${new Date(\n          sideBet.startDate\n        ).toLocaleDateString(\"en-GB\")} to ${new Date(\n          sideBet.endDate\n        ).toLocaleDateString(\"en-GB\")} Do you accept?`,\n        icon: \"info\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, accept it!\",\n        cancelButtonText: \"No, dismiss it!\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          toast.success(\"You accepted the side bet 🔥🔥🔥\");\n          sideBetsService.acceptSideBet(sideBet._id);\n        } else if (result.isDismissed) {\n          toast.error(\"You dismissed the side bet 😢\");\n          console.log(\"disssmissed\");\n          sideBetsService.dismissSideBet(sideBet._id);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    const getLastGame = async () => {\n      let game = await gameService.lastGame(teamId);\n      game = game.data[0];\n      setLastGame(game);\n      const me = await userService.getUserDetails();\n      setUser(me.data);\n    };\n\n    getLastGame();\n  }, []);\n\n  //fetch data from DB\n\n  useEffect(() => {\n    const getTable = async () => {\n      let table = await gameService.table(teamId);\n      table = table.data;\n\n      table.sort((a, b) => b.totalProfit - a.totalProfit);\n      setData(table);\n\n      let teamPic = await teamService.getTeam(teamId);\n      setTeamImage(teamPic.data);\n\n      let totalCash = await gameService.totalCash(teamId);\n      setTotalCash(totalCash.data);\n\n      let totalGames = await gameService.totalGames(teamId);\n      setTotalGames(totalGames.data);\n\n      let h2h = await h2hService.getPointsByTeam(teamId);\n      if (h2h.data[0]._id.name === \"Nispach\") {\n        h2h.data.shift();\n      }\n      setH2h(h2h.data);\n\n      let totoalg = [...table];\n      const totalG = await totoalg.sort((a, b) => b.numOfGames - a.numOfGames);\n      setTotalgames(totalG);\n\n      let avgp = [...table];\n      const avgP = await avgp.sort((a, b) => b.avgProfit - a.avgProfit);\n      setAvgprofit(avgP);\n\n      let gamep = [...table];\n      const gameP = await gamep.sort(\n        (a, b) => b.gamesWithProfit - a.gamesWithProfit\n      );\n      setGamesprofit(gameP);\n\n      let successPc = [...table];\n      const successP = await successPc.sort(\n        (a, b) => b.successPercentage - a.successPercentage\n      );\n      setSuccess(successP);\n      let avgc = [...table];\n      const avgC = await avgc.sort((a, b) => a.avgCashing - b.avgCashing);\n      setAvgcashing(avgC);\n    };\n    getTable();\n    return () => {\n      let isCancelled = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    const dataByMonths = async () => {\n      let thisMonth = new Date().getMonth();\n      let results = await gameService.monthsData(\n        props.match.params.teamId,\n        thisMonth + 1\n      );\n      results = results.data;\n      if (results.length > 0) {\n        const currMonth = results.filter(\n          (e) => e._id.monthPlayed !== thisMonth\n        );\n        const currMonthLeader = await currMonth.sort(\n          (a, b) => b.totalProfit - a.totalProfit\n        );\n\n        setMonthleader(currMonthLeader);\n      } else {\n        const currMonth = results.filter(\n          (e) => e._id.monthPlayed !== thisMonth - 1\n        );\n        const currMonthLeader = await currMonth.sort(\n          (a, b) => b.totalProfit - a.totalProfit\n        );\n        setMonthleader(currMonthLeader);\n      }\n    };\n    dataByMonths();\n  }, []);\n\n  useEffect(() => {\n    const profits = async () => {\n      let results = await gameService.profits(props.match.params.teamId);\n      results = results.data;\n      setProfits(results);\n    };\n    profits();\n  }, []);\n\n  useEffect(() => {\n    const statsPerHour = async () => {\n      const dataPerHour = await gameService.statsPerHour(\n        props.match.params.teamId\n      );\n      setstatsPerHour(dataPerHour.data);\n    };\n    statsPerHour();\n  }, []);\n\n  //get team players for avatars\n  useEffect(() => {\n    const fetchTeams = async () => {\n      const { data } = await teamService.getMyTeam();\n\n      setTeams(data[0].players);\n\n      const sideBetsData = await sideBetsService.getSidebetsForMainTable(\n        props.match.params.teamId\n      );\n      setSideBets(sideBetsData.data);\n\n      ///check if user got offered a side bet he didnt approved yet\n      const gotOfferedSideBet = await sideBetsService.gotOfferedSidebet(\n        user._id\n      );\n      if (gotOfferedSideBet.data.length > 0) {\n        alertGotOfferedSideBet(gotOfferedSideBet.data);\n      }\n    };\n    fetchTeams();\n  }, [user]);\n\n  dayjs.extend(relativeTime);\n  let daysFromGame = lastGame ? dayjs(lastGame.createdAt).fromNow() : null;\n\n  return (\n    <div className=\"container\" id=\"dashboard\">\n      <PageHeader\n        className=\"mb-0\"\n        titleText={new Date().getFullYear() + \" Top Stats\"}\n      />\n      {data.length < 1 && (\n        <div className=\"spinner mt-5\">\n          <SpinnerDiamond\n            size={130}\n            thickness={151}\n            speed={81}\n            color=\"rgba(108, 20, 180, 1)\"\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\n            enabled={data.length < 1 ? true : false}\n          />\n        </div>\n      )}\n\n      {data.length > 1 && (\n        <React.Fragment>\n          <div className=\"teamImages d-flex w-100 justify-content-between\">\n            <motion.img\n              style={{\n                width: 150,\n                height: 150,\n                borderRadius: 30,\n                backgroundColor: \"#fff\",\n              }}\n              animate={{ rotate: 360 }}\n              transition={{\n                type: \"spring\",\n                duration: 5,\n                bounce: 0.6,\n              }}\n              src={`${apiImage}${teamImage.teamImage}`}\n              alt=\"team\"\n            />\n            <Link to={`/players-stats/${user._id}`}>\n              <div\n                className=\"teamShield d-flex justify-content-center flex-column align-items-center\"\n                style={{\n                  backgroundImage: `url(${apiImage}images/fifaCard.png)`,\n                }}\n              >\n                <img src={`${apiImage}${user.image}`} alt=\"\" />\n                <p className=\"m-0\">{user.nickName}</p>\n              </div>\n            </Link>\n          </div>\n          <div>\n            <p className=\"ms-2 text-white mb-2 mt-2 display-6\">\n              {teamImage.name}\n            </p>\n            <div className=\"container playersList mb-2\">\n              {teams.map((player) => (\n                <motion.div\n                  className=\"\"\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ delay: 1.5, duration: 5 }}\n                >\n                  <Link to={`/players-stats/${player._id}`}>\n                    <img src={`${apiImage}${player.image}`} alt=\"player\" />\n                  </Link>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n          <motion.div\n            initial={{ x: \"-100vw\" }}\n            animate={{ x: 0 }}\n            transition={{\n              delay: 2,\n              type: \"spring\",\n              duration: 2,\n              bounce: 0.6,\n            }}\n            className=\"totalCash d-flex flex-column mb-2 ps-1\"\n          >\n            {sideBets.length > 0 && (\n              <div className=\"alert alert-gold alert-dismissible \" role=\"alert\">\n                <span\n                  type=\"button\"\n                  className=\"close\"\n                  data-bs-dismiss=\"alert\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\" className=\"text-black\">\n                    &times;\n                  </span>\n                </span>\n                <strong>New Side Bets Offered!!!💥💥💥</strong>\n                <span className=\"text-primary\">\n                  <ol>\n                    {sideBets.map((bet) => (\n                      <li>\n                        {`${bet.masterPlayer.nickName} VS ${\n                          bet.slavePlayer.nickName\n                        }  ${bet.sideBetSum}$  date: ${new Date(\n                          bet.createdAt\n                        ).toLocaleDateString(\"en-GB\")} `}\n                      </li>\n                    ))}\n                  </ol>\n                </span>\n              </div>\n            )}\n\n            <p className=\"mb-0\">\n              Total Cash Played:\n              <strong>\n                <span className=\"ps-1\">\n                  {totalCash[0]\n                    ? totalCash[0].totalCashing.toLocaleString()\n                    : null}\n                  <i className=\"fas fa-money-bill-alt ps-1\"></i>\n                </span>\n              </strong>\n            </p>\n            <p className=\"mb-0\">\n              Total Hours Played:\n              <strong>\n                <span className=\"ps-1\">\n                  {totalCash[0] ? totalCash[0].totalHours.toFixed(2) : null}\n                  <i className=\"fas fa-hourglass-half ps-1 \"></i>\n                </span>\n              </strong>\n            </p>\n            <p className=\"mb-0\">\n              Total Games Played:\n              <strong>\n                <span className=\"ps-1\">\n                  {totalGames[0] ? totalGames[0].TotalGames : null}\n                  <IoIosTrophy className=\"ms-1 mb-1\" />\n                </span>\n              </strong>\n            </p>\n            <p className=\"mb-0\">\n              Last Game Played:\n              <strong>\n                <span className=\"ps-1\">\n                  {totalGames[0] ? daysFromGame : \"\"}\n                  <MdDateRange className=\"ms-1 \" />\n                </span>\n              </strong>\n            </p>\n            <div className=\"cardOdds\">\n              <a\n                href=\"https://www.cardschat.com/poker/tools/poker-odds-calculator/\"\n                target=\"_blank\"\n              >\n                Texas Odds Calculator\n              </a>\n            </div>\n          </motion.div>\n          <motion.div\n            id=\"dashboardDisplay\"\n            initial={{ opacity: 0 }}\n            animate={{\n              y: [\"300px\", \"0px\"],\n              delay: 2.2,\n              opacity: 1,\n            }}\n            transition={{ duration: 2 }}\n          >\n            <PlayerCard\n              header=\"Total Profit\"\n              data={data[0].totalProfit}\n              name={data[0]._id.name}\n              image={data[0]._id.image}\n              cardName=\"totalProfit\"\n              team={teamId}\n              table={data}\n            />\n            {avgprofit.length > 1 && (\n              <PlayerCard\n                header=\"Average Profit\"\n                data={avgprofit[0].avgProfit}\n                name={avgprofit[0]._id.name}\n                image={avgprofit[0]._id.image}\n                cardName=\"avgProfit\"\n                team={teamId}\n              />\n            )}\n\n            {totalgames.length > 1 && (\n              <PlayerCard\n                header=\"Total Games\"\n                data={totalgames[0].numOfGames}\n                name={totalgames[0]._id.name}\n                image={totalgames[0]._id.image}\n                cardName=\"numOfGames\"\n                team={teamId}\n              />\n            )}\n            {gamesprofit.length > 1 && (\n              <PlayerCard\n                header=\"Games With Profit\"\n                data={gamesprofit[0].gamesWithProfit}\n                name={gamesprofit[0]._id.name}\n                image={gamesprofit[0]._id.image}\n                cardName=\"gamesWithProfit\"\n                team={teamId}\n              />\n            )}\n            {success.length > 1 && (\n              <SuccessP\n                header=\"Success %\"\n                data={success[0].successPercentage}\n                name={success[0]._id.name}\n                image={success[0]._id.image}\n                cardName=\"successPercentage\"\n                team={teamId}\n              />\n            )}\n            {avgcashing.length > 1 && (\n              <PlayerCard\n                header=\"Average Cashing\"\n                data={avgcashing[0].avgCashing}\n                name={avgcashing[0]._id.name}\n                image={avgcashing[0]._id.image}\n                cardName=\"avgCashing\"\n                team={teamId}\n              />\n            )}\n            {statsPerHour.length > 1 && (\n              <StatsPerHour\n                header=\"Profit Per Hour\"\n                name={statsPerHour.length > 0 ? statsPerHour[0]._id.name : \"\"}\n                image={statsPerHour.length > 0 ? statsPerHour[0]._id.image : \"\"}\n                data={\n                  statsPerHour.length > 0 ? statsPerHour[0].profitPerHour : \"\"\n                }\n                team={teamId}\n                path={`/stats-per-hour/${props.match.params.teamId}`}\n              />\n            )}\n            <Profits\n              header=\"Top 10 Profits\"\n              name={profits.length > 0 ? profits[0].players.name : \"\"}\n              image={profits.length > 0 ? profits[0].players.image : \"\"}\n              data={profits.length > 0 ? profits[0].players.profit : \"\"}\n              team={teamId}\n            />\n            {monthleader.length > 0 && (\n              <CurrMonth\n                header=\"Stats By Month's\"\n                data={monthleader[0].totalProfit}\n                name={monthleader[0]._id.name}\n                image={monthleader[0]._id.image}\n                cMonth={monthleader[0].lastGame}\n                team={teamId}\n              />\n            )}\n            {monthleader.length === 0 && (\n              <p className=\"text-danger display-10\">\n                {new Date().toLocaleString(\"en-us\", { month: \"long\" })} Stats-No\n                games this month yet\n              </p>\n            )}\n            {h2h.length > 0 && (\n              <H2hCard\n                header=\"H2H Games\"\n                data={h2h[0].avgPoints.toFixed(2)}\n                name={h2h[0]._id.name}\n                image={h2h[0]._id.image}\n                team={teamId}\n              />\n            )}\n            <SideBetsCard teamId={teamId} />\n          </motion.div>\n          <MainLastgame teamId={teamId} />\n          <AllGames teamId={teamId} />\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport PageHeader from \"./common/pageHeader\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nconst Demo = () => {\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"Game Demo\" />\n      <div className=\"screenShots col-lg-6 col-12\">\n        <h3 className=\"text-primary\">Screen Shots</h3>\n        <Carousel>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={process.env.PUBLIC_URL + \"demo/dashboard.JPG\"}\n              alt=\"First slide\"\n            />\n            <Carousel.Caption>\n              {/* <h3>First slide label</h3>\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p> */}\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={process.env.PUBLIC_URL + \"demo/dash2.JPG\"}\n              alt=\"Second slide\"\n            />\n\n            <Carousel.Caption>\n              {/* <h3>Second slide label</h3>\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> */}\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={process.env.PUBLIC_URL + \"demo/dash3.JPG\"}\n              alt=\"Third slide\"\n            />\n\n            <Carousel.Caption>\n              {/* <h3>Third slide label</h3>\n              <p>\n                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\n              </p> */}\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={process.env.PUBLIC_URL + \"demo/dash4.JPG\"}\n              alt=\"Third slide\"\n            />\n\n            <Carousel.Caption>\n              {/* <h3>Third slide label</h3>\n              <p>\n                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\n              </p> */}\n            </Carousel.Caption>\n          </Carousel.Item>\n        </Carousel>\n      </div>\n      <div className=\"row demoText\">\n        <h3>Basic instructions for setting up a game:</h3>\n        <ul>\n          <li>First sign-up or sign-in to set up a user</li>\n          <li>Head over to \"My-Teams\" located at the top navbar</li>\n          <li>\n            *If you want to check out a demo team, select \"Join an existing\n            team\" and follow instuctions\n          </li>\n\n          {/* <img\n            src={process.env.PUBLIC_URL + `demo/myTeams.JPG`}\n            alt=\"demo img\"\n            className=\"demo-img\"\n          /> */}\n          {/* <video src={process.env.PUBLIC_URL + \"demo/demo1.mp4\"}></video> */}\n          {/* <div className=\"video col-lg-6 col-12\">\n         <video width=\"100%\" controls className=\"demoVideo \">\n            <source src={process.env.PUBLIC_URL + \"demo/demo1.mp4\"} />\n          </video>\n         </div> */}\n\n          <li>\n            In this page you can:\n            <ul>\n              <li>Join an existing team</li>\n              <li>Start a new team</li>\n              <li>Check out your team statistics</li>\n              <li>Start a new game</li>\n              <li>Edit or delete a team</li>\n            </ul>\n          </li>\n          <li>Table & statistics</li>\n          {/* <div className=\"video col-lg-6 col-12\">\n          <video width=\"100%\" controls className=\"demoVideo\">\n            <source src={process.env.PUBLIC_URL + \"demo/demo2.mp4\"} />\n          </video>\n          </div> */}\n          <li>Start a new game:</li>\n          <ul>\n            <li>Select the players that will play in the game</li>\n            <li>*Note that you need to select at least 2 players</li>\n          </ul>\n\n          <li>\n            Start your game, compete with your amigos for the chance to be poker\n            champions\n          </li>\n          <li>\n            Each time a player cashes in, press the $ icon to add another 50$ to\n            his cashing\n          </li>\n          <li>\n            At the end of the match , count each players cash and input the\n            ammount to the \"cash in hand\" field.\n          </li>\n\n          <li>\n            To finish the game press \"Update Results\" & you will be transferd to\n            the leading boards of the latest game\n          </li>\n          <li>Have fun & ALL IN!!!!!!!!!!!!</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Demo;\n","import React from \"react\";\nimport PageHeader from \"./common/pageHeader\";\n\nconst About = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <PageHeader titleText=\"About\" />\n        <img\n          src={process.env.PUBLIC_URL + \"/icons/about.png\"}\n          alt=\"abput icon\"\n          className=\"aboutIcon\"\n        />\n        <h4 className=\"mt-4\">\n          My name is Nadav Galili, I developed Poker-Underground after several\n          years of <br />\n          playing Poker with my friends.\n        </h4>\n        <h4 className=\"mt-4\">\n          One of the pleasures of the game is to keep track of your game\n          results.\n          <br /> <br />\n          That’s how I came up with the idea for this app...\n        </h4>\n        <h4 className=\"mt-4\">\n          No more writing game results on papers or EXCEL sheets, all you need\n          is in this app!\n        </h4>\n        <h4 className=\"mt-4\">\n          Further features are yet to come soon.. Enjoy & ALL IN!!!!\n        </h4>\n        <h3>\n          <br />\n          Get in touch:\n          <a href=\"mailto:nadavg1000@gmail.com\" className=\"ms-2\">\n            {\" \"}\n            nadavg1000@gmail.com\n          </a>\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport PageHeader from \"../common/pageHeader\";\nconst TotalPersonal = ({ details }) => {\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [pages, setPages] = useState(0);\n\n  useEffect(() => {\n    const getGames = () => {\n      setPages(Math.floor(details.length / perPage));\n    };\n    getGames();\n  }, [details.length, perPage]);\n  let items = [];\n  items = details ? details.slice(page * perPage, (page + 1) * perPage) : \"\";\n\n  const handlePageClick = (event) => {\n    let pageC = event.selected;\n    setPage(pageC);\n  };\n\n  return (\n    <div className=\"allPersonal mt-2 col-lg-4 col-11\">\n      <PageHeader titleText=\"All Games\"/>\n      <ReactPaginate\n        previousLabel={\"prev\"}\n        nextLabel={\"next\"}\n        pageCount={items.length%10===0?pages+1:pages}\n        onPageChange={handlePageClick}\n        containerClassName={\"pagination text-white justify-content-center\"}\n        activeClassName={\"active\"}\n        pageClassName={\"page-item\"}\n        pageLinkClassName={\"page-link\"}\n        previousClassName={\"page-item\"}\n        previousLinkClassName={\"page-link\"}\n        nextClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n      />\n      <div className=\"col-12 mt-2\">\n        <div id=\"card-top\">\n          <ol className=\"statsList mb-0\">\n            <li\n              id=\"gameLi\"\n              className=\"statsHero d-flex\"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <div\n                className=\"gameH2h d-flex w-100 justify-content-between\"\n                id=\"personalheader\"\n              >\n                <div className=\"headerDetails ms-2\">Date</div>\n                <div className=\"headerDetails\">Team Name</div>\n                <div className=\"headerDetails\">Cashing</div>\n                <div className=\"headerDetails\">Num Of Cashing</div>\n                <div className=\"headerDetails\">Game Rank</div>\n                <div className=\"headerDetails\">Profit</div>\n              </div>\n            </li>\n            {items.map((d) => (\n              <li\n                className=\"statsRow w-100 d-flex justify-content-between\"\n                id=\"personalDetails\"\n                key={new Date(d.createdAt)}\n              >\n                <div className=\"rowPlayerDetails ms-1\">\n                  {new Date(d.createdAt).toLocaleDateString(\"en-GB\")}\n                </div>\n                <div className=\"rowPlayerDetails\">{d.team_name}</div>\n                <div className=\"rowPlayerDetails\">{d.players.cashing}</div>\n                <div className=\"rowPlayerDetails\">{d.players.numOfCashing}</div>\n                <div className=\"rowPlayerDetails\">{d.players.gameRank}</div>\n                <div\n                  className={\n                    d.players.profit > 0\n                      ? \"rowPlayersDetails text-success\"\n                      : \"rowPlayersDetails text-danger\"\n                  }\n                >\n                  {d.players.profit}\n                </div>\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TotalPersonal;\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport userService from \"../../services/userService\";\nimport gameService from \"../../services/gameService\";\nimport h2hService from \"../../services/h2hService\";\nimport PageHeader from \"../common/pageHeader\";\nimport { SpinnerCircular } from \"spinners-react\";\nimport { apiImage } from \"../../config.json\";\nimport _ from \"lodash\";\nimport TotalPersonal from \"./totalPersonal\";\nimport { Line } from \"react-chartjs-2\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillEdit } from \"react-icons/ai\";\n\nconst MyStats = () => {\n  const [me, setMe] = useState({});\n  const [stats, setStats] = useState({});\n  const [month, setMonth] = useState([]);\n  const [points, setPoints] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [chartDates, setChartDates] = useState([]);\n  const [chartCashing, setChartCashing] = useState([]);\n  let currentMonth = new Date();\n  let currentMonthNumber = currentMonth.getMonth() + 1;\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\n\n  useEffect(() => {\n    const getTable = async () => {\n      if (me.teams) {\n        let table = await gameService.monthsData(me.teams[0]);\n        table = table.data;\n        let currentMonth = [...table];\n        currentMonth = currentMonth.filter(\n          (month) => month._id.monthPlayed === currentMonthNumber\n        );\n        currentMonth = currentMonth.find((e) => e._id.player_id === me._id);\n        setMonth(currentMonth);\n        let detailed = await gameService.personalGames(me._id);\n        setDetails(detailed.data);\n\n        let myDetailed = await gameService.personalGames(me._id);\n        let chartDetails = [];\n        let chartDates = [];\n        let chartCash = [];\n        try {\n          await myDetailed.data.forEach((e) =>\n            chartDetails.push(e.players.profit)\n          );\n          setChartData(chartDetails);\n          await myDetailed.data.forEach((e) =>\n            chartCash.push(e.players.cashing)\n          );\n          setChartCashing(chartCash);\n\n          await myDetailed.data.forEach((e) =>\n            chartDates.push(\n              new Date(e.createdAt).toLocaleDateString(\"en-GB\").substr(0, 5)\n            )\n          );\n          setChartDates(chartDates);\n        } catch {\n          console.log(\"errr\");\n        }\n      }\n    };\n\n    getTable();\n  }, [setMonth, currentMonthNumber, me.teams, me._id]);\n\n  useEffect(() => {\n    const getMydata = async () => {\n      let myData = await userService.getUserDetails();\n      delete myData.data.password;\n      setMe(myData.data);\n      let myStats = await gameService.personal(me._id);\n\n      setStats(myStats.data[0]);\n    };\n    getMydata();\n  }, [setMe, me._id]);\n\n  useEffect(() => {\n    const points = async () => {\n      if (me._id) {\n        let myPoints = await h2hService.getPointsByPlayer(me._id);\n        setPoints(myPoints.data[0]);\n      }\n    };\n    points();\n  }, [me._id]);\n\n  const data = {\n    labels: chartDates,\n    datasets: [\n      {\n        label: \"Profit\",\n        data: chartData,\n        fill: false,\n        backgroundColor: \"#6c14b4\",\n        borderColor: \"#6c14b4\",\n      },\n      {\n        label: \"Cashing\",\n        data: chartCashing,\n        fill: false,\n        backgroundColor: \"#2752ea\",\n        borderColor: \"#2752ea\",\n      },\n    ],\n  };\n  let delayed;\n  const options = {\n    options: {\n      animation: {\n        onComplete: () => {\n          delayed = true;\n        },\n        delay: (context) => {\n          let delay = 0;\n          if (\n            context.type === \"data\" &&\n            context.mode === \"default\" &&\n            !delayed\n          ) {\n            delay = context.dataIndex * 400 + context.datasetIndex * 200;\n          }\n          return delay;\n        },\n      },\n      scales: {\n        x: {\n          type: \"linear\",\n        },\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"container playerStats pb-4\">\n      <PageHeader titleText=\"Player Statistics\" />\n      {_.isEmpty(stats) && (\n        <div className=\"spinner\">\n          <SpinnerCircular\n            size={130}\n            thickness={151}\n            speed={81}\n            color=\"rgba(108, 20, 180, 1)\"\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\n            // enabled={true}\n            enabled={_.isEmpty(stats) ? true : false}\n          />\n        </div>\n      )}\n      {!_.isEmpty(stats) && (\n        <div className=\"\">\n          <div className=\"playerInfo bg-white col-11 col-lg-4\">\n            <span className=\"text-primary ms-3\">\n              {new Date().toLocaleDateString(\"en-GB\")}\n            </span>\n            <div\n              className=\"playerBg d-flex justify-content-around bg-primary\"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <div className=\"pDetails\">\n                <p>\n                  {me.firstName} {me.lastName}\n                </p>\n                <p>{me.nickName}</p>\n                <Link\n                  className=\"text-white text-decoration-none\"\n                  to={`/my-stats/edit_player/${me._id}`}\n                >\n                  <AiFillEdit color=\"white\" className=\"ms-1\" />\n                  Edit Player\n                </Link>\n              </div>\n              <div className=\"pImage\">\n                <img src={`${apiImage}${me.image}`} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"detailedStats d-flex justify-content-between mt-3\">\n              <div className=\"personalStatP\">\n                <p>Total Profit</p>\n                <p>{stats.totalProfit}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Avg Profit</p>\n                <p>{stats.avgProfit ? stats.avgProfit.toFixed(2) : 0}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Total Games</p>\n                <p>{stats.numOfGames}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Games W/ Profit</p>\n                <p>{stats.gamesWithProfit}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Success %</p>\n                <p>{stats.successPercentage}%</p>\n              </div>\n            </div>\n            <div className=\"detailedStatsRow2 d-flex justify-content-between\">\n              <div className=\"personalStatP\">\n                <p>Avg Cashing</p>\n                <p>{stats.avgCashing.toFixed(2)}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Max Profit</p>\n                <p>{stats.maxProfit}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Max Loss</p>\n                <p>{stats.minProfit}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>{currentMonth}-Total Profit</p>\n                <p>{month ? month.totalProfit : \"No games this month\"}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>H2H Points</p>\n                <p>{points.totalPoints}</p>\n              </div>\n            </div>\n            <div className=\"detailedStats d-flex justify-content-between\">\n              <div className=\"personalStatP\">\n                <p>Avg Game Rank</p>\n                <p>{stats.avgGameRank ? stats.avgGameRank.toFixed(2) : 0}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Last Game</p>\n                <p>{new Date(stats.lastGame).toLocaleDateString(\"en-GB\")}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"header\">\n            <h1 className=\"title  mt-2\">Personal Chart</h1>\n          </div>\n          <div className=\"col-lg-4 col-11\">\n            <Line data={data} options={options} />\n          </div>\n          <TotalPersonal details={details} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyStats;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport teamService from \"../../services/teamService\";\nimport { apiImage } from \"../../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport PageHeader from \"../common/pageHeader\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { VscTriangleDown } from \"react-icons/vsc\";\nimport { VscTriangleUp } from \"react-icons/vsc\";\nimport { AiOutlineMinus } from \"react-icons/ai\";\n\nconst CardTable = (props) => {\n  const [data, setData] = useState([]);\n  const [hero, setHero] = useState([]);\n  const [previousPlayerRank, setPreviousPlayerRank] = useState([]);\n  const [headerTitle, setHeaderTitle] = useState(\"\");\n  const [teamImg, setTeamImg] = useState(\"\");\n  const [dataChartDetails, setdataChartDetails] = useState({});\n  const [barChartDetails, setbarChartDetails] = useState({});\n  const [heroPreviousRank, setHeroPreviousRank] = useState([]);\n  const teamId = props.match.params.teamId;\n  const cardName = props.match.params.cardName;\n\n  useEffect(() => {\n    const getTable = async () => {\n      let table = await gameService.cardsData(teamId, cardName);\n      table = table.data;\n\n      if (cardName === \"totalProfit\") {\n        let previousRank = await gameService.previousRank(teamId);\n        setPreviousPlayerRank(previousRank.data);\n        try {\n          const previousHero = previousPlayerRank.find((player) => {\n            return player._id.player_id === hero._id.player_id;\n          });\n          setHeroPreviousRank(previousHero);\n        } catch (err) {\n          setHeroPreviousRank({ previousTableRank: 1 });\n          console.log(\"E\", err);\n        }\n      }\n\n      //merge objects to get previous rank\n      var merged = _.merge(\n        _.keyBy(table, \"_id.player_id\"),\n        _.keyBy(previousPlayerRank, \"_id.player_id\")\n      );\n      var values = _.values(merged);\n      setData(values);\n\n      let accu = [];\n      const barChart = {\n        labels: [],\n        datasets: [\n          {\n            label: `${headerTitle} By Player`,\n            data: [],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.5)\",\n              \"rgba(54, 162, 235, 0.5)\",\n              \"rgba(255, 206, 86, 0.5)\",\n              \"rgba(75, 192, 192, 0.5)\",\n              \"rgba(153, 102, 255, 0.5)\",\n              \"rgba(255, 159, 64, 0.5)\",\n              \"rgba(39, 186, 46, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n              \"rgba(39, 186, 46,1)\",\n              \"rgba(8, 20, 107, 1)\",\n              \"rgba(8, 20, 107, 1)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n      try {\n        await table.forEach((player) => {\n          barChart.labels.push(player._id.name);\n          barChart.datasets[0].data.push(player.cardTitle);\n        });\n        setbarChartDetails(barChart);\n      } catch {\n        console.log(\"err1\");\n      }\n\n      const dataChart = {\n        labels: [],\n        datasets: [\n          {\n            data: [],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.5)\",\n              \"rgba(54, 162, 235, 0.5)\",\n              \"rgba(255, 206, 86, 0.5)\",\n              \"rgba(75, 192, 192, 0.5)\",\n              \"rgba(153, 102, 255, 0.5)\",\n              \"rgba(255, 159, 64, 0.5)\",\n              \"rgba(39, 186, 46, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n              \"rgba(39, 186, 46,1)\",\n              \"rgba(8, 20, 107, 1)\",\n              \"rgba(8, 20, 107, 1)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n      try {\n        await table.forEach((player) => {\n          dataChart.labels.push(player._id.name);\n          accu.push(player.cardTitle);\n        });\n        let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\n        let percentageSum = [];\n        accu.forEach((percent) => {\n          percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\n        });\n        dataChart.datasets[0].data = percentageSum;\n        setdataChartDetails(dataChart);\n      } catch {\n        console.log(\"err1\");\n      }\n\n      let myHero = table.shift();\n\n      let teamPic = await teamService.getTeam(teamId);\n      setTeamImg(teamPic.data);\n\n      switch (cardName) {\n        case \"avgProfit\":\n          setHeaderTitle(\"Average Profit\");\n          break;\n        case \"numOfGames\":\n          setHeaderTitle(\"Total Games\");\n          break;\n        case \"avgCashing\":\n          setHeaderTitle(\"Average  Cashing\");\n          break;\n        case \"gamesWithProfit\":\n          setHeaderTitle(\"Games W/ Profit\");\n          break;\n        default:\n          setHeaderTitle(\"Total Profit\");\n      }\n      setHero(myHero);\n      setData(table);\n    };\n    getTable();\n  }, [setData, teamId, cardName, headerTitle]);\n  let rank = 2;\n  ChartJS.register(ArcElement, Tooltip, Legend);\n\n  return (\n    <div className=\"container pb-4\">\n      <PageHeader titleText={headerTitle} />\n      <div className=\"teamImg d-flex flex-row mb-2\">\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\n      </div>\n      {data.length === 0 && (\n        <div className=\"spinner pt-2\">\n          <SpinnerInfinity\n            size={130}\n            thickness={151}\n            speed={70}\n            color=\"rgba(252, 252, 252, 1)\"\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\n            enabled={data.length === 0 ? true : false}\n          />\n        </div>\n      )}\n\n      {data.length > 0 && hero._id && (\n        <div className=\"col-lg-5 col-12\" id=\"cardTop\">\n          <ol className=\"statsList\">\n            <li\n              className=\"statsHero d-flex w-100\"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <div className=\"statsInfo flex-fill\">\n                <div className=\"pos\">\n                  {headerTitle === \"Total Profit\" ? hero.currentTableRank : 1}.\n                  <span className=\"previousPosition ps-1\">\n                    {hero.previousTableRank - 1 > 0 ? <VscTriangleUp /> : \"\"}\n                  </span>\n                  <span className=\"previousPosition ps-1\">\n                    {hero.previousTableRank - 1 > 0\n                      ? hero.previousTableRank - 1\n                      : \"\"}\n                  </span>\n                </div>\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\n                  {data.length > 0 ? hero._id.name : \"\"}\n                </Link>\n                <div id=\"amount\" className=\"flex-fill\">\n                  {data.length > 0 ? hero.cardTitle : \"\"}\n                </div>\n              </div>\n              <div className=\"heroImage\">\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\n                  <img\n                    src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\n                    alt=\"\"\n                  />\n                </Link>\n              </div>\n            </li>\n            <React.Fragment>\n              {data.map((player) => (\n                <li className=\"statsRow\" key={player._id.name}>\n                  <div className=\"rowPos ps-1\">\n                    {headerTitle === \"Total Profit\" && player.currentTableRank}\n                    {headerTitle === \"Total Profit\" && (\n                      <span id=\"arrows\">\n                        {player.previousTableRank - player.currentTableRank >\n                        0 ? (\n                          <VscTriangleUp />\n                        ) : player.previousTableRank - player.currentTableRank <\n                          0 ? (\n                          <VscTriangleDown className=\"text-danger\" />\n                        ) : (\n                          <AiOutlineMinus className=\"text-warning\" />\n                        )}\n                      </span>\n                    )}\n                    {headerTitle === \"Total Profit\" && (\n                      <span\n                        className={`previousPosition ${\n                          player.previousTableRank - player.currentTableRank < 0\n                            ? \"text-danger\"\n                            : player.previousTableRank -\n                                player.currentTableRank >\n                              0\n                            ? \"text-success\"\n                            : \"text-warning\"\n                        }`}\n                      >\n                        {player.previousTableRank - player.currentTableRank !==\n                        0\n                          ? player.previousTableRank - player.currentTableRank\n                          : 0}\n                      </span>\n                    )}\n                    {headerTitle !== \"Total Profit\" && rank++}\n                  </div>\n                  <Link\n                    className=\"rowImage\"\n                    to={`/players-stats/${player._id.player_id}`}\n                  >\n                    <img\n                      src={\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\n                      }\n                      alt=\"player list row\"\n                    />\n                  </Link>\n                  <div className=\"rowName\">\n                    {data.length > 0 ? player._id.name : \"\"}\n                  </div>\n                  <div\n                    className={\n                      player.cardTitle > 0\n                        ? \"rowProfit text-success\"\n                        : \"rowProfit text-danger\"\n                    }\n                  >\n                    {data.length > 0 ? player.cardTitle : \"\"}\n                  </div>\n                </li>\n              ))}\n            </React.Fragment>\n          </ol>\n          {headerTitle !== \"Average Profit\" && headerTitle !== \"Total Profit\" && (\n            <React.Fragment>\n              <h4 className=\"text-white justify-content-center d-flex\">\n                {headerTitle} In %\n              </h4>\n              <Doughnut data={dataChartDetails} className=\"mb-3 pb-3\" />\n            </React.Fragment>\n          )}\n          <Bar data={barChartDetails} className=\"mb-3\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CardTable;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport teamService from \"../../services/teamService\";\nimport { apiImage } from \"../../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport PageHeader from \"../common/pageHeader\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst SuccessCard = (props) => {\n  const [data, setData] = useState([]);\n  const [hero, setHero] = useState([]);\n  const [teamImg, setTeamImg] = useState(\"\");\n  const [barChartDetails, setbarChartDetails] = useState({});\n  const teamId = props.match.params.teamId;\n\n  useEffect(() => {\n    const getTable = async () => {\n      let table = await gameService.successp(teamId);\n      table = table.data;\n\n      let teamPic = await teamService.getTeam(teamId);\n      setTeamImg(teamPic.data);\n\n      const barChart = {\n        labels: [],\n        datasets: [\n          {\n            label: `Success %  By Player`,\n            data: [],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.5)\",\n              \"rgba(54, 162, 235, 0.5)\",\n              \"rgba(255, 206, 86, 0.5)\",\n              \"rgba(75, 192, 192, 0.5)\",\n              \"rgba(153, 102, 255, 0.5)\",\n              \"rgba(255, 159, 64, 0.5)\",\n              \"rgba(39, 186, 46, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n              \"rgba(39, 186, 46,1)\",\n              \"rgba(8, 20, 107, 1)\",\n              \"rgba(8, 20, 107, 1)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n      try {\n        await table.forEach((player) => {\n          barChart.labels.push(player._id.name);\n          barChart.datasets[0].data.push(player.successPercentage);\n        });\n        setbarChartDetails(barChart);\n      } catch {\n        console.log(\"err1\");\n      }\n\n      let myHero = table.shift();\n\n      setHero(myHero);\n      setData(table);\n    };\n\n    getTable();\n  }, [setData, teamId]);\n\n  let rank = 2;\n\n  return (\n    <div className=\"container pb-4\">\n      <PageHeader titleText=\"Success %\" />\n      <div className=\"teamImg d-flex flex-row mb-2\">\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\n      </div>\n      {data.length === 0 && (\n        <div className=\"spinner pt-2\">\n          <SpinnerInfinity\n            size={130}\n            thickness={151}\n            speed={70}\n            color=\"rgba(252, 252, 252, 1)\"\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\n            enabled={data.length === 0 ? true : false}\n          />\n        </div>\n      )}\n      {data.length > 0 && (\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\n          <ul className=\"statsList \">\n            <li\n              className=\"statsHero d-flex w-100\"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <div className=\"statsInfo flex-fill\">\n                <div className=\"pos\">1.</div>\n                <a href=\"#/\" id=\"heroName\">\n                  {data.length > 0 ? hero._id.name : \"\"}\n                </a>\n\n                <div id=\"amount\" className=\"flex-fill\">\n                  {data.length > 0 ? hero.successPercentage + \" %\" : \"\"}\n                </div>\n              </div>\n              <div className=\"heroImage \">\n                <img\n                  src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\n                  alt=\"\"\n                />\n              </div>\n            </li>\n            <React.Fragment>\n              {data.map((player) => (\n                <li className=\"statsRow d-flex\" key={player._id.name}>\n                  <div className=\"rowPos\">{rank++}.</div>\n                  <div className=\"rowImage\">\n                    <img\n                      src={\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\n                      }\n                      alt=\"player list row\"\n                    />\n                  </div>\n                  <div className=\"rowName\">\n                    {data.length > 0 ? player._id.name : \"\"}\n                  </div>\n                  <div className=\"rowProfitSuccess\">\n                    {data.length > 0 ? player.successPercentage + \" %\" : \"\"}\n                  </div>\n                </li>\n              ))}\n            </React.Fragment>\n          </ul>\n          <Bar data={barChartDetails} className=\"mb-3 pb-3\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SuccessCard;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport { apiImage } from \"../../config.json\";\nimport teamService from \"../../services/teamService\";\nimport PageHeader from \"../common/pageHeader\";\nimport { Bar } from \"react-chartjs-2\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { SpinnerInfinity } from \"spinners-react\";\n\nconst CurrMonthCard = (props) => {\n  const [data, setData] = useState([]);\n  const [hero, setHero] = useState([]);\n  const [teamImg, setTeamImg] = useState(\"\");\n  const [barChartDetails, setbarChartDetails] = useState({});\n\n  let chosenMonth = props.match.params.currentMonth;\n  const monthNumber = (mon) => {\n    return new Date(Date.parse(mon + \" 1, 2012\")).getMonth() + 1;\n  };\n  const teamId = props.match.params.teamId;\n\n  useEffect(() => {\n    const getTable = async () => {\n      let table = await gameService.monthsData(\n        teamId,\n        monthNumber(chosenMonth)\n      );\n      table = table.data;\n      const barChart = {\n        labels: [],\n        datasets: [\n          {\n            label: `Profit By Player`,\n            data: [],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.5)\",\n              \"rgba(54, 162, 235, 0.5)\",\n              \"rgba(255, 206, 86, 0.5)\",\n              \"rgba(75, 192, 192, 0.5)\",\n              \"rgba(153, 102, 255, 0.5)\",\n              \"rgba(255, 159, 64, 0.5)\",\n              \"rgba(39, 186, 46, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n              \"rgba(39, 186, 46,1)\",\n              \"rgba(8, 20, 107, 1)\",\n              \"rgba(8, 20, 107, 1)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n      try {\n        await table.forEach((player) => {\n          barChart.labels.push(player._id.name);\n          barChart.datasets[0].data.push(player.totalProfit);\n        });\n\n        setbarChartDetails(barChart);\n      } catch {\n        console.log(\"err1\");\n      }\n\n      let teamPic = await teamService.getTeam(teamId);\n      setTeamImg(teamPic.data);\n      let myHero = table.shift();\n      setHero(myHero);\n      setData(table);\n    };\n\n    getTable();\n  }, [setData, teamId]);\n\n  let rank = 2;\n\n  return (\n    <div className=\"container pb-3\">\n      <PageHeader titleText={`${chosenMonth} Profit`} />\n      <div className=\"teamImg d-flex flex-row mb-2\">\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\n      </div>\n      {data.length === 0 && (\n        <div className=\"spinner pt-2\">\n          <SpinnerInfinity\n            size={130}\n            thickness={151}\n            speed={70}\n            color=\"rgba(252, 252, 252, 1)\"\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\n            enabled={data.length === 0 ? true : false}\n          />\n        </div>\n      )}\n      {data.length > 0 && hero._id && (\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\n          <ol className=\"statsList \">\n            <li\n              className=\"statsHeroPerHour d-flex w-100\"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <div className=\"statsInfo flex-fill\" id=\"perHourHeroSide\">\n                <div className=\"pos\">1.</div>\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\n                  {data.length > 0 ? hero._id.name : \"\"}\n                </Link>\n                <div id=\"amount\" className=\"flex-fill\">\n                  <div className=\"heroPerHour\">Games Played:</div>\n                  <div className=\"heroPerHour \">{hero.numOfGames}</div>\n                </div>\n                <div id=\"amount\" className=\"flex-fill\">\n                  <p className=\"heroPerHour m-0\">Avg Profit:</p>\n                  <p className=\"heroPerHour m-0\">\n                    {\" \"}\n                    {data.length > 0 ? hero.avgProfit : \"\"}\n                  </p>\n                </div>\n                <div id=\"amount\" className=\"flex-fill\">\n                  <p className=\"heroPerHour m-0\">Total Profit:</p>\n                  <p className=\"heroPerHour m-0\">\n                    {\" \"}\n                    {data.length > 0 ? hero.totalProfit : \"\"}\n                  </p>\n                </div>\n              </div>\n              <div className=\"heroImagePerHour\">\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\n                  <img\n                    src={data.length > 0 ? `${apiImage}${hero._id.image}` : \"\"}\n                    alt=\"\"\n                  />\n                </Link>\n              </div>\n            </li>\n            <li className=\"statsHeaderPerHour d-flex w-100 justify-content-between\">\n              <div>Rank</div>\n              <div>Image</div>\n              <div>Player</div>\n              <div>Games Played</div>\n              <div>Avg Profit</div>\n              <div>Total Profit</div>\n            </li>\n            <React.Fragment>\n              {data.map((player) => (\n                <li className=\"statsRow d-flex\" key={player._id.name}>\n                  <div className=\"rowPos month\">{rank++}.</div>\n                  <div className=\"rowImage month\">\n                    <img\n                      src={\n                        data.length > 0 ? `${apiImage}${player._id.image}` : \"\"\n                      }\n                      alt=\"player list row\"\n                    />\n                  </div>\n                  <div className=\"rowName month p-0\">\n                    {data.length > 0 ? player._id.name : \"\"}\n                  </div>\n                  <div className=\"gamePlayed p-0\">\n                    {data.length > 0 ? player.numOfGames : \"\"}\n                  </div>\n                  <div className=\"gamePlayed p-0\">\n                    {data.length > 0 ? player.avgProfit.toFixed(2) : \"\"}\n                  </div>\n                  <div className=\"rowProfit month\">\n                    {data.length > 0 ? player.totalProfit : \"\"}\n                  </div>\n                </li>\n              ))}\n            </React.Fragment>\n          </ol>\n          {barChartDetails.datasets && (\n            <Bar data={barChartDetails} className=\"mb-3\" />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CurrMonthCard;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport teamService from \"../../services/teamService\";\nimport PageHeader from \"../common/pageHeader\";\nimport { apiImage } from \"../../config.json\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\nconst ProfitsCard = (props) => {\n  const [data, setData] = useState([]);\n  const [hero, setHero] = useState([]);\n  const [teamImg, setTeamImg] = useState(\"\");\n  const [dataChartDetails, setdataChartDetails] = useState({});\n\n  const teamId = props.match.params.teamId;\n  useEffect(() => {\n    const getTable = async () => {\n      let table = await gameService.profits(teamId);\n      table = table.data;\n\n      let aggregatedProfits = await gameService.agg_profits(teamId);\n      aggregatedProfits = aggregatedProfits.data;\n\n      let accu = [];\n      const dataChart = {\n        labels: [],\n        datasets: [\n          {\n            data: [],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.5)\",\n              \"rgba(54, 162, 235, 0.5)\",\n              \"rgba(255, 206, 86, 0.5)\",\n              \"rgba(75, 192, 192, 0.5)\",\n              \"rgba(153, 102, 255, 0.5)\",\n              \"rgba(255, 159, 64, 0.5)\",\n              \"rgba(39, 186, 46, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n              \"rgba(8, 20, 107, 0.5)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n              \"rgba(255, 159, 64, 1)\",\n              \"rgba(39, 186, 46,1)\",\n              \"rgba(8, 20, 107, 1)\",\n              \"rgba(8, 20, 107, 1)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n      try {\n        await aggregatedProfits.forEach((player) => {\n          dataChart.labels.push(player._id.name);\n          accu.push(player.totalProfit);\n        });\n        let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\n        let percentageSum = [];\n        accu.forEach((percent) => {\n          percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\n        });\n        dataChart.datasets[0].data = percentageSum;\n        setdataChartDetails(dataChart);\n      } catch (error) {\n        console.log(error, \"err1\");\n      }\n\n      let teamPic = await teamService.getTeam(teamId);\n      setTeamImg(teamPic.data);\n\n      const handleDates = (list, prop) => {\n        return list.map((item) => {\n          const obj = Object.assign({}, item);\n          obj[prop] = new Date(obj[prop]).toLocaleDateString();\n          return obj;\n        });\n      };\n      table = handleDates(table, \"createdAt\");\n      let myHero = table.shift();\n      setHero(myHero);\n      setData(table);\n    };\n\n    getTable();\n  }, [teamId]);\n\n  let rank = 2;\n  ChartJS.register(ArcElement, Tooltip, Legend);\n\n  return (\n    <div className=\"container  pb-4\">\n      <PageHeader titleText=\"Top 10 Profits\" />\n      <div className=\"teamImg d-flex flex-row mb-2\">\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\n      </div>\n      <div className=\"col-lg-4 col-12\" id=\"cardTop\">\n        <ul className=\"statsList \">\n          <li\n            className=\"statsHero d-flex w-100\"\n            style={{\n              backgroundImage: `url(${\n                process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n              })`,\n            }}\n          >\n            <div className=\"statsInfo flex-fill\">\n              <div className=\"pos\">1.</div>\n              <a href=\"#/\" id=\"heroName\">\n                {data.length > 0 ? hero.players.name : \"\"}\n              </a>\n              <div className=\"heroDate ps-1\">\n                {data.length > 0 ? hero.createdAt : \"\"}\n              </div>\n              <div id=\"amount\" className=\"flex-fill\">\n                {data.length > 0 ? hero.players.profit : \"\"}\n              </div>\n            </div>\n            <div className=\"heroImage \">\n              <img\n                src={data.length > 0 ? `${apiImage}${hero.players.image}` : \"\"}\n                alt=\"\"\n              />\n            </div>\n          </li>\n          <React.Fragment>\n            {data.map((player) => (\n              <li\n                className=\"statsRow d-flex\"\n                key={player.createdAt + player.players.profit}\n              >\n                <div className=\"rowPosTop\">{rank++}.</div>\n                <div className=\"rowImageTop\">\n                  <img\n                    src={\n                      data.length > 0\n                        ? `${apiImage}${player.players.image}`\n                        : \"\"\n                    }\n                    alt=\"player list row\"\n                  />\n                </div>\n                <div className=\"rowNameTop\">\n                  {data.length > 0 ? player.players.name : \"\"}\n                </div>\n                <div className=\"rowDate\">\n                  {data.length > 0 ? player.createdAt : \"\"}\n                </div>\n                <div className=\"rowProfitTop\">\n                  {data.length > 0 ? player.players.profit : \"\"}\n                </div>\n              </li>\n            ))}\n          </React.Fragment>\n        </ul>\n        <h7 className=\"text-white justify-content-center d-flex\">\n          Players Profit In % From Top 10 Profits\n        </h7>\n        {dataChartDetails.hasOwnProperty(\"labels\") ? (\n          <Doughnut data={dataChartDetails} className=\"mb-3 pb-3\" />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfitsCard;\n","import React, { useState, useEffect} from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport PageHeader from \"../common/pageHeader\";\nimport * as Yup from \"yup\";\nimport http from \"../../services/httpService\";\nimport { apiUrl } from \"../../config.json\";\nimport { toast } from \"react-toastify\";\nimport userService from \"../../services/userService\";\nimport { Redirect } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  nickName: \"\",\n  email: \"\",\n  password: \"\",\n  image: \"\",\n};\n\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required(\"Required\"),\n  lastName: Yup.string().required(\"Required\"),\n  nickName: Yup.string().required(\"Required\"),\n  image: Yup.string(),\n  email: Yup.string().email(\"Invaild email format\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password must be min 6 chars\")\n    .required(\"Required\"),\n});\n\n\nconst SignUp = (props) => {\n  const handleLogin = async googleData => {\n    console.log(googleData);\n    setFields({...fields,\n    firstName: googleData.profileObj.givenName,\n    lastName: googleData.profileObj.familyName,\n    nickName: \"\",\n    email: googleData.profileObj.email,\n    password: Date.now(),\n    fakeId: Date.now()});\n    setUseGoogle(true);\n    setToken(googleData.tokenId)\n  }\n\n  const onSubmit = async (values, onSubmitProps) => {\n    onSubmitProps.setSubmitting(false);\n    let data = new FormData();\n    data.append(\"firstName\", values.firstName);\n    data.append(\"lastName\", values.lastName);\n    data.append(\"nickName\", values.nickName);\n    data.append(\"email\", values.email);\n    data.append(\"password\", values.password);\n    if (values.image) {\n      data.append(\"image\", values.image);\n    }\n\n    try {\n      if (!values.image) delete values.image;\n      await http.post(`${apiUrl}/users`, data);\n      useGoogle ? \n        await userService.loginGoogle(values.email,token) :\n        await userService.login(values.email, values.password) \n      window.location = \"/\";\n      toast(\"A new acoount is opened\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        setErrors({ email: \"This email is taken\" });\n        console.error(ex);\n      }\n    }\n  };\n\n  const [token,setToken] = useState(\"\");\n  const [errors, setErrors] = useState({ email: \"\", image: \"\" });\n  const [useGoogle, setUseGoogle] = useState(false);\n  const [fields, setFields] = useState(initialValues);\n  useEffect(() => {console.log(fields)})\n  if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"Sign Up\" />\n      <GoogleLogin\n        clientId='310842465793-hdu8fm8luvho3qds0ce4chg9c3696d4d.apps.googleusercontent.com'\n        onSuccess={handleLogin}\n        buttonText=\"Sign UP with Google\"\n      />\n      <Formik\n        enableReinitialize\n        initialValues={fields}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        validateOnMount\n      >\n        {(formik) => {\n          return (\n            <div className=\"row mt-4\">\n              <div className=\"col-10 col-lg-4\">\n                <Form>\n                  <div className=\"form-control d-flex flex-column bg-primary\">\n                    <label htmlFor=\"First Name\">First Name</label>\n                    <Field type=\"text\" id=\"firstName\" name=\"firstName\" />\n                    <ErrorMessage\n                      name=\"firstName\"\n                      component=\"div\"\n                      className=\"error\"\n                    />\n                  </div>\n\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\n                    <label htmlFor=\"Last Name\">Last Name</label>\n                    <Field type=\"text\" id=\"lastName\" name=\"lastName\" />\n                    <ErrorMessage\n                      name=\"lastName\"\n                      component=\"div\"\n                      className=\"error\"\n                    />\n                  </div>\n\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\n                    <label htmlFor=\"Nick Name\">Nick Name</label>\n                    <Field type=\"text\" id=\"nickName\" name=\"nickName\" />\n                    <ErrorMessage\n                      name=\"nickName\"\n                      component=\"div\"\n                      className=\"error\"\n                    />\n                  </div>\n\n                  <div className=\"form-control d-flex flex-column  bg-primary\">\n                    <label htmlFor=\"email\">E-mail</label>\n                    <Field type=\"email\" id=\"email\" name=\"email\" />\n                    <span className=\"error\">{errors.email}</span>\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className=\"error\"\n                    />\n                  </div>\n                  {(useGoogle) ? <div></div> :\n                    <div className=\"form-control d-flex flex-column    bg-primary mb-3\">\n                      <label htmlFor=\"password\">Password</label>\n                      <Field type=\"password\" id=\"password\" name=\"password\" />\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </div>\n                  }\n                  <div className=\"form-control d-flex flex-column bg-primary mb-3\">\n                    <label htmlFor=\"image\">Image</label>\n                    <input\n                      className=\"row mb-4 inputFile\"\n                      type=\"file\"\n                      name=\"image\"\n                      onChange={(event) => {\n                        formik.setFieldValue(\"image\", event.target.files[0]);\n                      }}\n                    ></input>\n                    <span className=\"error\">{errors.image}</span>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    disabled={!formik.isValid || formik.isSubmitting}\n                  >\n                    Submit\n                  </button>\n                </Form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from \"react\";\nimport PageHeader from \"../common/pageHeader\";\nimport h2hService from \"../../services/h2hService\";\nimport gameService from \"../../services/gameService\";\nimport { apiImage } from \"../../config.json\";\n\nconst H2hGame = ({ gameId }) => {\n  const [players, setPlayers] = useState([]);\n  const [game, setGame] = useState({});\n\n  useEffect(() => {\n    const h2h = async () => {\n      try {\n        let playersInGame = await h2hService.getByGameId(gameId);\n        playersInGame = await playersInGame.data[0].players;\n        setPlayers(playersInGame);\n      } catch (error) {\n        console.log(\"error\");\n      }\n    };\n    h2h();\n  }, []);\n\n  useEffect(() => {\n    const game = async () => {\n      try {\n        let gameForH2h = await gameService.gameById(gameId);\n        setGame(gameForH2h.data);\n      } catch (error) {\n        console.log(\"Error\");\n      }\n    };\n    game();\n  }, []);\n\n  return (\n    <div className=\"pb-1\">\n      <PageHeader titleText=\"Head 2 Head\" />\n      <div className=\"col-lg-8 col-12\" id=\"cardTop\">\n        <ol className=\"statsList \">\n          <li\n            id=\"gameLi\"\n            className=\"statsHero d-flex\"\n            style={{\n              backgroundImage: `url(${\n                process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n              })`,\n            }}\n          >\n            <div className=\"gameH2h d-flex w-100 justify-content-evenly\">\n              <div className=\"player1\">Player 1</div>\n              <div className=\"player2\">Player 2</div>\n            </div>\n          </li>\n          {players.length > 0 &&\n            players.map((p) => (\n              <div\n                className=\"statsRow w-100 justify-content-evenly\"\n                key={p[0].id}\n              >\n                <div className=\"rowPlayer newGame\">\n                  <img src={`${apiImage}${p[0].image}`} alt=\"\" />\n                  <p className=\"playerNameOnGame m-0 text-primary\">\n                    {p[0].name}\n                  </p>\n                </div>\n                <p className=\"d-flex align-items-center\">\n                  <strong>Vs</strong>\n                </p>\n                <div className=\"rowPlayer newGame\">\n                  <img src={`${apiImage}${p[1].image}`} alt=\"\" />\n                  <p className=\"playerNameOnGame m-0 text-primary\">\n                    {p[1].name}\n                  </p>\n                </div>\n              </div>\n            ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default H2hGame;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport h2hService from \"../../services/h2hService\";\nimport userService from \"../../services/userService\";\nimport PageHeader from \"../common/pageHeader\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport { apiImage } from \"../../config.json\";\nimport H2hGame from \"../h2h/h2hGame\";\nimport Swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\nimport CashingDetails from \"./cashingDetails\";\nimport { Link } from \"react-router-dom\";\n\nconst NewGame = (props) => {\n    const [data, setData] = useState({});\n    const [id, setId] = useState(\"\");\n    const [me, setMe] = useState({});\n    const [manager, setManager] = useState(\"\");\n\n    useEffect(() => {\n        const ac = new AbortController();\n        const players = async () => {\n            const getGameManager = await userService.getUserDetails();\n            me.id = getGameManager.data._id;\n            me.name = getGameManager.data.nickName;\n            setMe(me);\n\n            try {\n                let playersInGame = await gameService.gameById(props.match.params.gameId);\n                setData(playersInGame.data);\n                setId(playersInGame.data._id);\n                return () => ac.abort(); // Abort both fetches on unmount\n            } catch (e) {\n                console.log(e, \"EE\");\n            }\n        };\n\n        players();\n    }, []);\n\n    useEffect(() => {\n        const manager = data.game_manager;\n        setManager(manager);\n    }, [data.game_manager]);\n\n    const addCashing = (playerId, playerName, playerImage) => {\n        Swal.fire({\n            title: `Add Cashing to ${playerName}?`,\n            imageUrl: `${apiImage}${playerImage}`,\n            imageWidth: 100,\n            imageHeight: 100,\n            imageAlt: \"Custom image\",\n            showDenyButton: true,\n            showCancelButton: true,\n            confirmButtonColor: \"#00a9ff\",\n            denyButtonColor: \"#08e046\",\n            confirmButtonText: \"50\",\n            denyButtonText: `100`,\n        }).then((result) => {\n            if (result.isConfirmed) {\n                let game = { ...data };\n                game.gameId = props.match.params.gameId;\n                if (game.gameId) {\n                    game.isOpen = true;\n                    let player = data.players.find((e) => playerId === e.id);\n                    player.cashing += 50;\n                    player.numOfCashing += 1;\n                    delete game._id;\n                    delete game.__v;\n                    let cashingDetails = {\n                        playerId: player.id,\n                        playerName: player.name,\n                        playerCashing: 50,\n                        time: new Date(),\n                    };\n                    if (game.cashing_details) {\n                        game.cashing_details.push(cashingDetails);\n                    } else {\n                        game.cashing_details = [];\n                        game.cashing_details.push(cashingDetails);\n                    }\n                    setData(game);\n\n                    gameService.updateGame(game.gameId, game);\n                    const chips = new Audio(process.env.PUBLIC_URL + `sounds/chips.mp3`);\n                    chips.play();\n                    toast.success(`💸 💸Added 50 to ${player.name}`, {\n                        position: \"top-center\",\n                        autoClose: 2000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                }\n            } else if (result.isDenied) {\n                let game = { ...data };\n                game.gameId = props.match.params.gameId;\n                if (game.gameId) {\n                    game.isOpen = true;\n                    let player = data.players.find((e) => playerId === e.id);\n                    player.cashing += 100;\n                    player.numOfCashing += 2;\n                    delete game._id;\n                    delete game.__v;\n                    let cashingDetails = {\n                        playerId: player.id,\n                        playerName: player.name,\n                        playerCashing: 100,\n                        time: new Date(),\n                    };\n                    if (game.cashing_details) {\n                        game.cashing_details.push(cashingDetails);\n                    } else {\n                        game.cashing_details = [];\n                        game.cashing_details.push(cashingDetails);\n                    }\n                    setData(game);\n\n                    gameService.updateGame(game.gameId, game);\n                    const chips = new Audio(process.env.PUBLIC_URL + `sounds/chips.mp3`);\n                    chips.play();\n                    toast.success(`💸 💸Added 100 to ${player.name}`, {\n                        position: \"top-center\",\n                        autoClose: 2000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                }\n            }\n        });\n    };\n\n    const undoCashing = (playerId) => {\n        let player = data.players.find((e) => playerId === e.id);\n        if (player.cashing > 0) {\n            let game = { ...data };\n            game.gameId = props.match.params.gameId;\n            delete game._id;\n            delete game.__v;\n            //remove the player's cashing from cashing details\n            const indexOfLastPlayerCashing = game.cashing_details.map((el) => el.playerId).lastIndexOf(playerId);\n\n            const playersLastCashing = game.cashing_details[indexOfLastPlayerCashing].playerCashing;\n\n            game.cashing_details.splice(indexOfLastPlayerCashing, 1);\n\n            player.cashing -= playersLastCashing;\n            player.numOfCashing -= 1;\n            setData(game);\n            const cancel = new Audio(process.env.PUBLIC_URL + `sounds/cancel.mp3`);\n            cancel.play();\n            gameService.updateGame(game.gameId, game);\n        }\n    };\n\n    const handleChange = (playerId, e) => {\n        let play = { ...data };\n        let player = play.players.find((e) => playerId === e.id);\n        player.cashedOut = true;\n\n        e.target.value ? (player.cashInHand = parseInt(e.target.value)) : (player.cashInHand = 0);\n        player.profit = player.cashInHand - player.cashing;\n        let game = play;\n        setData(game);\n    };\n\n    const cashOutPlayer = (playerId) => {\n        let player = data.players.find((e) => playerId === e.id);\n        player.finishedGame = true;\n        player.cashOutTime = new Date();\n        let game = { ...data };\n        game.gameId = props.match.params.gameId;\n        delete game._id;\n        delete game.__v;\n        delete game.playerCashedOut;\n        gameService.updateGame(game.gameId, game);\n        game.playerCashedOut = true;\n        setData(game);\n\n        /// ! add cashing details\n    };\n\n    const editCashing = (playerId) => {\n        let player = data.players.find((e) => {\n            return playerId === e.id;\n        });\n        player.finishedGame = false;\n        player.edit = true;\n        let game = { ...data };\n        setData(game);\n    };\n\n    const updateGame = () => {\n        Swal.fire({\n            title: \"sure you want to end game?\",\n            text: \"you won't be able to cancel\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Yes\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                let game = { ...data };\n                game.gameId = props.match.params.gameId;\n                delete game._id;\n                delete game.playerCashedOut;\n                game.isOpen = false;\n                game.players.sort((a, b) => b.profit - a.profit);\n                let gameRank = 1;\n                game.players.map((p) => (p.gameRank = gameRank++));\n                setData(game);\n                gameService.updateGame(game.gameId, game).then((res) => {\n                    h2hService.updateH2h(game.gameId);\n                    setData(res.data);\n                });\n                props.history.replace(`/last-game/${data.team_id}`);\n            }\n        });\n    };\n\n    const takeControl = async () => {\n        Swal.fire({\n            title: \"Take control of game?\",\n            text: \"\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Yes\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                setManager(me);\n                if (manager)\n                    toast.success(`🤟 ${me.name} is now manager`, {\n                        position: \"top-center\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n            }\n        });\n        await gameService.updateManager(id, me);\n    };\n\n    if (!id) {\n        return <div className=\"text-primary\">No Games</div>;\n    } else {\n        return (\n            <div className=\"container\">\n                <PageHeader titleText=\"Game No.\" />\n                <p className=\"text-danger\">{id}</p>\n                <p className=\"text-primary\">\n                    Started At:{\" \"}\n                    {`${new Date(data.createdAt).toLocaleDateString(\"en-GB\")}\n        ${new Date(data.createdAt).toLocaleString(\"en-US\", {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: false,\n        })}`}\n                </p>\n                <p className=\"m-0 mb-1 p-0 text-primary\">\n                    Game Manager:<span>{manager ? manager.name : \"\"}</span>\n                </p>\n                {data.length < 1 && (\n                    <div className=\"spinner pt-2\">\n                        <SpinnerInfinity\n                            size={130}\n                            thickness={151}\n                            speed={70}\n                            color=\"rgba(252, 252, 252, 1)\"\n                            secondaryColor=\"rgba(108, 20, 180, 1)\"\n                            enabled={data.length === 0 ? true : false}\n                        />\n                    </div>\n                )}\n\n                {data.players && manager.id === me.id && (\n                    <div className=\"col-lg-8 col-12\" id=\"newGameTop\">\n                        <Link className=\"button-72 mb-2 px-\" to={`/new-game/${data.team_id}`}>\n                            Add/Remove Players\n                        </Link>\n                        {/* <div\n              className=\"alert alert-primary alert-dismissible \"\n              role=\"alert\"\n            >\n              <span\n                type=\"button\"\n                className=\"close\"\n                data-bs-dismiss=\"alert\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\" className=\"text-black\">\n                  &times;\n                </span>\n              </span>\n              <strong>New Updates 21/12/22:</strong>\n              <span className=\"text-primary\">\n                <ol>\n                  <li>added option to cash in 100 or 50</li>\n                  <li>\n                    added option to cash out single player while game is on\n                  </li>\n                </ol>\n              </span>\n            </div> */}\n                        <ol className=\"statsList\">\n                            <li\n                                id=\"gameLi\"\n                                className=\"statsHero d-flex\"\n                                style={{\n                                    backgroundImage: `url(${process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"})`,\n                                }}\n                            >\n                                <div className=\"gameHeaders d-flex justify-content-evenly\">\n                                    <div className=\"P1\">Player</div>\n                                    <div className=\"add1\">Add Cash</div>\n                                    <div className=\"Cashing1\">Cashing</div>\n                                    <div className=\"Hand1\">Cash In Hand</div>\n                                    <div className=\"Profit1\">Profit</div>\n                                    <div className=\"\">Cancel </div>\n                                </div>\n                            </li>\n                            <React.Fragment>\n                                {data.players.map((player) => (\n                                    <li className=\"statsRows w-100 d-flex justify-content-evenly\" key={player.id}>\n                                        <div className=\"rowPlayer newGame\">\n                                            <img src={`${apiImage}${player.image}`} alt=\"player\" />\n                                            <p className=\"playerNameOnGame m-0 text-primary\">{player.name}</p>\n                                        </div>\n                                        {!player.finishedGame ? (\n                                            <i\n                                                className=\"fas fa-money-bill-wave\"\n                                                onClick={() => addCashing(player.id, player.name, player.image)}\n                                            >\n                                                $$$\n                                            </i>\n                                        ) : (\n                                            <p className=\"text-danger playerProfit\">Out</p>\n                                        )}\n\n                                        <div className=\"rowCash\">{player.cashing}</div>\n                                        <div className=\"rowCashInHand\">\n                                            {player.finishedGame ? (\n                                                <p className=\"text-primary m-0 text-center\">{player.cashInHand}</p>\n                                            ) : (\n                                                <input\n                                                    type=\"number\"\n                                                    className=\"cashInHand\"\n                                                    onChange={(e) => handleChange(player.id, e)}\n                                                    value={\n                                                        player.cashInHand\n                                                            ? player.cashInHand\n                                                            : !player.cashInHand && player.cashedOut\n                                                            ? 0\n                                                            : \"\"\n                                                    }\n                                                />\n                                            )}\n                                        </div>\n                                        <div className=\"playerProfit \">{player.profit ? player.profit : 0}</div>\n                                        {player.cashedOut && !player.finishedGame && (\n                                            <i\n                                                className=\"fa-solid fa-floppy-disk text-primary\"\n                                                onClick={(e) => cashOutPlayer(player.id)}\n                                            >\n                                                Save\n                                            </i>\n                                        )}\n                                        {!player.cashedOut && !player.finishedGame && (\n                                            <i className=\"fas fa-minus-circle\" onClick={() => undoCashing(player.id)}>\n                                                Cancel\n                                            </i>\n                                        )}\n                                        {player.cashedOut && player.finishedGame && (\n                                            <i\n                                                className=\"fa-solid fa-pen-to-square text-success\"\n                                                onClick={() => editCashing(player.id)}\n                                            >\n                                                Edit\n                                            </i>\n                                        )}\n                                    </li>\n                                ))}\n                            </React.Fragment>\n                            <li className=\"statsRows w-100 d-flex justify-content-evenly\">\n                                <div className=\"rowPlayer text-primary\"></div>\n                                <div className=\"fas fa-money-bill-wave text-primary\">Total</div>\n                                <div className=\"rowCash text-primary\">\n                                    {data.players.reduce((a, b) => {\n                                        return a + b.cashing;\n                                    }, 0)}\n                                </div>\n                                <div className=\"rowCashInHand text-center\">\n                                    {\" \"}\n                                    {data.players.reduce((a, b) => {\n                                        return a + b.cashInHand;\n                                    }, 0)}\n                                </div>\n                                <div className=\"playerProfit text-primary\">\n                                    {data.players.reduce((a, b) => {\n                                        return a + b.profit;\n                                    }, 0)}\n                                </div>\n                                <div className=\"fas fa-minus-circle text-white\">Cancel</div>\n                            </li>\n                            {data.playerCashedOut && (\n                                <li className=\"statsRows w-100 d-flex justify-content-evenly\">\n                                    <div className=\"cashedOutPlayers\">After Cashed Out Players</div>\n                                    <div className=\"rowCash text-primary\">\n                                        {data.players.reduce((a, b) => {\n                                            return a + b.cashing - b.cashInHand;\n                                        }, 0)}\n                                    </div>\n                                    <div className=\"rowCashInHand\"></div>\n                                    <div className=\"playerProfit text-primary\"></div>\n                                    <div className=\"fas fa-minus-circle text-white\">Cancel</div>\n                                </li>\n                            )}\n\n                            <div className=\"buttonsGame d-flex justify-content-between\">\n                                <div\n                                    className=\"btn btn-primary update m-2\"\n                                    onClick={() => {\n                                        updateGame();\n                                    }}\n                                >\n                                    Update Game\n                                </div>\n                                <div className=\"btn btn-danger update m-2\">Reset Game</div>\n                            </div>\n                        </ol>\n                    </div>\n                )}\n                {data.players && manager.id !== me.id && (\n                    <button\n                        className=\"button-72\"\n                        onClick={() => {\n                            takeControl();\n                        }}\n                    >\n                        Take control of game\n                    </button>\n                )}\n\n                <H2hGame gameId={data._id} className=\"mb-2\" />\n                <CashingDetails gameId={id} updated={data} />\n            </div>\n        );\n    }\n};\n\nexport default NewGame;\n","import React, { useState, useEffect } from \"react\";\nimport ClockSpinner from \"../clockSpinner\";\nimport { Link } from \"react-router-dom\";\nimport gameService from \"../../../services/gameService\";\nimport { apiImage } from \"../../../config.json\";\nimport PageHeader from \"../../common/pageHeader\";\n\nconst NewStatsCard = (props) => {\n    const [cardData, setCardData] = useState([]);\n    const [cardHeader, setCardHeader] = useState(\"\");\n    const [leaderData, setLeaderData] = useState([]);\n    const [data, setData] = useState([]);\n    const [headerDetails, setHeaderDetails] = useState([]);\n    const [dates, setDates] = useState({});\n\n    useEffect(() => {\n        async function getCardData() {\n            const teamId = props.match.params.teamId;\n            const query = new URLSearchParams(props.location.search);\n            const stats = query.get(\"stats\");\n            const cardTitle = query.get(\"cardTitle\");\n            let dataParam = query.get(\"data\");\n            setData(dataParam.split(\",\"));\n            let leaderParam = query.get(\"leaderData\");\n            setLeaderData(leaderParam.split(\",\"));\n            let headerData = query.get(\"headerData\");\n            setHeaderDetails(headerData.split(\",\"));\n            let seasonDates = query.get(\"seasonDates\");\n            setDates(JSON.parse(seasonDates));\n            console.log(\"seasonDates\", dates);\n            let month = query.get(\"month\");\n            const { data: cardStats } = await gameService.getCardStats(teamId, stats, month, JSON.parse(seasonDates));\n            setCardData(cardStats);\n            setCardHeader(cardTitle);\n        }\n        getCardData();\n    }, []);\n\n    return (\n        <div className=\"statsCardContainer py-3\">\n            {cardData.length === 0 && (\n                <div className=\"my-5 py-5\">\n                    <ClockSpinner />\n                </div>\n            )}\n            {cardData.length > 0 && (\n                <div className=\"statsDashboard pb-3\">\n                    <div className=\"ps-3\">\n                        <PageHeader titleText={cardHeader} />\n                    </div>\n                    <div className=\"cardHeaderDates d-flex justify-content-around\">\n                        <p className=\"\">{dates?.startDate}</p>\n                        <p className=\"\">{dates?.endDate}</p>\n                    </div>\n                    <div className=\"mx-3 newCardContainer\">\n                        <div className=\"newLeaderContainer d-flex justify-content-around\">\n                            <div className=\"leaderImage m-3\">\n                                <Link to={`/players-stats/${cardData[0]._id.id}`}>\n                                    <img src={`${apiImage}${cardData[0]._id.image}`} alt=\"leader\" />\n                                </Link>\n                            </div>\n                            <div className=\"leaderDetail pe-4\">\n                                <p>1.</p>\n                                <p className=\"leaderName\">{cardData[0]._id.name}</p>\n                                <p className=\"leaderProfit\">\n                                    {leaderData[0]}: <span>{cardData[0][data[0]]}</span>\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[1]}: {cardData[0][data[1]]}\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[2]}:{cardData[0][data[2]]}\n                                </p>\n                                <div>\n                                    {leaderData[3] && (\n                                        <p className=\"p-0\">\n                                            {leaderData[3]}:{cardData[0][data[3]]}\n                                        </p>\n                                    )}\n                                </div>\n                                <div>\n                                    {leaderData[4] && (\n                                        <p className=\"p-0\">\n                                            {leaderData[4]}:{cardData[0][data[4]]}\n                                        </p>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        <ul start=\"2\" className=\"bg-white m-0  p-0 listPlayers\">\n                            <li className=\"text-primary  d-flex\">\n                                <div className=\"ms-2 fixedHeader d-flex justify-content-around\">\n                                    <p>Rank</p>\n                                    <p>Image</p>\n                                    <p className=\"headerName\">Player</p>\n                                </div>\n                                <div className=\"dynamicStatsCardHeader  d-flex justify-content-between\">\n                                    <p>{headerDetails[0]}</p>\n                                    <p>{headerDetails[1]}</p>\n                                    <p>{headerDetails[2]}</p>\n                                    <p>{headerDetails[3]}</p>\n                                    <p>{headerDetails[4]}</p>\n                                </div>\n                            </li>\n                            {cardData.slice(1).map((card, index) => (\n                                <li className=\"d-flex\" key={index}>\n                                    <div className=\"ms-2 fixedPlayerStats d-flex justify-content-around\">\n                                        <p className=\"rank text-center\">{index + 2}.</p>\n                                        <div className=\"ms-2 listPlayerStats my-1\">\n                                            <Link to={`/players-stats/${card._id.id}`}>\n                                                <img src={`${apiImage}${card._id.image}`} alt=\"\" />\n                                            </Link>\n                                        </div>\n                                        <p className=\"ms-1 listPlayersName\">{card._id.name}</p>\n                                    </div>\n                                    <div className=\"dynamicStatsCard d-flex justify-content-between\">\n                                        <p className=\"text-bold\">{card[data[0]]}</p>\n                                        <p>{card[data[1]]}</p>\n                                        <p>{card[data[2]]}</p>\n                                        <p className=\"thirdList\">{card[data[3]]}</p>\n                                        <p>{card[data[4]]}</p>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NewStatsCard;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../services/gameService\";\nimport PageHeader from \"../components/common/pageHeader\";\nimport H2hGameEnd from \"./h2h/h2hGameEnd\";\nimport { apiImage } from \"../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport { Link } from \"react-router-dom\";\n\nconst GameEnd = (props) => {\n    const teamId = props.match.params.teamId;\n    const [data, setData] = useState([]);\n    const [lastGame, setLastGame] = useState([]);\n    useEffect(() => {\n        const getLastGame = async () => {\n            let game = await gameService.lastGame(props.match.params.teamId);\n            game = game.data[0];\n            game.players.sort((a, b) => b.profit - a.profit);\n            setData(game.players);\n            setLastGame(game);\n        };\n\n        getLastGame();\n    }, [setData, props.match.params.teamId]);\n    let Rank = 1;\n\n    return (\n        <div className=\"container\">\n            <PageHeader titleText=\"Last Game\" />\n\n            {data.length === 0 && lastGame._id && (\n                <div className=\"spinner pt-2\">\n                    <SpinnerInfinity\n                        size={130}\n                        thickness={151}\n                        speed={70}\n                        color=\"rgba(252, 252, 252, 1)\"\n                        secondaryColor=\"rgba(108, 20, 180, 1)\"\n                        enabled={data.length === 0 ? true : false}\n                    />\n                </div>\n            )}\n            {data.length > 0 && (\n                <div className=\"col-lg-4 col-10\" id=\"card-top\">\n                    <ol className=\"statsList\">\n                        <li\n                            id=\"lastGameHero\"\n                            className=\"statsHero d-flex flex-column\"\n                            style={{\n                                backgroundImage: `url(${process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"})`,\n                            }}\n                        >\n                            <p>\n                                {new Date(lastGame.createdAt).toLocaleDateString(\"en-GB\") +\n                                    \"  \" +\n                                    new Date(lastGame.createdAt).toLocaleString(\"en-US\", {\n                                        hour: \"2-digit\",\n                                        minute: \"2-digit\",\n                                        hour12: false,\n                                    }) +\n                                    \" - \" +\n                                    new Date(lastGame.updatedAt).toLocaleString(\"en-US\", {\n                                        hour: \"2-digit\",\n                                        minute: \"2-digit\",\n                                        hour12: false,\n                                    })}\n                            </p>\n                            <div className=\"stats d-flex w-100 justify-content-between\" id=\"lGame\">\n                                <p>Player</p>\n                                <p>Name</p>\n                                <p>Cashing</p>\n                                <p>Profit</p>\n                            </div>\n                        </li>\n                        <React.Fragment>\n                            {data.map((player) => (\n                                <li className=\"statsRow\" key={player.id}>\n                                    <div className=\"rowPosLast\">{Rank++}.</div>\n                                    <div className=\"rowImage\">\n                                        <img\n                                            src={data.length > 0 ? `${apiImage}${player.image}` : \"\"}\n                                            alt=\"player list row\"\n                                        />\n                                    </div>\n                                    <div className=\"rowName\" id=\"lGameName\">\n                                        {data.length > 1 ? player.name : \"\"}\n                                    </div>\n                                    <div className=\"rowCashing\">{data.length > 1 ? player.cashing : \"\"}</div>\n                                    <div\n                                        className={\n                                            player.profit > 0 ? \"rowProfit text-success\" : \"rowProfit text-danger\"\n                                        }\n                                    >\n                                        {player.profit}\n                                    </div>\n                                </li>\n                            ))}\n                        </React.Fragment>\n                    </ol>\n                    <H2hGameEnd gameId={lastGame._id} header=\"Head 2 Head\" />\n                    <Link className=\"btn btn-primary mb-3\" to={`/newMainTable/${teamId}`}>\n                        Team Tables & Statistics\n                        <i className=\"ps-2 fas fa-angle-double-right\"></i>\n                    </Link>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default GameEnd;\n","import React, { useState, useEffect } from \"react\";\nimport h2hService from \"../../services/h2hService\";\nimport _ from \"lodash\";\nimport PageHeader from \"../common/pageHeader\";\nimport { apiImage } from \"../../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport ReactPaginate from \"react-paginate\";\n\nconst H2hGameCard = ({ team }) => {\n  const [games, setGames] = useState();\n  const [gamesData, setGamesData] = useState();\n  const [perPage, setPerPage] = useState(3);\n  const [page, setPage] = useState(0);\n  const [pages, setPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const lastH2h = async () => {\n      try {\n        let aGames = await h2hService.teamAllGames(team);\n        setGamesData(aGames.data);\n        let allGames = aGames.data.map((d) => _.flatten(d.players));\n        setGames(allGames);\n        setLoading(true);\n        setPages(Math.floor(games.length / perPage));\n      } catch (error) {\n        // console.log(\"error1\");\n      }\n    };\n    lastH2h();\n  }, [team, perPage, games ? games.length : \"\"]);\n\n  let created = 0;\n  let items = [];\n  items = gamesData\n    ? gamesData.slice(page * perPage, (page + 1) * perPage)\n    : \"\";\n\n  const handlePageClick = (event) => {\n    let pageC = event.selected;\n    setPage(pageC);\n  };\n  return (\n    <div>\n      {!games && (\n        <SpinnerInfinity\n          size={130}\n          thickness={151}\n          speed={70}\n          color=\"rgba(252, 252, 252, 1)\"\n          secondaryColor=\"rgba(108, 20, 180, 1)\"\n          enabled={true}\n        />\n      )}\n      <div className=\"contain\">\n        <PageHeader titleText=\"All Games\" />\n        <div className=\"row\">\n          {loading && (\n            <ReactPaginate\n              previousLabel={\"prev\"}\n              nextLabel={\"next\"}\n              pageCount={items.length % 3 === 0 ? pages + 1 : pages}\n              onPageChange={handlePageClick}\n              containerClassName={\n                \"pagination text-white justify-content-center\"\n              }\n              activeClassName={\"active\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              marginPagesDisplayed={\"3\"}\n              // renderOnZeroPageCount={null}\n            />\n          )}\n          {gamesData &&\n            items.map((g) => (\n              <div className=\"col-12 col-lg-4 pb-4\" id=\"card-top\">\n                <ol className=\"statsList\">\n                  <li\n                    id=\"lastGameHero\"\n                    className=\"statsHero d-flex flex-column\"\n                    style={{\n                      backgroundImage: `url(${\n                        process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                      })`,\n                    }}\n                  >\n                    <span>\n                      {new Date(items[created++].createdAt).toLocaleDateString(\n                        \"en-GB\"\n                      )}\n                    </span>\n                    <div className=\"stats d-flex w-100 \" id=\"lGameP2P\">\n                      <p>Player 1</p>\n                      <p>profit</p>\n                      <p>points</p>\n                      <p>points</p>\n                      <p>profit</p>\n                      <p>Player 2</p>\n                    </div>\n                  </li>\n                  {g.players.map((game) => {\n                    return (\n                      <li\n                        className=\"statsRow w-100\"\n                        key={game.name + Date.now()}\n                      >\n                        <div className=\"rowImage h2hGames\">\n                          <img\n                            src={`${apiImage}${game[0].image}`}\n                            alt=\"player list row\"\n                          />\n                        </div>\n                        <div className=\"rowProfit \">{game[0].profit}</div>\n                        <div className=\"rowProfit\">{game[0].points}</div>\n                        <span className=\"mt-3 pt-1\">VS</span>\n                        <div className=\"rowProfit\">{game[1].points}</div>\n                        <div className=\"rowProfit \">{game[1].profit}</div>\n                        <div className=\"rowImage  h2hGames d-flex justify-content-center\">\n                          <img\n                            src={`${apiImage}${game[1].image}`}\n                            alt=\"player list row\"\n                          />\n                        </div>\n                      </li>\n                    );\n                  })}\n                </ol>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default H2hGameCard;\n","import React, { useEffect, useState } from \"react\";\nimport h2hService from \"../../services/h2hService\";\nimport teamService from \"../../services/teamService\";\nimport PageHeader from \"../common/pageHeader\";\nimport { apiImage } from \"../../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport H2hGameCard from \"./h2hGameCard\";\n\nconst H2hTable = (props) => {\n  const [data, setData] = useState();\n  const [hero, setHero] = useState();\n  const [teamImg, setTeamImg] = useState(\"\");\n\n  const teamId = props.match.params.teamId;\n  useEffect(() => {\n    const getTable = async () => {\n      let table = await h2hService.getPointsByTeam(teamId);\n      table = table.data.filter((player) => player._id.name !== \"Nispach\");\n\n      setData(table);\n      let myHero = table.shift();\n      setHero(myHero);\n\n      let teamPic = await teamService.getTeam(teamId);\n      setTeamImg(teamPic.data);\n    };\n\n    getTable();\n  }, [setData, teamId]);\n\n  let rank = 2;\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"H2H Table\" />\n      <div className=\"teamImg d-flex flex-row mb-2\">\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\n      </div>\n      {!data && (\n        <SpinnerInfinity\n          size={130}\n          thickness={151}\n          speed={70}\n          color=\"rgba(252, 252, 252, 1)\"\n          secondaryColor=\"rgba(108, 20, 180, 1)\"\n          enabled={!data ? true : false}\n          // enabled={true}\n        />\n      )}\n      {data && (\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\n          <ul className=\"statsList\">\n            <li\n              className=\"statsHeroPerHour d-flex w-100 \"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <div className=\"h2hInfo d-flex w-100 justify-content-between\">\n                <div className=\"statsInfo\">\n                  <div className=\"pos\">1.</div>\n                  <a href=\"#/\" id=\"heroName\">\n                    {hero ? hero._id.name : \"\"}\n                  </a>\n                  <div className=\"heroDate ps-1\">\n                    Average Points:\n                    <span className=\"ms-2 avgP\">\n                      {hero ? hero.avgPoints.toFixed(2) : \"\"}\n                    </span>\n                  </div>\n                  <div className=\"heroDate ps-1\">\n                    Games Played:\n                    <span className=\"ms-2 avgP\">\n                      {hero ? hero.numOfGames : \"\"}\n                    </span>\n                  </div>\n                  <div className=\"heroDate ps-1\">\n                    Winning:\n                    <span className=\"ms-2 avgP\">\n                      {hero ? hero.successPercentage : \"\"}%\n                    </span>\n                  </div>\n                  <div id=\"amount\" className=\"\">\n                    Total Points:\n                    <span className=\"ms-2\">{hero ? hero.totalPoints : \"\"}</span>\n                  </div>\n                </div>\n                <div className=\"heroImage \">\n                  <img\n                    src={hero ? `${apiImage}${hero._id.image}` : \"\"}\n                    alt=\"hero\"\n                  />\n                </div>\n              </div>\n            </li>\n            <li id=\"h2hLi\">\n              <div className=\"h2hDetailsRow  d-flex \">\n                <p>Rank</p>\n                <p>Image</p>\n                <p>Player</p>\n                <p>Avg Points</p>\n                <p>Games played</p>\n                <p>Winning</p>\n                <p>Points</p>\n              </div>\n            </li>\n            <React.Fragment>\n              {data.map((player) => (\n                <li className=\"statsRow d-flex\" key={player._id.name}>\n                  <div className=\"rowPosTop\" id=\"rowPosTop\">\n                    {rank++}.\n                  </div>\n                  <div className=\"rowImageH2h\">\n                    <img\n                      src={`${apiImage}${player._id.image}`}\n                      alt=\"player list row\"\n                    />\n                  </div>\n                  <div className=\"rowNameH2h\">{player._id.name}</div>\n                  <div className=\"rowH2hAvg\">{player.avgPoints.toFixed(2)}</div>\n                  <div className=\"rowH2hG\">{player.numOfGames}</div>\n                  <div className=\"rowSuccessTop\">\n                    {player.successPercentage}%\n                  </div>\n                  <div className=\"rowPointsTop\">{player.totalPoints}</div>\n                </li>\n              ))}\n            </React.Fragment>\n          </ul>\n        </div>\n      )}\n      <H2hGameCard team={teamId} />\n    </div>\n  );\n};\n\nexport default H2hTable;\n","import React, { useState, useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport PageHeader from \"../common/pageHeader\";\nimport * as Yup from \"yup\";\n// import http from \"../../services/httpService\";\n// import { apiUrl } from \"../../config.json\";\nimport { toast } from \"react-toastify\";\nimport userService from \"../../services/userService\";\n\nimport { Link } from \"react-router-dom\";\nimport teamService from \"../../services/teamService\";\n\nconst initialValues = {\n  teamName: \"\",\n  teamImage: \"\",\n};\n\nconst validationSchema = Yup.object({\n  teamName: Yup.string()\n    .min(2, \"name must be min 2 chars\")\n    .required(\"required\"),\n  teamImage: Yup.string(),\n});\nconst TeamSignUp = (props) => {\n  const [errors, setErrors] = useState({ image: \"\" });\n  const [teamDetails, setTeamDetails] = useState({\n    name: \"\",\n    players: [],\n    teamImage: \"\",\n  });\n\n  useEffect(() => {\n    const player = async () => {\n      let user = await userService.getUserDetails();\n      delete user.data.password;\n      let details = { ...teamDetails };\n      details.players.push(user.data);\n      setTeamDetails(details);\n    };\n    player();\n  }, []);\n  const onSubmit = async (values, onSubmitProps) => {\n    onSubmitProps.setSubmitting(false);\n\n    let data = new FormData();\n    data.append(\"name\", values.teamName);\n    if (values.image) {\n      data.append(\"image\", values.image);\n    }\n    data.players = teamDetails.players;\n    await teamService.createTeam(data);\n    \n    toast(\"A new Team is opened\");\n    props.history.replace(\"/my-teams\");\n  };\n\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"Team Registration Form\" />\n      <p className=\"start\">Start a new team</p>\n      <div className=\"row\">\n        <div className=\"col-lg-6 col-12\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n            validateOnMount\n          >\n            {(formik) => {\n              return (\n                <div className=\"row mt-4\">\n                  <div className=\"col-10 col-lg-4\">\n                    <Form>\n                      <div className=\"form-control d-flex flex-column bg-primary\">\n                        <label htmlFor=\"Team Name\">Team Name</label>\n                        <Field type=\"text\" id=\"teamName\" name=\"teamName\" />\n                        <ErrorMessage\n                          name=\"teamName\"\n                          component=\"div\"\n                          className=\"error\"\n                        />\n                      </div>\n                      <div className=\"form-control d-flex flex-column bg-primary mb-3\">\n                        <label htmlFor=\"image\">Image</label>\n                        <input\n                          className=\"row mb-4 inputFile\"\n                          type=\"file\"\n                          name=\"image\"\n                          onChange={(event) => {\n                            formik.setFieldValue(\n                              \"image\",\n                              event.target.files[0]\n                            );\n                          }}\n                        ></input>\n                        <span className=\"error\">{errors.image}</span>\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        disabled={!formik.isValid || formik.isSubmitting}\n                      >\n                        Submit\n                      </button>\n                      <Link\n                        className=\"btn btn-info ms-3\"\n                        type=\"button\"\n                        to=\"/my-teams\"\n                      >\n                        Do it later\n                      </Link>\n                    </Form>\n                  </div>\n                </div>\n              );\n            }}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamSignUp;\n","import React from 'react';\nimport PageHeader from \"../common/pageHeader\"\n\nconst EditGames = (props) => {\n   let  iframeUrl=`https://nadav.retool.com/embedded/public/b9a1f778-e9c9-44f9-9309-37862ad3a349#teamId=${props.match.params.teamId}`;\n   \n    return ( \n        <div className=\"container pb-3\">\n            <PageHeader titleText=\"Edit Games\"/>\n            <p className='text-white'>In this section you can edit, update and delete games and games details.</p>\n            <ul className='text-white'>\n                <li>Only team managers can edit games.</li>\n                <li>when you edit or delete a game, this will not effects details on the relevant Head to Head game (who \n                    will not be updated automatically).\n                    This will be fixed soon.\n                </li>\n            </ul>\n            <iframe  title=\"edit game\"src= {iframeUrl} width=\"100%\" height=\"800px\"></iframe>\n        </div>\n     );\n}\n \nexport default EditGames;","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport userService from \"../../services/userService\";\nimport gameService from \"../../services/gameService\";\nimport h2hService from \"../../services/h2hService\";\nimport PageHeader from \"../common/pageHeader\";\nimport { SpinnerCircular } from \"spinners-react\";\nimport { apiImage } from \"../../config.json\";\nimport _ from \"lodash\";\nimport TotalPersonal from \"./totalPersonal\";\nimport { Line } from \"react-chartjs-2\";\n\nconst PlayerStats = (props) => {\n  const [me, setMe] = useState({});\n  const [stats, setStats] = useState({});\n  const [month, setMonth] = useState([]);\n  const [points, setPoints] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [chartDates, setChartDates] = useState([]);\n  const [chartCashing, setChartCashing] = useState([]);\n  let currentMonth = new Date();\n  let currentMonthNumber = currentMonth.getMonth() + 1;\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\n\n  useEffect(() => {\n    const getTable = async () => {\n      if (me.teams) {\n        let table = await gameService.monthsData(me.teams[0]);\n        table = table.data;\n        let currentMonth = [...table];\n        currentMonth = currentMonth.filter(\n          (month) => month._id.monthPlayed === currentMonthNumber\n        );\n        currentMonth = currentMonth.find((e) => e._id.player_id === me._id);\n        setMonth(currentMonth);\n        let detailed = await gameService.personalGames(me._id);\n        setDetails(detailed.data);\n\n        let myDetailed = await gameService.personalGames(me._id);\n\n        let chartDetails = [];\n        let chartDates = [];\n        let chartCash = [];\n        try {\n          await myDetailed.data.forEach((e) =>\n            chartDetails.push(e.players.profit)\n          );\n          setChartData(chartDetails);\n\n          await myDetailed.data.forEach((e) =>\n            chartCash.push(e.players.cashing)\n          );\n          setChartCashing(chartCash);\n\n          await myDetailed.data.forEach((e) =>\n            chartDates.push(\n              new Date(e.createdAt).toLocaleDateString(\"en-GB\").substr(0, 5)\n            )\n          );\n          setChartDates(chartDates);\n        } catch {\n          console.log(\"errr\");\n        }\n      }\n    };\n\n    getTable();\n  }, [setMonth, currentMonthNumber, me.teams, me._id]);\n\n  useEffect(() => {\n    const getMydata = async () => {\n      let myData = await userService.getPlayerDetails(props.match.params.id);\n      delete myData.data.password;\n      setMe(myData.data);\n      let myStats = await gameService.personal(myData.data._id);\n      setStats(myStats.data[0]);\n    };\n    getMydata();\n  }, []);\n\n  useEffect(() => {\n    const points = async () => {\n      if (me._id) {\n        let myPoints = await h2hService.getPointsByPlayer(me._id);\n        setPoints(myPoints.data[0]);\n      }\n    };\n    points();\n  }, [me._id]);\n\n  const data = {\n    labels: chartDates,\n    datasets: [\n      {\n        label: \"Profit\",\n        data: chartData,\n        fill: false,\n        backgroundColor: \"#6c14b4\",\n        borderColor: \"#6c14b4\",\n      },\n      {\n        label: \"Cashing\",\n        data: chartCashing,\n        fill: false,\n        backgroundColor: \"#2752ea\",\n        borderColor: \"#2752ea\",\n      },\n    ],\n  };\n  let delayed;\n  const options = {\n    options: {\n      animation: {\n        onComplete: () => {\n          delayed = true;\n        },\n        delay: (context) => {\n          let delay = 0;\n          if (\n            context.type === \"data\" &&\n            context.mode === \"default\" &&\n            !delayed\n          ) {\n            delay = context.dataIndex * 400 + context.datasetIndex * 200;\n          }\n          return delay;\n        },\n      },\n      scales: {\n        x: {\n          type: \"linear\",\n        },\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"container playerStats pb-4\">\n      <PageHeader titleText=\"Player Statistics\" />\n      {_.isEmpty(stats) && (\n        <div className=\"spinner\">\n          <SpinnerCircular\n            size={130}\n            thickness={151}\n            speed={81}\n            color=\"rgba(108, 20, 180, 1)\"\n            secondaryColor=\"rgba(252, 252, 252, 1)\"\n            // enabled={true}\n            enabled={_.isEmpty(stats) ? true : false}\n          />\n        </div>\n      )}\n      {!_.isEmpty(stats) && (\n        <div className=\"\">\n          <div className=\"playerInfo bg-white col-11 col-lg-4\">\n            <span className=\"text-primary ms-3\">\n              {new Date().toLocaleDateString(\"en-GB\")}\n            </span>\n            <div\n              className=\"playerBg d-flex justify-content-around\"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <div className=\"pDetails\">\n                <p>\n                  {me.firstName} {me.lastName}\n                </p>\n                <p className=\"text-white\">{me.nickName}</p>\n              </div>\n              <div className=\"pImage\">\n                <img src={`${apiImage}${me.image}`} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"detailedStats d-flex justify-content-between mt-3\">\n              <div className=\"personalStatP\">\n                <p>Total Profit</p>\n                <p>{stats.totalProfit}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Avg Profit</p>\n                <p>{stats.avgProfit ? stats.avgProfit.toFixed(2) : 0}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Total Games</p>\n                <p>{stats.numOfGames}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Games W/ Profit</p>\n                <p>{stats.gamesWithProfit}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Success %</p>\n                <p>{stats.successPercentage}%</p>\n              </div>\n            </div>\n            <div className=\"detailedStatsRow2 d-flex justify-content-between\">\n              <div className=\"personalStatP\">\n                <p>Avg Cashing</p>\n                <p>{stats.avgCashing.toFixed(2)}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Max Profit</p>\n                <p>{stats.maxProfit}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Max Loss</p>\n                <p>{stats.minProfit}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>{currentMonth}-Total Profit</p>\n                <p>{month ? month.totalProfit : \"No games this month\"}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>H2H Points</p>\n                <p>{points.totalPoints}</p>\n              </div>\n            </div>\n            <div className=\"detailedStats d-flex justify-content-between\">\n              <div className=\"personalStatP\">\n                <p>Avg Game Rank</p>\n                <p>{stats.avgGameRank ? stats.avgGameRank.toFixed(2) : 0}</p>\n              </div>\n              <div className=\"personalStatP\">\n                <p>Last Game</p>\n                <p>{new Date(stats.lastGame).toLocaleDateString(\"en-GB\")}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"header\">\n            <h1 className=\"title  mt-2\">Personal Chart</h1>\n          </div>\n          <div className=\"col-lg-4 col-11\">\n            <Line data={data} options={options} />\n          </div>\n          <TotalPersonal details={details} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PlayerStats;\n","import React, { useEffect, useState } from \"react\";\nimport gameService, { statsPerHour } from \"../../services/gameService\";\nimport teamService from \"../../services/teamService\";\nimport { apiImage } from \"../../config.json\";\nimport { SpinnerInfinity } from \"spinners-react\";\nimport PageHeader from \"../common/pageHeader\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport { Link } from \"react-router-dom\";\n\nconst StatsPerHourCard = (props) => {\n  const [data, setData] = useState([]);\n  const [hero, setHero] = useState([]);\n  const [headerTitle, setHeaderTitle] = useState(\"\");\n  const [teamImg, setTeamImg] = useState(\"\");\n  const [dataChartDetails, setdataChartDetails] = useState({});\n  const [barChartDetails, setbarChartDetails] = useState({});\n  const [statsHour, setStatsHour] = useState([]);\n  const teamId = props.match.params.teamId;\n  const cardName = props.match.params.cardName;\n\n  useEffect(() => {\n    const getStats = async () => {\n      let table = await gameService.statsPerHour(teamId);\n      table = table.data;\n      setStatsHour(table);\n      let myHero = table.shift();\n      setHero(myHero);\n      console.log(\"s\", hero);\n\n      let teamPic = await teamService.getTeam(teamId);\n      setTeamImg(teamPic.data);\n      // console.log(teamImg);\n      // console.log('1',table);\n    };\n\n    getStats();\n  }, [teamId]);\n\n  // useEffect(() => {\n  //   const getTable = async () => {\n  //     let table = await gameService.cardsData(teamId, cardName);\n  //     table = table.data;\n\n  //     let accu = [];\n  //     const barChart = {\n  //       labels: [],\n  //       datasets: [\n  //         {\n  //           label: `${headerTitle} By Player`,\n  //           data: [],\n  //           backgroundColor: [\n  //             \"rgba(255, 99, 132, 0.5)\",\n  //             \"rgba(54, 162, 235, 0.5)\",\n  //             \"rgba(255, 206, 86, 0.5)\",\n  //             \"rgba(75, 192, 192, 0.5)\",\n  //             \"rgba(153, 102, 255, 0.5)\",\n  //             \"rgba(255, 159, 64, 0.5)\",\n  //             \"rgba(39, 186, 46, 0.5)\",\n  //             \"rgba(8, 20, 107, 0.5)\",\n  //             \"rgba(8, 20, 107, 0.5)\",\n  //           ],\n  //           borderColor: [\n  //             \"rgba(255, 99, 132, 1)\",\n  //             \"rgba(54, 162, 235, 1)\",\n  //             \"rgba(255, 206, 86, 1)\",\n  //             \"rgba(75, 192, 192, 1)\",\n  //             \"rgba(153, 102, 255, 1)\",\n  //             \"rgba(255, 159, 64, 1)\",\n  //             \"rgba(39, 186, 46,1)\",\n  //             \"rgba(8, 20, 107, 1)\",\n  //             \"rgba(8, 20, 107, 1)\",\n  //           ],\n  //           borderWidth: 1,\n  //         },\n  //       ],\n  //     };\n  //     try {\n  //       await table.forEach((player) => {\n  //         barChart.labels.push(player._id.name);\n  //         barChart.datasets[0].data.push(player.cardTitle);\n  //       });\n  //       setbarChartDetails(barChart);\n  //     } catch {\n  //       console.log(\"err1\");\n  //     }\n\n  //     const dataChart = {\n  //       labels: [],\n  //       datasets: [\n  //         {\n  //           data: [],\n  //           backgroundColor: [\n  //             \"rgba(255, 99, 132, 0.5)\",\n  //             \"rgba(54, 162, 235, 0.5)\",\n  //             \"rgba(255, 206, 86, 0.5)\",\n  //             \"rgba(75, 192, 192, 0.5)\",\n  //             \"rgba(153, 102, 255, 0.5)\",\n  //             \"rgba(255, 159, 64, 0.5)\",\n  //             \"rgba(39, 186, 46, 0.5)\",\n  //             \"rgba(8, 20, 107, 0.5)\",\n  //             \"rgba(8, 20, 107, 0.5)\",\n  //           ],\n  //           borderColor: [\n  //             \"rgba(255, 99, 132, 1)\",\n  //             \"rgba(54, 162, 235, 1)\",\n  //             \"rgba(255, 206, 86, 1)\",\n  //             \"rgba(75, 192, 192, 1)\",\n  //             \"rgba(153, 102, 255, 1)\",\n  //             \"rgba(255, 159, 64, 1)\",\n  //             \"rgba(39, 186, 46,1)\",\n  //             \"rgba(8, 20, 107, 1)\",\n  //             \"rgba(8, 20, 107, 1)\",\n  //           ],\n  //           borderWidth: 1,\n  //         },\n  //       ],\n  //     };\n  //     try {\n  //       await table.forEach((player) => {\n  //         dataChart.labels.push(player._id.name);\n  //         accu.push(player.cardTitle);\n  //       });\n  //       let sum = accu.reduce((partial_sum, a) => partial_sum + a, 0);\n  //       let percentageSum = [];\n  //       accu.forEach((percent) => {\n  //         percentageSum.push(`${((percent / sum) * 100).toFixed(2)}`);\n  //       });\n  //       dataChart.datasets[0].data = percentageSum;\n  //       setdataChartDetails(dataChart);\n  //     } catch {\n  //       console.log(\"err1\");\n  //     }\n\n  //     }\n  //     setData(table);\n  //   };\n\n  //   getTable();\n  // }, [setData, teamId, cardName, headerTitle]);\n\n  let rank = 2;\n  // ChartJS.register(ArcElement, Tooltip, Legend);\n\n  return (\n    <div className=\"container pb-2\">\n      <PageHeader titleText=\"Stats Per Hour\" />\n      <div className=\"teamImg d-flex flex-row mb-2\">\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"team\" />\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\n      </div>\n      {statsHour.length === 0 && (\n        <div className=\"spinner pt-2\">\n          <SpinnerInfinity\n            size={130}\n            thickness={151}\n            speed={70}\n            color=\"rgba(252, 252, 252, 1)\"\n            secondaryColor=\"rgba(108, 20, 180, 1)\"\n            enabled={data.length === 0 ? true : false}\n          />\n        </div>\n      )}\n      {statsHour.length > 0 && hero._id && (\n        <div className=\"col-lg-4 col-12\" id=\"cardTop\">\n          <ol className=\"statsList\">\n            <li\n              className=\"statsHeroPerHour d-flex w-100\"\n              style={{\n                backgroundImage: `url(${\n                  process.env.PUBLIC_URL + \"/icons/stats-card-bg2.svg\"\n                })`,\n              }}\n            >\n              <div className=\"statsInfo flex-fill\" id=\"perHourHeroSide\">\n                <div className=\"pos\">1.</div>\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\n                  {statsHour.length > 0 ? hero._id.name : \"\"}\n                </Link>\n                <div id=\"amount\" className=\"flex-fill\">\n                  <div className=\"heroPerHour\">Hours Played:</div>\n                  <div className=\"heroPerHour \">{hero.hoursPlayed}</div>\n                </div>\n                <div id=\"amount\" className=\"flex-fill\">\n                  <p className=\"heroPerHour m-0\">Profit Per Hour:</p>\n                  <p className=\"heroPerHour m-0\">\n                    {\" \"}\n                    {statsHour.length > 0 ? hero.profitPerHour : \"\"}\n                  </p>\n                </div>\n                <div id=\"amount\" className=\"flex-fill\">\n                  <p className=\"heroPerHour m-0\">Cashing Per Hour:</p>\n                  <p className=\"heroPerHour m-0\">\n                    {\" \"}\n                    {statsHour.length > 0 ? hero.cashingPerHour : \"\"}\n                  </p>\n                </div>\n              </div>\n              <div className=\"heroImagePerHour\">\n                <Link to={`/players-stats/${hero._id.player_id}`} id=\"heroName\">\n                  <img\n                    src={\n                      statsHour.length > 0 ? `${apiImage}${hero._id.image}` : \"\"\n                    }\n                    alt=\"\"\n                  />\n                </Link>\n              </div>\n            </li>\n\n            <li className=\"statsHeaderPerHour d-flex w-100 justify-content-between\">\n              <div>Rank</div>\n              <div>Image</div>\n              <div>Player</div>\n              <div>Hours Played</div>\n              <div>Profit Per Hour</div>\n              <div>Cashing Per Hour</div>\n            </li>\n            {statsHour.map((player) => (\n              <li className=\"statsRow\">\n                <div className=\"rowPosPerHour\">{rank++}.</div>\n                <Link\n                  className=\"rowImagePerHour\"\n                  to={`/players-stats/${player._id.player_id}`}\n                >\n                  <img\n                    src={\n                      statsHour.length > 0\n                        ? `${apiImage}${player._id.image}`\n                        : \"\"\n                    }\n                    alt=\"\"\n                  />\n                </Link>\n                <div className=\"rowNamePerHour\">\n                  {statsHour.length > 0 ? player._id.name : \"\"}\n                </div>\n                <div className=\"rowHours\">\n                  {statsHour.length > 0 ? player.hoursPlayed : \"\"}\n                </div>\n                <div\n                  className={\n                    player.profitPerHour > 0\n                      ? \"rowProfitPerHour text-success\"\n                      : \"rowProfitPerHour text-danger\"\n                  }\n                >\n                  {statsHour.length > 0 ? player.profitPerHour : \"\"}\n                </div>\n                <div className=\"rowProfitPerHour\">\n                  {statsHour.length > 0 ? player.cashingPerHour : \"\"}\n                </div>\n              </li>\n            ))}\n          </ol>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StatsPerHourCard;\n","import React from \"react\";\nimport { GiCardAceHearts } from \"react-icons/gi\";\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"../../config.json\";\n\nconst CurrMonth = ({ header, name, team, month }) => {\n  const year = new Date().getFullYear();\n  const date = new Date(month.month);\n\n  let currentMonth = date.toLocaleString(\"en-US\", { month: \"long\" });\n  let players = month.players;\n\n  const compare = (a, b) => {\n    if (a.totalProfit < b.totalProfit) return 1;\n    if (a.totalProfit > b.totalProfit) return -1;\n    return 0;\n  };\n  players.sort(compare);\n  return (\n    <div className=\"cardDiv month\">\n      <div\n        className=\"card \"\n        id=\"mainStats\"\n        style={{\n          backgroundImage: `url(${\n            process.env.PUBLIC_URL + \"/icons/diamond-month.svg\"\n          })`,\n        }}\n      >\n        <h5 className=\"card-title text-white\">{players[0]._id.name}</h5>\n        <div className=\"img-card\">\n          <img\n            src={\n              players[0]._id.image\n                ? `${apiImage}${players[0]._id.image}`\n                : \"https://images.unsplash.com/photo-1626775238053-4315516eedc9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTN8fHBva2VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }\n            className=\"card-img-top \"\n            alt={name}\n          />\n        </div>\n        <div className=\"card-img-overlay\"></div>\n        <div className=\"card-body p-0\" id=\"statsCardBody\">\n          <div className=\"card-text\" id=\"statsCardText\">\n            <span>{header}</span>\n            <br />\n            <div className=\"d-flex justify-content-around\">\n              <span id=\"month\">{currentMonth ? currentMonth : \"\"}</span>\n              <span>{players ? players[0].totalProfit : 0}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Link\n        className=\"text-white btn btn-primary\"\n        id=\"cardFooter\"\n        to={`/tables/monthlyStats/${year}/${currentMonth}/${team._id}`}\n      >\n        See full table\n        <GiCardAceHearts />\n        <AiOutlineDoubleRight />\n      </Link>\n    </div>\n  );\n};\n\nexport default CurrMonth;\n","import React, { useEffect, useState } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport { apiImage } from \"../../config.json\";\nimport teamService from \"../../services/teamService\";\nimport PageHeader from \"../common/pageHeader\";\nimport { Line } from \"react-chartjs-2\";\nimport NewMonthCard from \"./newMonthCard\";\nimport _ from \"lodash\";\n\nconst MonthlyStats = (props) => {\n  const [data, setData] = useState([]);\n  const [hero, setHero] = useState([]);\n  const [teamImg, setTeamImg] = useState(\"\");\n  const [monthlyStats, setMonthlyStats] = useState([]);\n  const [dataByMonth, setDataByMonth] = useState([]);\n  const [chartDates, setChartDates] = useState([]);\n  const [chartProfitsByPlayer, setChartProfitsByPlayer] = useState([]);\n  const [profits, setProfits] = useState([]);\n  let currentMonth = new Date();\n  let currentMonthNumber = currentMonth.getMonth() + 1;\n  currentMonth = currentMonth.toLocaleString(\"en-US\", { month: \"long\" });\n\n  const teamId = props.match.params.teamId;\n\n  useEffect(() => {\n    const getTable = async () => {\n      let table = await gameService.monthsData(teamId);\n      table = table.data;\n      const monthlyStatsGroup = await gameService.monthlyStats(\n        props.match.params.teamId\n      );\n      setMonthlyStats(monthlyStatsGroup.data);\n      let dataBySeperateMonth = _.chain(monthlyStats)\n        //https://stackoverflow.com/questions/23600897/using-lodash-groupby-how-to-add-your-own-keys-for-grouped-output\n        // Group the elements of Array based on `monthPlayed` property\n        .groupBy(\"_id.monthPlayed\")\n        // `key` is group's name (monthPlayed), `value` is the array of objects\n        .map((value, key) => ({ month: key, players: value }))\n        .value();\n      setDataByMonth(dataBySeperateMonth);\n\n      let dates = await gameService.monthlyByPlayer(teamId);\n      setChartProfitsByPlayer(dates.data);\n\n      let chartDates = [];\n      try {\n        await dataByMonth.forEach((e) =>\n          chartDates.push(\n            new Date(e.month).toLocaleString(\"en-US\", { month: \"short\" })\n          )\n        );\n      } catch {\n        console.log(\"errr\");\n      }\n\n      let teamPic = await teamService.getTeam(teamId);\n      setTeamImg(teamPic.data);\n\n      table = table.filter(\n        (month) => month._id.monthPlayed === currentMonthNumber\n      );\n      let myHero = table.shift();\n      setHero(myHero);\n      setData(table);\n      setChartDates(chartDates);\n      setProfits(chartProfitsByPlayer);\n    };\n\n    getTable();\n  }, [\n    setData,\n    teamId,\n    currentMonthNumber,\n    monthlyStats.length,\n    dataByMonth.length,\n    chartProfitsByPlayer.length,\n  ]);\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: \"player profit by month\",\n      },\n    },\n  };\n\n  let chartProfits = {};\n  chartProfits.labels = chartDates;\n  chartProfits.datasets = [];\n  profits.forEach((e) => {\n    chartProfits.datasets.push({\n      label: e[0],\n      data: e[2],\n      fill: false,\n      backgroundColor: \"white\",\n      borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n    });\n  });\n  console.log(\"chartProfits\", chartProfits);\n\n  return (\n    <div className=\"container pb-3\">\n      <PageHeader titleText=\"Total Profit By Months\" />\n      <div className=\"teamImg d-flex flex-row mb-2\">\n        <img src={`${apiImage}${teamImg.teamImage}`} alt=\"\" />\n        <span>{new Date().toLocaleDateString(\"en-GB\")}</span>\n      </div>\n      <div className=\"byMonth text-primary row \">\n        {dataByMonth.length > 0 &&\n          dataByMonth.map((month) => (\n            <div className=\"col-6\">\n              <NewMonthCard month={month} team={teamImg} />\n            </div>\n          ))}\n      </div>\n      <div className=\"line-chart\">\n        <Line data={chartProfits} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default MonthlyStats;\n","import React from \"react\";\nimport { apiImage } from \"../../config.json\";\n\nconst SideBetsVsCardPlayer = ({ sideBetDetail }) => {\n  return (\n    <div className=\"sideBets1 w-50\" key={sideBetDetail._id.playerId}>\n      <p className={sideBetDetail.leader ? \"sideBetLeader\" : \"sideBetLoser\"}>\n        {sideBetDetail.leader ? \"Leader\" : \"\"}\n      </p>\n      <div className=\"sideBetsPlayer1 d-flex align-items-center justify-content-center\">\n        <img\n          src={`${apiImage}${sideBetDetail._id.playerImage}`}\n          alt=\"masterPlayer\"\n        />\n      </div>\n      <p className=\"text-primary\">\n        <b>\n          <u>{sideBetDetail._id.playerName}</u>\n        </b>\n      </p>\n      <p className=\"sidebetTitles\">\n        <u>Profit</u>\n      </p>\n      <p className=\"text-white m-0 sideBetsVsStats\">\n        {sideBetDetail.totalProfit}\n      </p>\n      <p className=\"sidebetTitles\">\n        <u>Total Games</u>\n      </p>\n      <p className=\"text-white  m-0 sideBetsVsStats\">\n        {sideBetDetail.totalGames}\n      </p>\n      <p className=\"sidebetTitles\">\n        <u>Average Profit</u>\n      </p>\n      <p className=\"text-white  m-0 sideBetsVsStats\">\n        {sideBetDetail.avgProfit}\n      </p>\n    </div>\n  );\n};\n\nexport default SideBetsVsCardPlayer;\n","import React, { useEffect, useState } from \"react\";\nimport { apiImage } from \"../../config.json\";\nimport sideBetsService from \"../../services/sideBetsService\";\nimport SideBetsVsCardPlayer from \"./sideBetsVsCardPlayer\";\n\nconst SideBetsVsCard = ({ sideBets }) => {\n  const [sideBetDetails, setSideBetDetails] = useState([]);\n  useEffect(() => {\n    const getSideBetsExtraData = async () => {\n      let extraDetails = await sideBetsService.getExtraDetais(\n        sideBets.teamId,\n        sideBets.masterPlayer._id,\n        sideBets.slavePlayer._id,\n        sideBets.startDate,\n        sideBets.endDate\n      );\n\n      setSideBetDetails(extraDetails.data);\n    };\n    getSideBetsExtraData();\n  }, []);\n\n  return (\n    <div\n      className=\"vsImage d-flex justify-content-between align-items-center mt-3\"\n      style={{\n        backgroundImage: `url(${apiImage}images/vs.jpg)`,\n      }}\n    >\n      {sideBetDetails.length > 0 &&\n        sideBetDetails.map((sideBetDetail) => (\n          <SideBetsVsCardPlayer\n            sideBetDetail={sideBetDetail}\n            key={sideBetDetail.totalProfit}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default SideBetsVsCard;\n","import React, { useState, useEffect } from \"react\";\nimport PageHeader from \"../common/pageHeader\";\nimport sideBetsService from \"../../services/sideBetsService\";\nimport { Link } from \"react-router-dom\";\nimport SideBetsVsCard from \"./sideBetsVsCard\";\nimport { SpinnerCircular } from \"spinners-react\";\nconst SidebetsMain = (props) => {\n  const [approvedSideBets, setApprovedSideBets] = useState(\"No side Bets\");\n  const [dismissedSideBets, setDismissedSideBets] = useState(\"No side Bets\");\n\n  const teamId = props.match.params.teamId;\n  useEffect(() => {\n    const getSideBets = async () => {\n      const sideBets = await sideBetsService.getAllApprovedSideBets(teamId);\n      setApprovedSideBets(sideBets.data);\n      const dismissedSideBets = await sideBetsService.getAllDismissedSideBets(\n        teamId\n      );\n      setDismissedSideBets(dismissedSideBets.data);\n    };\n    getSideBets();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"Side Bets\" />\n      <div className=\"container d-flex justify-content-center\">\n        <Link to={`/side-bets/new-sidebet/${props.match.params.teamId}`}>\n          <div className=\"btn btn-primary my-3\">Create a new side bet</div>\n        </Link>\n      </div>\n      <div className=\"sideBetCard\">\n        <p className=\"text-primary text-center my-2\">\n          {approvedSideBets == \"No side Bets yet\" ? approvedSideBets : \"\"}\n        </p>\n        <div className=\"d-flex justify-content-center\">\n          {approvedSideBets == \"No side Bets\" && (\n            <SpinnerCircular\n              size={130}\n              thickness={151}\n              speed={81}\n              color=\"rgba(108, 20, 180, 1)\"\n              secondaryColor=\"rgba(252, 252, 252, 1)\"\n              enabled={true}\n            />\n          )}\n        </div>\n\n        {Array.isArray(approvedSideBets) &&\n          approvedSideBets.map((sideBet) => (\n            <>\n              <p className=\"text-center goldText mt-4 \">\n                Bet Sum: {sideBet.sideBetSum}💰\n              </p>\n              <div className=\"sideBetDates d-flex justify-content-between\">\n                <p className=\"text-white\">\n                  Start Date:{\" \"}\n                  {new Date(sideBet.startDate).toLocaleDateString(\"en-GB\")}\n                </p>\n                <p className=\"text-white\">\n                  End Date:{\" \"}\n                  {new Date(sideBet.endDate).toLocaleDateString(\"en-GB\")}\n                </p>\n              </div>\n              <SideBetsVsCard sideBets={sideBet} key={sideBet._id} />\n              <p className=\"credit\">\n                <a href=\"https://www.freepik.com/vectors/dual\">\n                  Dual vector created by starline - www.freepik.com\n                </a>\n              </p>\n            </>\n          ))}\n        {Array.isArray(dismissedSideBets) &&\n          dismissedSideBets.map((sideBet) => (\n            <div className=\"dismissed p-4\">\n              <p className=\"text-primary text-center\">Dismissed Bets</p>\n              <ul>\n                <li className=\"text-danger\">\n                  Offered By: {sideBet.masterPlayer.nickName} at:\n                  {new Date(sideBet.createdAt).toLocaleDateString(\"en-GB\")}, Sum\n                  :{sideBet.sideBetSum}💰<br></br> dismissed by{\" \"}\n                  {sideBet.slavePlayer.nickName} :\n                  {new Date(\n                    sideBet.slavePlayer.dissmissDate\n                  ).toLocaleDateString(\"en-GB\")}\n                </li>\n              </ul>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SidebetsMain;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { apiImage } from \"../../config.json\";\n\nconst MasterPlayer = ({ user }) => {\n  return (\n    <div className=\"container d-flex justify-content-center\">\n      <Link to={`/players-stats/${user._id}`}>\n        <div\n          className=\"teamShield d-flex justify-content-center flex-column align-items-center\"\n          style={{\n            backgroundImage: `url(${apiImage}images/fifaCard.png)`,\n          }}\n        >\n          <img src={`${apiImage}${user.image}`} alt=\"\" />\n          <p className=\"m-0\">{user.nickName}</p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default MasterPlayer;\n","import React from \"react\";\nimport { apiImage } from \"../../config.json\";\n\nconst ChoosePlayer = (props) => {\n  let player = props.player;\n  return (\n    <div className=\"player col-4\" onClick={() => props.selectPlayer(player)}>\n      <div className=\"sideBetPlayer text-center mt-3\">\n        <img src={`${apiImage}${player.image}`} alt=\"\" />\n        <p className=\"m-0\">{player.nickName}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChoosePlayer;\n","import React, { useState, useEffect } from \"react\";\nimport { apiImage } from \"../../config.json\";\nimport { toast } from \"react-toastify\";\nimport userService from \"../../services/userService\";\nimport sideBetsService from \"../../services/sideBetsService\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\n\nconst SelectedPlayer = (props) => {\n  const choosen = props.player;\n  const teamId = props.teamId;\n\n  const [sideBetSum, setSideBetSum] = useState(\"\");\n  const [startDate, setStartDate] = useState(\n    `01/01/${new Date().getFullYear()}`\n  );\n  const [endDate, setEndDate] = useState(`31/12/${new Date().getFullYear()}`);\n  const [masterPlayer, setMasterPlayer] = useState({});\n\n  useEffect(() => {\n    const getMasterPlayer = async () => {\n      let me = await userService.getUserDetails();\n      delete me.data.password;\n      delete me.data.email;\n      setMasterPlayer(me.data);\n    };\n\n    getMasterPlayer();\n  }, []);\n  const getSideBetSum = (e) => {\n    setSideBetSum(e.target.value);\n  };\n  const getStartDate = (e) => {\n    setStartDate(e.target.value);\n  };\n  const getEndDate = (e) => {\n    setEndDate(e.target.value);\n  };\n\n  const validateSideBet = (sideBetSumAmount, startDate, endDate) => {\n    if (\n      sideBetSumAmount < 1 ||\n      !sideBetSumAmount ||\n      sideBetSumAmount === NaN ||\n      !Number.isInteger(sideBetSumAmount)\n    ) {\n      toast.error(\"Side bet sum must be a number greater than 0\");\n      return;\n    }\n    if (\n      !moment(startDate, \"YYYY-MM-DD\", true).isValid() ||\n      !startDate ||\n      moment(startDate).year() !== new Date().getFullYear()\n    ) {\n      toast.error(\n        \"Start date must be date in YYYY-MM-DD format and in current year\"\n      );\n      return;\n    }\n    if (\n      !moment(endDate, \"YYYY-MM-DD\", true).isValid() ||\n      !endDate ||\n      moment(endDate).year() !== new Date().getFullYear()\n    ) {\n      toast.error(\n        \"End date must be date in YYYY-MM-DD format and in current year\"\n      );\n      return;\n    }\n    if (startDate > endDate) {\n      toast.error(\"Start date must be before end date\");\n      return;\n    }\n\n    const sideBet = {\n      sideBetSum: sideBetSumAmount,\n      startDate: startDate,\n      endDate: endDate,\n      masterPlayer: masterPlayer,\n      slavePlayer: choosen,\n      approvedBySlavePlayer: false,\n      teamId: teamId,\n    };\n    Swal.fire({\n      title: `create a side bet with ${choosen.nickName}?`,\n      imageUrl: `${apiImage}${choosen.image}`,\n      imageWidth: 100,\n      imageHeight: 100,\n      imageAlt: \"Custom image\",\n      showCancelButton: true,\n      confirmButtonColor: \"#00a9ff\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        sideBetsService.createSideBet(sideBet);\n        toast.success(\"Side bet created\");\n        window.location = `/#/main-table/${teamId}`;\n      }\n    });\n  };\n\n  const makeABet = () => {\n    const sideBetSumAmount = parseInt(sideBetSum);\n    validateSideBet(sideBetSumAmount, startDate, endDate);\n  };\n\n  const cancelBet = () => {\n    window.location = `/#/side-bets/${teamId}`;\n  };\n\n  return (\n    <div className=\"container \">\n      <p className=\"text-center text-primary\">Make A Side Bet With player</p>\n      <div className=\"d-flex justify-content-center choosenPlayer mt-3\">\n        <img src={`${apiImage}${choosen.image}`} alt=\"\" />\n      </div>\n      <p className=\"selectedSideBet text-center\">{choosen.nickName}</p>\n      <div className=\"sideBetSum d-flex justify-content-center m-2\">\n        <p className=\"text-primary pe-2\">$ Bet Sum:</p>\n        <input\n          type=\"number\"\n          className=\"w-25\"\n          value={sideBetSum}\n          placeholder=\"Enter sum\"\n          onChange={(e) => getSideBetSum(e)}\n        />\n      </div>\n      <div className=\"datesSideBets\">\n        <div className=\"d-flex flex-column justify-content-center\">\n          <p className=\"text-primary pe-2 text-center\">Start Date:</p>\n          <span className=\"text-center\">Format: 'MM/DD/YYY'</span>\n          <div className=\"startDAte d-flex justify-content-center\">\n            <input\n              type=\"date\"\n              className=\"w-50\"\n              value={startDate}\n              min={`01/01/${new Date().getFullYear()}`}\n              onChange={(e) => getStartDate(e)}\n            />\n          </div>\n          <p className=\"text-primary pe-2 text-center\">End Date</p>\n          <span className=\"text-center\">Format: 'MM/DD/YYY'</span>\n\n          <div className=\"endDate d-flex justify-content-center\">\n            <input\n              type=\"date\"\n              className=\"w-50\"\n              value={endDate}\n              max={`31/12/${new Date().getFullYear()}`}\n              onChange={(e) => getEndDate(e)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-between mt-3\">\n        <button className=\"btn btn-danger\" onClick={cancelBet}>\n          Cancel\n        </button>\n        <button className=\"btn btn-primary\" onClick={makeABet}>\n          Make A Bet\n        </button>\n      </div>\n      <div className=\"rules py-3\">\n        <p className=\"text-center text-primary mt-3 \">\n          <b>\n            <u>Rules For Side Bets:</u>\n          </b>\n        </p>\n        <ul>\n          <li>\n            You can choose the sum of side bet and the start and end date of the\n            bet (default is january 1st to december 31st )\n          </li>\n          <li>\n            After you click 'Make A Bet', the second player will see a\n            notification about your side bet in the app and will have to accept\n            it. If he accepts, the side bet will be created and you will be able\n            to see it in the 'Side Bets' section.\n          </li>\n          <li>\n            If the second player doesn't accept the side bet, the side bet is\n            cancelled.\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedPlayer;\n","import React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../common/pageHeader\";\nimport MasterPlayer from \"./MasterPlayer\";\nimport userService from \"../../services/userService\";\nimport teamService from \"../../services/teamService\";\nimport ChoosePlayer from \"./choosePlayer\";\nimport SelectedPlayer from \"./selectedPlayer\";\n\nconst NewSideBet = (props) => {\n  const [user, setUser] = useState({});\n  const [team, setTeam] = useState({});\n  const [selectedPlayer, setSelectedPlayer] = useState();\n  const [sideBetTeamId, setSideBetTeamId] = useState();\n\n  const selectPlayer = (player) => {\n    delete player.password;\n    delete player.email;\n    setSelectedPlayer(player);\n  };\n\n  useEffect(() => {\n    const getSideBets = async () => {\n      const me = await userService.getUserDetails();\n      setUser(me.data);\n      const teamId = props.match.params.teamId;\n      setSideBetTeamId(teamId);\n      let teamForSideBet = await teamService.getTeamForSideBets(\n        teamId,\n        me.data._id\n      );\n      teamForSideBet = teamForSideBet.data[0].players;\n      setTeam(teamForSideBet);\n    };\n\n    getSideBets();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <PageHeader titleText=\"New Side Bet\" />\n      <MasterPlayer user={user} />\n      {!selectedPlayer && (\n        <div className=\"playersContainer d-flex flex-row row mx-3\">\n          <p className=\"text-center text-primary\">\n            Choose a player to offer a side-bet\n          </p>\n          {team.length > 0 &&\n            team.map((player) => (\n              <ChoosePlayer\n                player={player}\n                key={player._id}\n                selectPlayer={selectPlayer}\n                teamId={sideBetTeamId}\n              />\n            ))}\n        </div>\n      )}\n      {selectedPlayer && (\n        <SelectedPlayer player={selectedPlayer} teamId={sideBetTeamId} />\n      )}\n    </div>\n  );\n};\n\nexport default NewSideBet;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function saveNewScheduledGame(gameData) {\n  return http.post(`${apiUrl}/scheduleGames/saveNewScheduledGame`, gameData);\n}\n\nexport function getLatestScheduleGame(teamId) {\n  return http.get(`${apiUrl}/scheduleGames/getLatestScheduleGame/${teamId}`);\n}\n\nexport function getScheduledGameById(gameId) {\n  return http.get(`${apiUrl}/scheduleGames/getScheduledGameById/${gameId}`);\n}\n\nexport function updateScheduledGame(gameData) {\n  return http.put(\n    `${apiUrl}/scheduleGames/updateScheduledGame/${gameData.gameId}`,\n    gameData\n  );\n}\n\nexport function updateHost(gamId, hostId) {\n  return http.put(`${apiUrl}/scheduleGames/updateHost/${gamId}/${hostId}`);\n}\nexport default {\n  saveNewScheduledGame,\n  getLatestScheduleGame,\n  getScheduledGameById,\n  updateScheduledGame,\n  updateHost,\n};\n","import React from \"react\";\nimport { apiImage } from \"../../config.json\";\nconst SingleGame = ({ game }) => {\n  let host =\n    game?.scheduledGameDetails?.length > 0 &&\n    game?.scheduledGameDetails[0]?.host?.nickName;\n\n  host = host === \"TBA\" ? \"Host: Donkey\" : `Host: ${host}`;\n  return (\n    <div className=\"singleGame\">\n      <div className=\"singleGame  my-2\" key={game._id}>\n        <div className=\"gameHeaders text-black\">\n          <p className=\"text-center\">Game Manager:{game.game_manager?.name}</p>\n          <p className=\"text-center\">{game.date}</p>\n          <div className=\"d-flex justify-content-center\">\n            <p className=\"d\">{game.startTime} - </p>\n            <p>{game.endTime}</p>\n          </div>\n          <p className=\"text-center text-primary\">\n            {game?.scheduledGameDetails?.length > 0 && host}{\" \"}\n          </p>\n        </div>\n        <div className=\"gamePlayersDetails bg-white \">\n          <div className=\"singleGameHeader d-flex justify-content-around px-2\">\n            <p>Rank</p>\n            <p>Image</p>\n            <p>Player</p>\n            <p>Profit</p>\n            <p>Cashing</p>\n          </div>\n          {game.players.map((player) => (\n            <div\n              key={player.id}\n              className=\"singleGameDetails d-flex justify-content-around text-center\"\n            >\n              <p>{player.gameRank}</p>\n              <div className=\"listPlayerStats my-1\">\n                <img src={`${apiImage}${player.image}`} alt=\"\" />\n              </div>\n              <p>{player.name}</p>\n              <p className={player.profit > 0 ? \"green\" : \"red\"}>\n                {player.profit}\n              </p>\n              <p>{player.cashing}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleGame;\n","import React, { useState, useEffect } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport SingleGame from \"./singleGame\";\nimport ReactPaginate from \"react-paginate\";\n\nconst AllGamesList = ({ teamId, seasonDates }) => {\n  const [allGames, setAllGames] = useState([]);\n\n  const [page, setPage] = useState(1);\n  const pagination = 3;\n  useEffect(() => {\n    async function getAllGames() {\n      const { data: allGames } = await gameService.getAllGamesByTeam(\n        teamId,\n        pagination,\n        page,\n        seasonDates\n      );\n      setAllGames(allGames);\n    }\n    getAllGames();\n  }, [seasonDates, page]);\n\n  const handlePageClick = (event) => {\n    let pageC = event.selected + 1;\n    pageC === 0 ? setPage(1) : setPage(pageC);\n  };\n  return (\n    <div>\n      <h2 className=\"allGamesTitle text-center\">All Games</h2>\n      <ReactPaginate\n        previousLabel={\"prev\"}\n        nextLabel={\"next\"}\n        pageCount={allGames.length % pagination === 0 ? page + 1 : page}\n        onPageChange={handlePageClick}\n        containerClassName={\"pagination text-white justify-content-center\"}\n        pageClassName={\"page-item\"}\n        pageLinkClassName={\"page-link\"}\n      />\n      {allGames.length > 0 &&\n        allGames.map((game) => <SingleGame game={game} key={game._id} />)}\n    </div>\n  );\n};\n\nexport default AllGamesList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport gameService from \"../../services/gameService\";\nimport { apiImage } from \"../../config.json\";\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\n\nconst BigCard = ({ teamId, cardTitle, stats, data, playersData, leaderData, headerData, seasonDates }) => {\n    const [cardStats, setCardStats] = useState([]);\n    useEffect(() => {\n        async function getCardStats() {\n            const { data: cardStats } = await gameService.getCardStats(teamId, stats, null, seasonDates);\n            setCardStats(cardStats);\n        }\n        getCardStats();\n    }, [seasonDates]);\n\n    return (\n        <>\n            {cardStats.length > 0 && (\n                <div className=\"profitsContainer p-0\">\n                    <p className=\"pt-3 ps-3  totalProfitNewCard\">{cardTitle}</p>\n                    <div className=\"col-12 profitCard\">\n                        <div className=\"leaderContainer d-flex justify-content-between\">\n                            <div className=\"leaderImage m-3\">\n                                <img src={`${apiImage}${cardStats[0]._id.image}`} alt=\"leader\" />\n                            </div>\n                            <div className=\"leaderDetail pe-4\">\n                                <p>1.</p>\n                                <p className=\"leaderName\">{cardStats[0]._id.name}</p>\n                                <p className=\"leaderProfit\">\n                                    {leaderData[0]}: <span>{cardStats[0][data[0]]}</span>\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[1]}: {cardStats[0][data[1]]}\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[2]}:{cardStats[0][data[2]]}\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[3]}: {cardStats[0][data[3]]}\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[4]}: {cardStats[0][data[4]]}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <ol start=\"2\" className=\"bg-white m-0 pt-2 ps-1 secondPlayer\">\n                        <li className=\"d-flex flex-row\">\n                            2.\n                            <div className=\"secondPlayerImage \">\n                                <img src={`${apiImage}${cardStats[1]._id.image}`} alt=\"\" />\n                            </div>\n                            <span className=\"mx-1\">{cardStats[1]._id.name}- </span>\n                            {playersData[0]}:<span className=\"mx-1 playersNewProfit\">{cardStats[1][data[0]]}</span>{\" \"}\n                            {playersData[1]}:{cardStats[1][data[1]]} {playersData[2]}:{cardStats[1][data[2]]}{\" \"}\n                            {playersData[3]}:{cardStats[1][data[3]]} {playersData[4]}:{cardStats[1][data[4]]}\n                        </li>\n                        <li className=\"d-flex flex-row mt-2\">\n                            3.\n                            <div className=\"secondPlayerImage \">\n                                <img src={`${apiImage}${cardStats[2]._id.image}`} alt=\"\" />\n                            </div>\n                            <span className=\"mx-1\">{cardStats[2]._id.name}- </span>\n                            {playersData[0]}:<span className=\"mx-1 playersNewProfit\">{cardStats[2][data[0]]}</span>{\" \"}\n                            {playersData[1]}:{cardStats[2][data[1]]} {playersData[2]}:{cardStats[2][data[2]]}{\" \"}\n                            {playersData[3]}:{cardStats[2][data[3]]} {playersData[4]}:{cardStats[2][data[4]]}\n                        </li>\n                    </ol>\n                    <p className=\"bg-white fullTable\">\n                        <Link\n                            className=\"linkToNewCard\"\n                            to={`/newMainTable/newStatsCard/${teamId}?stats=${stats}&cardTitle=${cardTitle}&data=${data}&leaderData=${leaderData}&headerData=${headerData}&seasonDates=${JSON.stringify(\n                                seasonDates\n                            )}`}\n                        >\n                            View Full Table <AiOutlineArrowRight />\n                        </Link>\n                    </p>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default BigCard;\n","import React from \"react\";\nimport { apiImage } from \"../../config.json\";\nimport { Link } from \"react-router-dom\";\n\nconst PlayersImages = ({ player }) => {\n  return (\n    <Link to={`/players-stats/${player._id}`}>\n      <img\n        src={`${apiImage}${player.image}`}\n        alt=\"player image\"\n        className=\"rounded-circle\"\n      />\n      <p className=\"text-center playerName\">{player.nickName}</p>\n    </Link>\n  );\n};\n\nexport default PlayersImages;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport gameService from \"../../services/gameService\";\nimport { apiImage } from \"../../config.json\";\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\n\nconst SmallCard = ({\n    teamId,\n    cardTitle,\n    stats,\n    data,\n    playersData,\n    leaderData,\n    extraHeader = null,\n    headerData,\n    seasonDates,\n}) => {\n    const [cardStats, setCardStats] = useState([]);\n    useEffect(() => {\n        async function getCardStats() {\n            const { data: cardStats } = await gameService.getCardStats(teamId, stats, null, seasonDates);\n            setCardStats(cardStats);\n        }\n        getCardStats();\n    }, [seasonDates]);\n    return (\n        <>\n            {/* {cardStats === \"No data found\" && (\n                <div className=\"container mt-5\">\n                    <p className=\"text-danger text-center\">No Games Played This Month</p>\n                </div>\n            )} */}\n            {cardStats.length > 0 && Array.isArray(cardStats) && (\n                <div className=\"smallCardContainer\">\n                    <p className=\"text-center pt-2  newSmallCard\">{cardTitle}</p>\n                    <div className=\"col-12 profitCard\">\n                        <div className=\"Small\">\n                            <div className=\"leaderImageSmall mx-auto\">\n                                <img src={`${apiImage}${cardStats[0]._id.image}`} alt=\"leader\" className=\"mt-1\" />\n                            </div>\n                            {extraHeader && (\n                                <div className=\"extraHeaderSmall text-center\">\n                                    <span>{extraHeader}</span>\n                                </div>\n                            )}\n                            <div className=\"leaderDetailSmall d-flex  flex-column text-center mt-1\">\n                                <p className=\"leaderName\">1.{cardStats[0]._id.name}</p>\n                                <p className=\"leaderProfit\">\n                                    {leaderData[0]}: <span>{cardStats[0][data[0]]}</span>\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[1]}: {cardStats[0][data[1]]}\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[2]}:{cardStats[0][data[2]]}\n                                </p>\n                                <p className=\"\">\n                                    {leaderData[3]}: {cardStats[0][data[3]]}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <ol start=\"2\" className=\"bg-white m-0 p-0  secondPlayerSmall\">\n                        <li className=\"d-flex flex-row py-1\">\n                            2.\n                            <div className=\"secondPlayerImage \">\n                                <img src={`${apiImage}${cardStats[1]._id.image}`} alt=\"\" />\n                            </div>\n                            <span className=\"mx-1\">{cardStats[1]._id.name}- </span>\n                            {playersData[0]}\n                            <span className=\"mx-1 playersNewProfit\">{cardStats[1][data[0]]}</span>{\" \"}\n                            <p className=\"smallCardLastDetail\">\n                                {\" \"}\n                                {playersData[1]}\n                                {cardStats[1][data[1]]}\n                            </p>\n                        </li>\n                        <li className=\"d-flex flex-row mt-2\">\n                            3.\n                            <div className=\"secondPlayerImage\">\n                                <img src={`${apiImage}${cardStats[2]._id.image}`} alt=\"\" />\n                            </div>\n                            <span className=\"mx-1\">{cardStats[2]._id.name}- </span>\n                            {playersData[0]}\n                            <span className=\"mx-1 playersNewProfit\">{cardStats[2][data[0]]}</span>{\" \"}\n                            <p className=\"smallCardLastDetail\">\n                                {playersData[1]}\n                                {cardStats[2][data[1]]}\n                            </p>\n                        </li>\n                    </ol>\n                    <p className=\"bg-white fullTable\">\n                        {/* {cardTitle === \"Stats By Months 💵\" && (\n                            <Link className=\"linkToNewCard\" to={`/newMainTable/newByMonths/${teamId}`}>\n                                View Full Table <AiOutlineArrowRight />\n                            </Link>\n                        )} */}\n                        {/* {cardTitle !== \"Stats By Months 💵\" && ( */}\n                        <Link\n                            className=\"linkToNewCard\"\n                            to={`/newMainTable/newStatsCard/${teamId}?stats=${stats}&cardTitle=${cardTitle}&data=${data}&leaderData=${leaderData}&headerData=${headerData}\n                                &seasonDates=${JSON.stringify(seasonDates)}`}\n                        >\n                            View Full Table <AiOutlineArrowRight />\n                        </Link>\n                        {/* )} */}\n                    </p>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default SmallCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport sideBetsService from \"../../services/sideBetsService\";\nimport { apiImage } from \"../../config.json\";\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\n\nconst SideBetsCard = ({ teamId }) => {\n  const [approvedSideBets, setApprovedSideBets] = useState([]);\n  useEffect(() => {\n    async function getApprovedSideBets() {\n      const { data: approvedSideBets } =\n        await sideBetsService.getAllApprovedSideBets(teamId);\n      setApprovedSideBets(approvedSideBets);\n      console.log(\"approvedSideBets\", approvedSideBets);\n    }\n    getApprovedSideBets();\n  }, []);\n  return (\n    <div className=\"\">\n      {approvedSideBets.length > 0 && Array.isArray(approvedSideBets) && (\n        <div className=\"vsContainerFather\">\n          <div className=\"sideBetContainer vsContainer\">\n            <p className=\"pt-3 ps-3  totalProfitNewCard \">Side Bets 🫵🏻</p>\n            <div className=\" d-flex justify-content-around\">\n              <div className=\"sideBetPlayerOne\">\n                <div className=\"leaderImageSmall mx-auto\">\n                  <img\n                    src={`${apiImage}${approvedSideBets[0].masterPlayer.image}`}\n                    alt=\"leader\"\n                    className=\"mt-1\"\n                  />\n                </div>\n              </div>\n              <div className=\"sideBetPlayerTwo\">\n                <div className=\"leaderImageSmall mx-auto\">\n                  <img\n                    src={`${apiImage}${approvedSideBets[0].slavePlayer.image}`}\n                    alt=\"leader\"\n                    className=\"mt-1\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-evenly\">\n              <div className=\"playerOneStats\">\n                <p>{approvedSideBets[0].masterPlayer.nickName}</p>\n              </div>\n              <div className=\"vsDatak text-center\">\n                <p>VS</p>\n                <p>Bet Sum:{approvedSideBets[0].sideBetSum}</p>\n                <p>\n                  Start Date:\n                  {new Date(approvedSideBets[0].startDate).toLocaleDateString(\n                    \"en-US\"\n                  )}\n                </p>\n                <p>\n                  End Date:\n                  {new Date(approvedSideBets[0].endDate).toLocaleDateString(\n                    \"en-US\"\n                  )}\n                </p>\n              </div>\n              <div className=\"playerTwoStats\">\n                <p>{approvedSideBets[0].slavePlayer.nickName}</p>\n              </div>\n            </div>\n          </div>\n          <p className=\"bg-white fullTable\">\n            <Link className=\"linkToNewCard\" to={`/side-bets/${teamId}`}>\n              View Full Table <AiOutlineArrowRight />\n            </Link>\n          </p>\n        </div>\n      )}\n      {!Array.isArray(approvedSideBets) && (\n        <div className=\"noSideBets\">\n          <p className=\"text-danger\">{approvedSideBets}</p>\n          <button className=\"btn btn-primary\">Create New Side Bet</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SideBetsCard;\n","import React from \"react\";\n\nconst TotalStatsForTeam = ({ totalStats }) => {\n  return (\n    <div className=\"totalStatsForMainTable \">\n      <div className=\"row totalStatsForTeam\">\n        <div className=\"col-3 \">\n          Total Cash:<br></br>\n          {totalStats[0].totalCashing}💵\n        </div>\n        <div className=\"col-3\">\n          Total Hours:<br></br>\n          {totalStats[0].totalHoursPlayed}⏳\n        </div>\n        <div className=\"col-3\">\n          Total Games:<br></br>\n          {totalStats[0].totalGames}🃏\n        </div>\n        <div className=\"col-3\">\n          Last Game:<br></br>\n          {totalStats[0].lastGamePlayed}🏆\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TotalStatsForTeam;\n","import React, { useState, useEffect } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\nconst SeasonPick = ({ teamId, updateSeasonDates }) => {\n    const [seasons, setSeasons] = useState({});\n    const [seasonPick, setSeasonPick] = useState(\"\");\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n    useEffect(() => {\n        async function getSeasons() {\n            const { data: seasons } = await gameService.GetSeasonYears(teamId);\n            setSeasons(seasons);\n        }\n        getSeasons();\n    }, []);\n    const handleSeasonPick = (e) => {\n        setSeasonPick(e.target.value);\n    };\n\n    const getStartDate = (e) => {\n        setStartDate(e.target.value);\n    };\n\n    const getEndDate = (e) => {\n        setEndDate(e.target.value);\n        console.log(\"end date\", e.target.value);\n        console.log(\"start date\", startDate);\n        if (startDate) {\n            if (e.target.value <= startDate) {\n                toast.error(\"End date must be greater than start date...change your pick\");\n            }\n        } else {\n            if (e.target.value <= `${seasonPick}-01-01`) {\n                toast.error(\"End date must be greater than start date...change your pick\");\n            }\n        }\n        updateSeasonDates(startDate, e.target.value, seasonPick);\n    };\n\n    return (\n        <div className=\"container\">\n            <p className=\"text-white text-center\">Select A Season</p>\n            <div className=\"season d-flex justify-content-center\">\n                <div className=\"col-6 mt-2\">\n                    <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleSeasonPick}>\n                        {!_.isEmpty(seasons) &&\n                            seasons.map((season) => (\n                                <option value={season._id} key={season._id}>\n                                    {season._id}\n                                </option>\n                            ))}\n                    </select>\n                </div>\n            </div>\n            {seasonPick && (\n                <div className=\"seasonDates d-flex justify-content-around\">\n                    <div className=\"seasonStartDate flex-column d-flex\">\n                        <p className=\"text-primary\">Start Date</p>\n                        <input\n                            type=\"date\"\n                            className=\"w-100\"\n                            value={startDate || `${seasonPick}-01-01`}\n                            min={`${seasonPick}-01-01`}\n                            max={`${seasonPick}-12-31`}\n                            onChange={(e) => getStartDate(e)}\n                        />\n                    </div>\n                    <div className=\"seasonEndDate\">\n                        <p className=\"text-primary\">End Date</p>\n                        <input\n                            type=\"date\"\n                            className=\"w-100\"\n                            value={endDate || `${seasonPick}-12-31`}\n                            min={`${seasonPick}-01-01`}\n                            max={`${seasonPick}-12-31`}\n                            onChange={(e) => getEndDate(e)}\n                        />\n                        <p>Pick end date to see stats</p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SeasonPick;\n","import React, { useState, useEffect } from \"react\";\nimport gameService from \"../../services/gameService\";\nimport { apiImage } from \"../../config.json\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\n\nconst SmallMonthsCard = ({ teamId, seasonDates }) => {\n    const [monthsStats, setMonthsStats] = useState([]);\n    const monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ];\n    const d = new Date();\n    const monthIndex = d.getMonth();\n    const monthName = monthNames[monthIndex];\n    useEffect(() => {\n        async function getCardStats() {\n            const { data: allGamesByMonth } = await gameService.getStatsByMonth(teamId, seasonDates);\n            setMonthsStats(allGamesByMonth);\n        }\n        getCardStats();\n    }, [seasonDates]);\n\n    return (\n        <>\n            {monthsStats.length > 0 && (\n                <div className=\"smallCardContainer\">\n                    <p className=\"text-center pt-2  newSmallCard\">Stats By Months 💵</p>\n                    <div className=\"col-12 profitCard\">\n                        <div className=\"Small\">\n                            <div className=\"leaderImageSmall mx-auto\">\n                                <img\n                                    src={`${apiImage}${monthsStats[0].players[0].image}`}\n                                    alt=\"leader\"\n                                    className=\"mt-1\"\n                                />\n                            </div>\n\n                            <div className=\"extraHeaderSmall text-center\">\n                                <span>{monthName}</span>\n                            </div>\n\n                            <div className=\"leaderDetailSmall d-flex  flex-column text-center mt-1\">\n                                <p className=\"leaderName\">1.{monthsStats[0].players[0].name}</p>\n                                <p className=\"leaderProfit\">\n                                    Total Profit: <span>{monthsStats[0].players[0].totalProfit}</span>\n                                </p>\n                                <p className=\"\">Avg Profit: {monthsStats[0].players[0].roundedAvgProfit}</p>\n                                <p className=\"\">Total Games:{monthsStats[0].players[0].totalGames}</p>\n                                <p className=\"\">Avg Cashing: {monthsStats[0].players[0].roundedAvgCashing}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <ol start=\"2\" className=\"bg-white m-0 p-0  secondPlayerSmall\">\n                        <li className=\"d-flex flex-row py-1\">\n                            2.\n                            <div className=\"secondPlayerImage \">\n                                <img src={`${apiImage}${monthsStats[0].players[1].image}`} alt=\"\" />\n                            </div>\n                            <span className=\"mx-1\">{monthsStats[0].players[1].name}- </span>\n                            Profit\n                            <span className=\"mx-1 playersNewProfit\">{monthsStats[0].players[1].totalProfit}</span>{\" \"}\n                            <p className=\"smallCardLastDetail\">\n                                {\" \"}\n                                AP\n                                {monthsStats[0].players[1].roundedAvgProfit}\n                            </p>\n                        </li>\n                        <li className=\"d-flex flex-row py-1\">\n                            3.\n                            <div className=\"secondPlayerImage \">\n                                <img src={`${apiImage}${monthsStats[0].players[2].image}`} alt=\"\" />\n                            </div>\n                            <span className=\"mx-1\">{monthsStats[0].players[2].name}- </span>\n                            Profit\n                            <span className=\"mx-1 playersNewProfit\">{monthsStats[0].players[2].totalProfit}</span>{\" \"}\n                            <p className=\"smallCardLastDetail\">\n                                {\" \"}\n                                AP\n                                {monthsStats[0].players[2].roundedAvgProfit}\n                            </p>\n                        </li>\n                    </ol>\n                    <p className=\"bg-white fullTable\">\n                        <Link\n                            className=\"linkToNewCard\"\n                            to={`/newMainTable/newByMonths/${teamId}?seasonDates=${JSON.stringify(seasonDates)}`}\n                        >\n                            View Full Table <AiOutlineArrowRight />\n                        </Link>\n                    </p>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default SmallMonthsCard;\n","import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport ClockSpinner from \"./clockSpinner\";\nimport teamService from \"../../services/teamService\";\nimport gameServices from \"../../services/gameService\";\nimport scheduleGameService from \"../../services/scheduleGameService\";\nimport { apiImage } from \"../../config.json\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { MdDateRange } from \"react-icons/md\";\n\nimport AllGamesList from \"./allGamesList\";\nimport BigCard from \"./bigCard\";\nimport PageHeader from \"../common/pageHeader\";\nimport PlayersImages from \"./playersImages\";\nimport SmallCard from \"./smallCard\";\nimport SideBetsCard from \"./sideBetsCard\";\nimport TotalStatsForTeam from \"./totalStatsForTeam\";\nimport SeasonPick from \"./seasonPick\";\nimport SmallMonthsCard from \"./smallMonthsCard\";\n\nconst NewMainTable = (props) => {\n  const teamId = props.match.params.teamId;\n  const [team, setTeam] = useState({});\n  const [totalStats, setTotalStats] = useState({});\n  const [seasonDates, setSeasonDates] = useState({});\n  const [latestScheduledGame, setLatestScheduledGame] = useState(\"\");\n\n  useEffect(() => {\n    async function getTeam() {\n      const { data: team } = await teamService.newGetTeam(teamId);\n      setTeam(team);\n    }\n    getTeam();\n    async function getTotalStatsForTeam() {\n      const { data: totalStats } = await gameServices.getTotalStatsForTeam(\n        teamId,\n        seasonDates\n      );\n      setTotalStats(totalStats);\n    }\n    getTotalStatsForTeam();\n  }, [seasonDates]);\n\n  useEffect(() => {\n    const getLatestScheduledGame = async () => {\n      const { data: scheduleGame } =\n        await scheduleGameService.getLatestScheduleGame(teamId);\n      setLatestScheduledGame(scheduleGame);\n    };\n    getLatestScheduledGame();\n  }, []);\n\n  const updateSeasonDates = (startDate, endDate, seasonPick) => {\n    startDate = startDate || `${seasonPick}-01-01`;\n    const dates = { startDate, endDate };\n    setSeasonDates(dates);\n  };\n\n  return (\n    <div className=\"container pb-3\">\n      <PageHeader\n        className=\"mb-0\"\n        titleText={new Date().getFullYear() + \" Top Stats\"}\n      />\n      {_.isEmpty(totalStats) && <ClockSpinner />}\n\n      {!_.isEmpty(team) && (\n        <div className=\"teamDetails\">\n          <div className=\"logoContainer d-flex justify-content-center \">\n            <motion.img\n              style={{\n                width: 120,\n                height: 120,\n                borderRadius: 30,\n                backgroundColor: \"#fff\",\n                border: \"2px solid gold\",\n              }}\n              animate={{ rotate: 360 }}\n              transition={{\n                type: \"spring\",\n                duration: 5,\n                bounce: 0.6,\n              }}\n              src={`${apiImage}${team.teamImage}`}\n              alt=\"team\"\n            />\n          </div>\n          <p className=\"text-center mt-2\" id=\"teamName\">\n            {team.name}\n          </p>\n          <div className=\"w-100\">\n            <div className=\"w-50 m-auto\" style={{ height: \"4em\" }}>\n              <img\n                src={`${apiImage}israel/Flag_of_Israel.gif`}\n                alt=\"\"\n                className=\"w-100 h-100\"\n              />\n            </div>\n            <div className=\"w-50 m-auto\">\n              <img\n                src={`${apiImage}israel/tovimAlihem.jpeg`}\n                className=\"w-100\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"playersImages my-2\">\n            <div className=\"row\">\n              {team.players.map((player) => (\n                <div\n                  className=\"col-2 playersImagesRounded d-flex justify-content-center\"\n                  key={player._id}\n                >\n                  <PlayersImages player={player} />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n      {!_.isEmpty(totalStats) && (\n        <>\n          <TotalStatsForTeam totalStats={totalStats} />\n          <div className=\"d-flex flex-column w-75  mx-auto mt-3\">\n            {latestScheduledGame.length < 1 && (\n              <Link\n                className=\"button-73 py-2 mb-2\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                to={`/scheduleGame/${team._id}`}\n              >\n                Schedule A New Game\n                <MdDateRange className=\"ms-2\" />\n                <i className=\"ps-2 fas fa-angle-double-right\"></i>\n              </Link>\n            )}\n            {latestScheduledGame.length > 0 && (\n              <Link\n                className=\"button-77 py-2 mb-2\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                to={`/JoinScheduledGame/${latestScheduledGame[0]?._id}`}\n              >\n                Join a scheduled game\n                <MdDateRange className=\"ms-2\" />\n                <i className=\"ps-2 fas fa-angle-double-right\"></i>\n              </Link>\n            )}\n          </div>\n          <div className=\"odds text-center\">\n            <a\n              href=\"https://www.cardschat.com/poker/tools/poker-odds-calculator/\"\n              target=\"_blank\"\n            >\n              Texas Odds Calculator\n            </a>\n          </div>\n\n          <SeasonPick teamId={teamId} updateSeasonDates={updateSeasonDates} />\n        </>\n      )}\n      {totalStats == \"No Games Played On These Dates\" && (\n        <p className=\"text-center text-danger\">{totalStats}</p>\n      )}\n      {!_.isEmpty(totalStats) && Array.isArray(totalStats) && (\n        <div className=\"playersCardsNew mt-3 pb-3\">\n          <div className=\"row mx-2\">\n            <BigCard\n              teamId={teamId}\n              cardTitle=\"Total Profit 💸\"\n              stats=\"profitsStats\"\n              data={[\n                \"totalProfit\",\n                \"totalGames\",\n                \"gamesWithPlus\",\n                \"avgProfit\",\n                \"avgCashing\",\n              ]}\n              playersData={[\"Total Profit\", \"TG\", \"GIP\", \"AP\", \"AC\"]}\n              leaderData={[\n                \"Profit\",\n                \"Total Games\",\n                \"Games In Plus\",\n                \"Average Profit\",\n                \"Average Cashing\",\n              ]}\n              headerData={[\"P\", \"TG\", \"GIP\", \"AP\", \"AC\"]}\n              seasonDates={seasonDates}\n            />\n            <div className=\"col-6 my-3\">\n              <SmallCard\n                teamId={teamId}\n                cardTitle=\"Top 10 Profits 🔝\"\n                stats=\"topTenProfits\"\n                data={[\"profit\", \"date\", \"cashInHand\", \"cashing\"]}\n                playersData={[\"P:\", \"D:\", \"CIN\", \"C\"]}\n                leaderData={[\"Profit\", \"Date\", \"Cash In Hand\", \"Cashing\"]}\n                headerData={[\"P\", \"D\", \"CIH\", \"C\"]}\n                seasonDates={seasonDates}\n              />\n            </div>\n            <div className=\"col-6 mt-3\">\n              <SmallCard\n                teamId={teamId}\n                cardTitle=\"Head To Head 👊\"\n                stats=\"head2head\"\n                data={[\n                  \"totalPoints\",\n                  \"totalGames\",\n                  \"avgPoints\",\n                  \"successPercentage\",\n                ]}\n                playersData={[\"Points: \", \"AP: \", \"\", \"\"]}\n                leaderData={[\n                  \"Total Points\",\n                  \"Total Games\",\n                  \"Avg Points\",\n                  \"Success %\",\n                ]}\n                headerData={[\"TP\", \"TG\", \"AP\", \"SP %\"]}\n                seasonDates={seasonDates}\n              />\n            </div>\n            <BigCard\n              teamId={teamId}\n              cardTitle=\"Hourly Stats ⏳\"\n              stats=\"getHourlyStats\"\n              data={[\n                \"profitPerHour\",\n                \"cashingPerHour\",\n                \"hoursPlayed\",\n                \"totalGames\",\n                \"avgHourPerGame\",\n              ]}\n              playersData={[\"Profit/H\", \"CPH\", \"HP\", \"TG\", \"AHPG\"]}\n              leaderData={[\n                \"Profit Per Hour\",\n                \"Cashing Per Hour\",\n                \"Hours Played\",\n                \"Total Games\",\n                \"Average Hour Per Game\",\n              ]}\n              headerData={[\"P/H\", \"CPH\", \"HP\", \"TG\", \"AHPG\"]}\n              seasonDates={seasonDates}\n            />\n            <div className=\"col-6 mt-3\">\n              <SmallMonthsCard teamId={teamId} seasonDates={seasonDates} />\n\n              {/* <SmallCard\n                                teamId={teamId}\n                                cardTitle=\"Stats By Months 💵\"\n                                stats=\"getStatsByMonth\"\n                                data={[\"totalProfit\", \"roundedAvgProfit\", \"numOfGames\", \"roundedAvgCashing\"]}\n                                playersData={[\"Profit: \", \"AP: \", \"\", \"\"]}\n                                leaderData={[\"Total Profit\", \"Avg Profit\", \"Total Games\", \"Avg Cashing\"]}\n                                extraHeader={\n                                    !_.isEmpty(seasonDates)\n                                        ? new Date(seasonDates.endDate).toLocaleString(\"en-US\", {\n                                              month: \"long\",\n                                          })\n                                        : new Date().toLocaleString(\"default\", {\n                                              month: \"long\",\n                                          })\n                                }\n                                seasonDates={seasonDates}\n                            /> */}\n            </div>\n            <div className=\"col-6 mt-3\">\n              <SmallCard\n                teamId={teamId}\n                cardTitle=\"Top 10 Comebacks\"\n                stats=\"getTopComebacks\"\n                data={[\"cashing\", \"profit\", \"date\", \"cashInHand\"]}\n                playersData={[\"Cashing: \", \"P: \", \"\", \"\"]}\n                leaderData={[\"Cashing\", \"Profit\", \"Date\", \"Cash In Hand\"]}\n                headerData={[\"C\", \"P\", \"D\", \"CIH\"]}\n                seasonDates={seasonDates}\n              />\n            </div>\n            <div className=\"col-12 mt-3\">\n              <SideBetsCard teamId={teamId} />\n            </div>\n            <div className=\"col-6 mt-3\">\n              <SmallCard\n                teamId={teamId}\n                cardTitle=\"Winning Streak 🤫\"\n                stats=\"getWiningStreak\"\n                data={[\n                  \"maxWinStreak\",\n                  \"currWinStreak\",\n                  \"successPercentage\",\n                  \"won\",\n                ]}\n                playersData={[\"MWS: \", \"CWS: \", \"\", \"\"]}\n                leaderData={[\n                  \"Max Win Streak\",\n                  \"Current Win Streak\",\n                  \"% Success\",\n                  \"Total Games In Plus\",\n                ]}\n                headerData={[\"MWS\", \"CWS\", \"%S\", \"TGIP\"]}\n                seasonDates={seasonDates}\n              />\n            </div>\n            <div className=\"col-12 mt-3\">\n              <AllGamesList teamId={teamId} seasonDates={seasonDates} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NewMainTable;\n","import React, { useState, useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { FormGroup, FormLabel, FormControl, Button } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport PageHeader from \"../common/pageHeader\";\nimport { apiImage } from \"../../config.json\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport teamService from \"../../services/teamService\";\nimport userService from \"../../services/userService\";\nimport scheduleGameService from \"../../services/scheduleGameService\";\n\nconst SchedulaGameForm = (props) => {\n  const teamId = props.match.params.teamId;\n  const [team, setTeam] = useState({});\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const getTeam = async () => {\n      const { data: team } = await teamService.newGetTeam(teamId);\n      setTeam(team);\n    };\n    getTeam();\n    const fetchUser = async () => {\n      const me = await userService.getUserDetails();\n      setUser(me.data);\n    };\n    fetchUser();\n  }, []);\n  return (\n    //put team image here\n    <div className=\"container pb-3\">\n      <PageHeader titleText=\"Schedule Game\" />\n\n      <Formik\n        initialValues={{\n          date: \"\",\n          host: \"TBA\",\n          guest: \"\",\n        }}\n        validate={(values) => {\n          const errors = {};\n          if (!values.date) {\n            errors.date = \"Date is required\";\n          }\n\n          if (!values.guest) {\n            errors.guest = \"Answer is required\";\n          }\n          return errors;\n        }}\n        onSubmit={async (values) => {\n          // Handle form submission here\n\n          const answer = {};\n          answer.gameDate = values.date;\n          answer.hostId = values.host ? values.host : \"TBA\";\n          answer.teamId = teamId;\n          answer.teamName = team.name;\n          answer.teamImage = team.teamImage;\n          answer.guests = [];\n          const guest1 = {};\n          guest1.guestId = user._id;\n          guest1.guestAnswer = values.guest;\n          answer.guests.push(guest1);\n\n          const { data } = await scheduleGameService.saveNewScheduledGame(\n            answer\n          );\n          if (data._id) {\n            toast.success(\"Game Scheduled Successfully\");\n            props.history.push(`/scheduledGame/${teamId}`);\n          } else {\n            toast.error(\"Something went wrong\");\n          }\n        }}\n      >\n        <div className=\"row\">\n          <div\n            className=\"logoContainer w-50 h-50  d-flex  mx-auto mt-2\"\n            id=\"logoContainer\"\n          >\n            <img\n              src={`${apiImage}${team.teamImage}`}\n              alt=\"teamLogo\"\n              className=\"h-100 w-100 \"\n            />\n          </div>\n          <div className=\"col-12 d-flex justify-content-center\">\n            <Form>\n              <FormGroup className=\"d-flex flex-column\">\n                <FormLabel htmlFor=\"date\" className=\"goldFont\">\n                  Pick A Date\n                </FormLabel>\n                <Field\n                  type=\"date\"\n                  name=\"date\"\n                  id=\"date\"\n                  className=\"form-control\"\n                  min={new Date().toISOString().split(\"T\")[0]}\n                />\n                <ErrorMessage\n                  name=\"date\"\n                  component=\"div\"\n                  className=\"text-danger\"\n                />\n              </FormGroup>\n              <FormGroup className=\"d-flex flex-column\">\n                <FormLabel htmlFor=\"date\" className=\"goldFont\">\n                  Choose a host\n                </FormLabel>\n                <Field as=\"select\" name=\"host\" id=\"host\">\n                  <option value=\"\">Decide later...</option>\n                  {team.players &&\n                    team.players.map((player) => (\n                      <option key={player._id} value={player._id}>\n                        {player.nickName}\n                      </option>\n                    ))}\n                </Field>\n                <ErrorMessage\n                  name=\"host\"\n                  component=\"div\"\n                  className=\"text-danger\"\n                />\n              </FormGroup>\n              <FormGroup className=\"d-flex flex-column my-3\">\n                <FormLabel htmlFor=\"guest\" className=\"goldFont\">\n                  Check the box to register to the game\n                </FormLabel>\n                <div className=\"userDetails nav-item nav-link d-flex pb-0\">\n                  <Avatar src={`${apiImage}${user.image}`} alt={user.name} />\n                  <p className=\"ms-2 text-primary\">{user.nickName}</p>\n                </div>\n                <div className=\"d-flex justify-content-around col-6 mt-2\">\n                  <Field\n                    type=\"radio\"\n                    name=\"guest\"\n                    id=\"guest-yes\"\n                    className=\"form-check-input\"\n                    value=\"Yes\"\n                  />\n                  <label\n                    htmlFor=\"guest-yes\"\n                    className=\"text-success bg-white px-2\"\n                  >\n                    Yes\n                  </label>\n                  <Field\n                    type=\"radio\"\n                    name=\"guest\"\n                    id=\"guest-no\"\n                    className=\"form-check-input\"\n                    value=\"No\"\n                  />\n                  <label\n                    htmlFor=\"guest-no\"\n                    className=\"text-danger bg-white px-2\"\n                  >\n                    No\n                  </label>\n                </div>\n                <ErrorMessage\n                  name=\"guest\"\n                  component=\"div\"\n                  className=\"text-danger\"\n                />\n              </FormGroup>\n\n              <Button type=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </Form>\n          </div>\n        </div>\n      </Formik>\n    </div>\n  );\n};\n\nexport default SchedulaGameForm;\n","import React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport ClockSpinner from \"../newMainTable/clockSpinner\";\nimport _ from \"lodash\";\nimport PageHeader from \"../common/pageHeader\";\nimport { apiImage } from \"../../config.json\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport teamService from \"../../services/teamService\";\nimport scheduleGameService from \"../../services/scheduleGameService\";\n\nconst SchedulaGame = (props) => {\n  const teamId = props?.match?.params?.teamId || props?.teamId;\n\n  const [team, setTeam] = useState({});\n  const [game, setGame] = useState({});\n  console.log(\"🚀 ~ file: ScheduledGame.jsx:18 ~ game:\", game);\n  const [host, setHost] = useState({});\n\n  useEffect(() => {\n    const getTeam = async () => {\n      const { data: team } = await teamService.newGetTeam(teamId);\n      setTeam(team);\n    };\n    getTeam();\n\n    const getLatestScheduleGame = async () => {\n      const { data: scheduleGame } =\n        await scheduleGameService.getLatestScheduleGame(teamId);\n      setGame(scheduleGame[0]);\n    };\n    getLatestScheduleGame();\n  }, []);\n\n  const updateHost = async () => {\n    const hostId = host._id;\n    const updateHost = await scheduleGameService.updateHost(game._id, hostId);\n    if (updateHost.status === 200) {\n      const saveBtn = document.querySelector(\".btn-primary\");\n      saveBtn.classList.add(\"d-none\");\n      toast.success(\"Host updated successfully\");\n      setGame(updateHost.data);\n    }\n  };\n\n  //onchange select option\n  const changeHost = (e) => {\n    let chosenHost = {};\n    const hostId = e.target.value;\n    if (hostId === \"TBA\") {\n      chosenHost = { _id: \"TBA\", nickName: \"TBA\", image: \"TBA\" };\n    } else {\n      chosenHost = team.players.find((player) => player._id === hostId);\n    }\n    setHost(chosenHost);\n\n    const saveBtn = document.querySelector(\".btn-primary\");\n    saveBtn.classList.remove(\"d-none\");\n  };\n\n  return (\n    //put team image here\n    <div className=\"container pb-3\">\n      <PageHeader titleText=\"Scheduled Games\" />\n      {_.isEmpty(game) && <ClockSpinner />}\n      <div className=\"row\">\n        <div className=\"col-12 col-lg-6\">\n          {game && (\n            <div className=\"card\">\n              <div\n                className=\"logoContainer w-25 h-25 d-flex  mx-auto mt-2\"\n                id=\"logoContainer\"\n              >\n                <img\n                  src={`${apiImage}${team.teamImage}`}\n                  className=\"card-img-top\"\n                  alt=\"teamLogo\"\n                />\n              </div>\n              <div className=\"card-body\">\n                <h3 className=\"card-title text-primary justify-content-center mt-0\">\n                  Date: {new Date(game.gameDate).toLocaleDateString()}\n                </h3>\n                <h4 className=\"text-center\">Host:</h4>\n                <div className=\"hostDetails goldFont d-flex flex-column justify-content-center\">\n                  <Avatar\n                    alt={game?.host?.nickName}\n                    src={\n                      game?.host?.nickName === \"TBA\"\n                        ? `${apiImage}images/donkey.webp`\n                        : `${apiImage}${game?.host?.image}`\n                    }\n                    className=\"mx-auto\"\n                    style={{ width: \"4em\", height: \"4em\" }}\n                  />\n                  {game?.host?.nickName === \"TBA\" ? (\n                    <h5 className=\"text-center\">Decide Later...</h5>\n                  ) : (\n                    <h5 className=\"text-center\">{game?.host?.nickName}</h5>\n                  )}\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                  Change host:&nbsp;\n                  <select name=\"host\" id=\"host\" onChange={changeHost}>\n                    <option value=\"TBA\">Decide later...</option>\n                    {team.players &&\n                      team.players.map((player) => (\n                        <option key={player._id} value={player._id}>\n                          {player.nickName}\n                        </option>\n                      ))}\n                  </select>\n                </div>\n                <div className=\"d-flex justify-content-center mt-2 \">\n                  <button\n                    className=\"btn btn-primary d-none\"\n                    onClick={updateHost}\n                  >\n                    Save Changes\n                  </button>\n                </div>\n              </div>\n              <p className=\"card-text text-success fw-bolder text-decoration-underline\">\n                Players approved:\n              </p>\n              <ul className=\"list-group list-group-flush\">\n                {game?.guests?.map((guest) => {\n                  if (guest.guestAnswer === \"Yes\") {\n                    return (\n                      <li\n                        className=\"list-group-item d-flex align-items-center justify-content-between \"\n                        key={guest._id}\n                      >\n                        {\" \"}\n                        <span className=\"d-flex align-items-center\">\n                          ✅\n                          <Avatar\n                            alt={guest.nickName}\n                            src={`${apiImage}${guest.image}`}\n                            className=\"ms-2\"\n                          />\n                          {guest.nickName}\n                        </span>\n                        <span>\n                          {new Date(guest.createdAt).toLocaleString(\"en-GB\", {\n                            day: \"2-digit\",\n                            month: \"2-digit\",\n                            year: \"2-digit\",\n                            hour: \"2-digit\",\n                            minute: \"2-digit\",\n                          })}\n                        </span>\n                      </li>\n                    );\n                  }\n                  return null;\n                })}\n              </ul>\n              <p className=\"card-text text-danger  fw-bolder text-decoration-underline\">\n                <b>Players declined:</b>\n              </p>\n              <ul className=\"list-group list-group-flush\">\n                {game?.guests?.map((guest) => {\n                  if (guest.guestAnswer === \"No\") {\n                    return (\n                      <li\n                        className=\"list-group-item d-flex align-items-center justify-content-between \"\n                        key={guest._id}\n                      >\n                        <span className=\"d-flex align-items-center \">\n                          ❌\n                          <Avatar\n                            alt={guest.nickName}\n                            src={`${apiImage}${guest.image}`}\n                            className=\"ms-2\"\n                          />\n                          {guest.nickName}\n                        </span>\n                        <span>\n                          {new Date(guest.createdAt).toLocaleString(\"en-GB\", {\n                            day: \"2-digit\",\n                            month: \"2-digit\",\n                            year: \"2-digit\",\n                            hour: \"2-digit\",\n                            minute: \"2-digit\",\n                          })}\n                        </span>\n                      </li>\n                    );\n                  }\n                  return null;\n                })}\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n      <Link\n        to={`/newMainTable/${team._id}`}\n        className=\"button-77 py-2 my-2 d-block mx-auto text-center text-decoration-none text-white bg-primary col-6 col-md-4 col-lg\"\n        data-toggle=\"tooltip\"\n        data-placement=\"top\"\n      >\n        Back to team page\n      </Link>\n    </div>\n  );\n};\n\nexport default SchedulaGame;\n","import React, { useState, useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { FormGroup, FormLabel, FormControl, Button } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { apiImage } from \"../../config.json\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport scheduleGameService from \"../../services/scheduleGameService\";\nimport userService from \"../../services/userService\";\nimport SchedulaGame from \"./ScheduledGame\";\n\nconst JoinScheduledGame = (props) => {\n  const gameid = props.match.params.teamId;\n  const [game, setGame] = useState({});\n\n  const [user, setUser] = useState({});\n  const [guest, setGuest] = useState(\"\");\n\n  useEffect(() => {\n    const fetchGame = async () => {\n      const { data: game } = await scheduleGameService.getScheduledGameById(\n        gameid\n      );\n      setGame(game);\n    };\n    fetchGame();\n\n    const fetchUser = async () => {\n      const me = await userService.getUserDetails();\n      setUser(me.data);\n    };\n    fetchUser();\n  }, []);\n  useEffect(() => {\n    if (game && game.guests) {\n      game.guests.forEach((guest) => {\n        if (guest.guestId === user._id) {\n          //populate the radio button with the guest answer\n          setGuest(guest);\n        } else {\n          setGuest([{ guestAnswer: \"\" }]);\n        }\n      });\n    }\n  }, [game, user]);\n\n  return (\n    <div className=\"container\">\n      {game.teamId && <SchedulaGame teamId={game.teamId} />}\n      {guest && (\n        <Formik\n          initialValues={{\n            //check the radio button with the guest answer\n            guest: guest ? guest.guestAnswer : undefined,\n          }}\n          validate={(values) => {\n            const errors = {};\n\n            if (!values.guest) {\n              errors.guest = \"Answer is required\";\n            }\n            return errors;\n          }}\n          onSubmit={async (values) => {\n            // Handle form submission here\n            //console.log(values);\n            const answer = {\n              guestAnswer: values.guest,\n              guestId: user._id,\n              gameId: game._id,\n            };\n\n            const { data } = await scheduleGameService.updateScheduledGame(\n              answer\n            );\n\n            if (data) {\n              toast.success(\"Your answer was saved successfully\");\n              props.history.push(`/scheduledGame/${game.teamId}`);\n            } else {\n              toast.error(\"Something went wrong\");\n            }\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <div className=\"row\">\n                <div className=\"col-12 col-md-6 d-flex justify-content-center\">\n                  <FormGroup className=\"d-flex flex-column mb-3\">\n                    <FormLabel htmlFor=\"guest\" className=\"goldFont\">\n                      Check the box to register to the game\n                    </FormLabel>\n                    <div className=\"userDetails nav-item nav-link d-flex pb-0 justify-content-center\">\n                      <Avatar\n                        src={`${apiImage}${user.image}`}\n                        alt={user.name}\n                      />\n                      <p className=\"ms-2 text-primary\">{user.nickName}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                      <div className=\"d-flex justify-content-around col-6 mt-2\">\n                        <Field\n                          type=\"radio\"\n                          name=\"guest\"\n                          id=\"guest-yes\"\n                          className=\"form-check-input\"\n                          value=\"Yes\"\n                        />\n                        <label\n                          htmlFor=\"guest-yes\"\n                          className=\"text-success bg-white px-2\"\n                        >\n                          Yes\n                        </label>\n                        <Field\n                          type=\"radio\"\n                          name=\"guest\"\n                          id=\"guest-no\"\n                          className=\"form-check-input\"\n                          value=\"No\"\n                        />\n                        <label\n                          htmlFor=\"guest-no\"\n                          className=\"text-danger bg-white px-2\"\n                        >\n                          No\n                        </label>\n                      </div>\n                      <ErrorMessage\n                        name=\"guest\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </div>\n                    <Button\n                      variant=\"primary\"\n                      className=\"mx-auto d-block px-5 mt-3\"\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                    >\n                      Submit\n                    </Button>\n                  </FormGroup>\n                </div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nexport default JoinScheduledGame;\n","import React, { useEffect, useState } from \"react\";\nimport \"../src/css/main.css\";\nimport Footer from \"./components/footer\";\nimport Home from \"./components/home\";\nimport SideNavbar from \"./components/sideNavbar\";\nimport ByMonthsDashboard from \"./components/newMainTable/byMonthsDashboard\";\nimport Signin from \"./components/signin\";\nimport Logout from \"./components/logout\";\nimport EditUser from \"./components/forms/editUser\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport userService from \"./services/userService\";\nimport ProtectedRoute from \"./components/common/protectedRoutes\";\nimport MyTeams from \"./components/myTeams\";\nimport EditPlayer from \"./components/editPlayer\";\nimport EditTeam from \"./components/editTeam\";\nimport SelectPlayers from \"./components/selectPlayers\";\nimport JoinTeam from \"./components/joinTeam\";\nimport MainTable from \"./components/mainTable\";\nimport Demo from \"./components/demo\";\nimport About from \"./components/about\";\nimport MyStats from \"./components/personalStats/myStats\";\nimport CardTable from \"./components/topStats/cardTable\";\nimport SuccessCard from \"./components/topStats/successCard\";\nimport CurrMonthCard from \"./components/topStats/currMonthCard\";\nimport ProfitsCard from \"./components/topStats/profitsCard\";\nimport SignUp from \"./components/forms/signUp\";\nimport NewGame from \"./components/games/newGame\";\nimport NewStatsCard from \"./components/newMainTable/newStatsCard/newStatsCard\";\nimport GameEnd from \"./components/gameEnd\";\nimport H2hTable from \"./components/h2h/h2hTable\";\nimport TeamSignUp from \"./components/forms/teamSignUp\";\nimport EditGames from \"./components/games/editGames\";\nimport PlayerStats from \"./components/personalStats/playerStats\";\nimport StatsPerHourCard from \"./components/topStats/statsPerHourCard\";\nimport MonthlyStats from \"./components/topStats/monthlyStats\";\nimport sidebetsMain from \"./components/sidebets/sidebetsMain\";\nimport NewSideBet from \"./components/sidebets/NewSideBet\";\nimport NewMainTable from \"./components/newMainTable/newMainTable\";\nimport SchedulaGameForm from \"./components/scheduleGame/ScheduledGameForm\";\nimport SchedulaGame from \"./components/scheduleGame/ScheduledGame\";\nimport JoinScheduledGame from \"./components/scheduleGame/JoinScheduledGame\";\n\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"G-MPD41JDBPV\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\nfunction App() {\n  const [user, setUser] = useState({});\n  const [details, setDetails] = useState({});\n  useEffect(() => {\n    const fetchUser = async () => {\n      const me = await userService.getCurrentUser();\n      setUser(me);\n    };\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const me = await userService.getUserDetails();\n      setDetails(me.data);\n    };\n    fetchUser();\n  }, []);\n\n  // console.log(details);\n  // const style = {\n  //   minHeight: 780,\n  // };\n  return (\n    <React.Fragment>\n      <ToastContainer />\n\n      <header>\n        <SideNavbar\n          user={user}\n          details={details}\n          pageWrapId={\"page-wrap\"}\n          outerContainerId={\"App\"}\n        />\n      </header>\n      <main className=\"main\">\n        <HashRouter user={user}>\n          <Switch>\n            <ProtectedRoute path=\"/my-stats/edit/:id\" component={EditPlayer} />\n            <ProtectedRoute\n              path=\"/my-stats/edit_player/:id\"\n              component={EditUser}\n              user={user}\n            />\n            <ProtectedRoute\n              path=\"/my-stats/:id\"\n              component={MyStats}\n              user={user}\n            />\n            <ProtectedRoute\n              path=\"/my-teams/edit/:teamId\"\n              component={EditTeam}\n            />\n            <ProtectedRoute\n              path=\"/my-teams\"\n              component={MyTeams}\n              user={user}\n              d={details}\n            />\n            <ProtectedRoute\n              path=\"/create-team\"\n              user={user}\n              component={TeamSignUp}\n            />\n            <ProtectedRoute\n              path=\"/new-game/:teamId\"\n              component={SelectPlayers}\n            />\n            <ProtectedRoute\n              path=\"/join-team\"\n              component={JoinTeam}\n              user={user}\n            />\n            <ProtectedRoute path=\"/edit-games/:teamId\" component={EditGames} />\n            <ProtectedRoute path=\"/games/:gameId\" component={NewGame} />\n            <ProtectedRoute path=\"/last-game/:teamId\" component={GameEnd} />\n            <ProtectedRoute path=\"/tables/h2h/:teamId\" component={H2hTable} />\n            <ProtectedRoute path=\"/main-table/:teamId\" component={MainTable} />\n            <ProtectedRoute\n              path=\"/tables/success/:teamId\"\n              component={SuccessCard}\n            />\n            <ProtectedRoute\n              path=\"/tables/monthlyStats/:year/:currentMonth/:teamId\"\n              component={CurrMonthCard}\n            />\n            <ProtectedRoute\n              path=\"/tables/monthlyStats/:teamId\"\n              component={MonthlyStats}\n            />\n            <ProtectedRoute\n              path=\"/tables/profits/top-ten/:teamId\"\n              component={ProfitsCard}\n            />\n            <ProtectedRoute\n              path=\"/tables/:cardName/:teamId\"\n              component={CardTable}\n            />\n            <ProtectedRoute path=\"/players-stats/:id\" component={PlayerStats} />\n            <ProtectedRoute\n              path=\"/stats-per-hour/:teamId\"\n              component={StatsPerHourCard}\n            />\n            <ProtectedRoute\n              path=\"/side-bets/new-sidebet/:teamId\"\n              component={NewSideBet}\n            />\n            <ProtectedRoute\n              path=\"/side-bets/:teamId\"\n              component={sidebetsMain}\n            />\n            <ProtectedRoute\n              path=\"/newMainTable/newStatsCard/:teamId\"\n              component={NewStatsCard}\n            />\n            <ProtectedRoute\n              path=\"/newMainTable/newByMonths/:teamId\"\n              component={ByMonthsDashboard}\n            />\n            <ProtectedRoute\n              path=\"/newMainTable/:teamId\"\n              component={NewMainTable}\n            />\n            <ProtectedRoute\n              path=\"/scheduleGame/:teamId\"\n              component={SchedulaGameForm}\n            />\n            <ProtectedRoute\n              path=\"/scheduledGame/:teamId\"\n              component={SchedulaGame}\n            />\n            <ProtectedRoute\n              path=\"/joinScheduledGame/:teamId\"\n              component={JoinScheduledGame}\n            />\n            <Route path=\"/demo\" component={Demo} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/signin\" component={Signin} />\n            <Route path=\"/signup\" component={SignUp} user={user} />\n            <Route exact path=\"/\" component={Home} user={user} d={details} />\n          </Switch>\n        </HashRouter>\n      </main>\n\n      <footer>\n        <Footer />\n      </footer>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/main.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"jquery/dist/jquery\";\nimport \"popper.js/dist/popper\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nreportWebVitals();\n"],"sourceRoot":""}